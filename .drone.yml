kind: pipeline
type: docker
name: backend-build

steps:
  # Build del backend con mvn install seguido de verify
  - name: build-backend
    image: maven:3.8.6-eclipse-temurin-17
    environment:
      QUARKUS_PROFILE: prod
    commands:
      - cd Hotel/backend/sistema-hoteles-be
      - mvn clean install   # Instala dependencias y genera artefactos
      - mvn verify          # Ejecuta tests y genera reportes como JaCoCo
    when:
      status: [ success, failure ]
    # Reporte de tiempo al finalizar el paso usando Prometheus Pushgateway
  - name: report-build-time
    image: prom/pushgateway
    commands:
      - echo "build_backend_duration_seconds $(($SECONDS))" | curl --data-binary @- http://prometheus-pushgateway:9091/metrics/job/backend_build
    depends_on:
      - build-backend

  # SonarQube scan del backend incluyendo el reporte de cobertura
  - name: sonar-scan-backend
    image: sonarsource/sonar-scanner-cli
    user: root
    environment:
      SONAR_HOST_URL: "https://6bb968504f22.ngrok.app"
      SONAR_TOKEN:
        from_secret: sonar_token
    commands:
      - cd Hotel/backend/sistema-hoteles-be
      - sonar-scanner -X
        -Dsonar.projectKey=backend-main
        -Dsonar.sources=./
        -Dsonar.host.url=$SONAR_HOST_URL
        -Dsonar.login=$SONAR_TOKEN
        -Dsonar.ws.timeout=7200
        -Dsonar.java.binaries=target/classes
        -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml
    depends_on:
      - build-backend
    # Reporte del tiempo de ejecución del SonarQube scan
  - name: report-sonar-time
    image: prom/pushgateway
    commands:
      - echo "sonarqube_scan_duration_seconds $(($SECONDS))" | curl --data-binary @- http://prometheus-pushgateway:9091/metrics/job/sonar_scan_backend
    depends_on:
      - sonar-scan-backend

  # Actualización de contenedores después de un merge en ramas específicas
  - name: deploy-containers
    image: docker
    commands:
      - cd Hotel/
      - docker-compose down
      - docker-compose up -d
    when:
      branch:
        - dev
        - uat
        - main
      event:
        - merge
    depends_on:
      - sonar-scan-backend
    # Reporte del tiempo de despliegue
  - name: report-deploy-time
    image: prom/pushgateway
    commands:
      - echo "deploy_containers_duration_seconds $(($SECONDS))" | curl --data-binary @- http://prometheus-pushgateway:9091/metrics/job/deploy_containers
    depends_on:
      - deploy-containers

  # Notificación por correo electrónico al éxito
  - name: notify-email-success
    image: drillster/drone-email
    settings:
      host: smtp.gmail.com
      port: 587
      username: pablo.moralesm355@gmail.com
      password:
        from_secret: email_password
      from: pablo.moralesm355@gmail.com
      recipients:
        - pablo.moralesm355@gmail.com
        - pdmorales@unis.edu.gt
      subject: "Drone Build Notification - Success"
    when:
      status:
        - success
    depends_on:
      - deploy-containers

  # Notificación por correo electrónico al fallo
  - name: notify-email-failure
    image: drillster/drone-email
    settings:
      host: smtp.gmail.com
      port: 587
      username: pablo.moralesm355@gmail.com
      password:
        from_secret: email_password
      from: pablo.moralesm355@gmail.com
      recipients:
        - pablo.moralesm355@gmail.com
        - pdmorales@unis.edu.gt
      subject: "Drone Build Notification - Failure"
    when:
      status:
        - failure
    depends_on:
      - deploy-containers

trigger:
  event:
    - push
    - pull_request
    - custom
    - merge

secrets:
  - sonar_token
  - email_password