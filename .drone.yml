kind: pipeline
type: docker
name: backend-build

steps:
  # Señalar inicio del pipeline
  - name: start-pipeline
    image: curlimages/curl:latest
    commands:
      - echo "pipeline_status 1" | curl --data-binary @- http://pushgateway:9091/metrics/job/drone_pipeline

  # Build del backend con mvn install seguido de verify
  - name: build-backend
    image: maven:3.8.6-eclipse-temurin-17
    environment:
      - QUARKUS_PROFILE=prod
    commands:
      - cd Hotel/backend/sistema-hoteles-be
      - mvn clean install   # Instala dependencias y genera artefactos
      - mvn verify          # Ejecuta tests y genera reportes como JaCoCo
    when:
      status: [ success, failure ]

  # Reporte de tiempo al finalizar el paso usando Prometheus Pushgateway
  - name: report-build-time
    image: curlimages/curl:latest
    commands:
      - echo "build_backend_duration_seconds $(($SECONDS))" | curl --data-binary @- http://pushgateway:9091/metrics/job/backend_build
    depends_on:
      - build-backend

  # Captura y reporte de métricas de CPU, Memoria y Red
  - name: report-cpu-memory-network
    image: curlimages/curl:latest
    commands:
      # Métricas de CPU
      - CPU_USAGE=$(top -bn1 | grep "Cpu(s)" | awk '{print $2 + $4}')
      - echo "pipeline_cpu_usage_percent $CPU_USAGE" | curl --data-binary @- http://pushgateway:9091/metrics/job/drone_pipeline
      # Métricas de Memoria
      - MEMORY_USAGE=$(free | grep Mem | awk '{print $3}')
      - echo "pipeline_memory_usage_bytes $MEMORY_USAGE" | curl --data-binary @- http://pushgateway:9091/metrics/job/drone_pipeline
      # Métricas de Red
      - NETWORK_IO=$(ifconfig eth0 | grep "RX bytes" | awk '{print $2}' | cut -d: -f2)
      - echo "pipeline_network_io_bytes $NETWORK_IO" | curl --data-binary @- http://pushgateway:9091/metrics/job/drone_pipeline
    depends_on:
      - report-build-time

  # SonarQube scan del backend incluyendo el reporte de cobertura
  - name: sonar-scan-backend
    image: sonarsource/sonar-scanner-cli
    user: root
    environment:
      - SONAR_HOST_URL=https://6bb968504f22.ngrok.app
      - SONAR_TOKEN=${SONAR_TOKEN}
    commands:
      - cd Hotel/backend/sistema-hoteles-be
      - sonar-scanner -X \
        -Dsonar.projectKey=backend-main \
        -Dsonar.sources=./ \
        -Dsonar.host.url=$SONAR_HOST_URL \
        -Dsonar.login=$SONAR_TOKEN \
        -Dsonar.ws.timeout=7200 \
        -Dsonar.java.binaries=target/classes \
        -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml
    depends_on:
      - report-cpu-memory-network

  # Reporte del tiempo de ejecución del SonarQube scan
  - name: report-sonar-time
    image: curlimages/curl:latest
    commands:
      - echo "sonarqube_scan_duration_seconds $(($SECONDS))" | curl --data-binary @- http://pushgateway:9091/metrics/job/sonar_scan_backend
    depends_on:
      - sonar-scan-backend

  # Actualización de contenedores después de un merge en ramas específicas
  - name: deploy-containers
    image: docker
    commands:
      - cd Hotel/
      - docker-compose down
      - docker-compose up -d
    when:
      branch:
        - dev
        - uat
        - main
      event:
        - merge
    depends_on:
      - report-sonar-time

  # Reporte del tiempo de despliegue
  - name: report-deploy-time
    image: curlimages/curl:latest
    commands:
      - echo "deploy_containers_duration_seconds $(($SECONDS))" | curl --data-binary @- http://pushgateway:9091/metrics/job/deploy_containers
    depends_on:
      - deploy-containers

  # Señalar fin del pipeline
  - name: stop-pipeline
    image: curlimages/curl:latest
    commands:
      - echo "pipeline_status 0" | curl --data-binary @- http://pushgateway:9091/metrics/job/drone_pipeline

  # Notificación por correo electrónico al éxito
  - name: notify-email-success
    image: drillster/drone-email
    settings:
      host: smtp.gmail.com
      port: 587
      username: pablo.moralesm355@gmail.com
      password:
        from_secret: email_password
      from: pablo.moralesm355@gmail.com
      recipients:
        - pablo.moralesm355@gmail.com
        - pdmorales@unis.edu.gt
      subject: "Drone Build Notification - Success"
    when:
      status:
        - success
    depends_on:
      - deploy-containers

  # Notificación por correo electrónico al fallo
  - name: notify-email-failure
    image: drillster/drone-email
    settings:
      host: smtp.gmail.com
      port: 587
      username: pablo.moralesm355@gmail.com
      password:
        from_secret: email_password
      from: pablo.moralesm355@gmail.com
      recipients:
        - pablo.moralesm355@gmail.com
        - pdmorales@unis.edu.gt
      subject: "Drone Build Notification - Failure"
    when:
      status:
        - failure
    depends_on:
      - deploy-containers

trigger:
  event:
    - push
    - pull_request
    - custom
    - merge

secrets:
  - sonar_token
  - email_password
