{"ast":null,"code":"var _jsxFileName = \"/home/pmorales/Downloads/Proyecto-B2B/Hotel/frontend/sistema_hoteles/src/components/AdministrarReservas.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Button, Card, Modal, Form, Table } from 'react-bootstrap';\nimport { useUser } from './UserContext';\nimport EditReservationPage from './EditReservationPage';\nimport jsPDF from 'jspdf';\nimport 'jspdf-autotable';\nimport emailjs from 'emailjs-com';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AdministrarReservas = () => {\n  _s();\n  const [reservations, setReservations] = useState([]);\n  const {\n    user\n  } = useUser();\n  const [showEditModal, setShowEditModal] = useState(false);\n  const [currentReservation, setCurrentReservation] = useState(null);\n  const [editedReservation, setEditedReservation] = useState(null);\n  const [showCommentModal, setShowCommentModal] = useState(false);\n  const [comment, setComment] = useState('');\n  const [showHistoryModal, setShowHistoryModal] = useState(false); // para la vista\n  const [userReservations, setUserReservations] = useState([]); // para la vista\n\n  useEffect(() => {\n    if (user) {\n      fetchReservations();\n    }\n  }, [user]);\n  const fetchReservations = async () => {\n    console.log('Fetching reservations for user:', user.id);\n    try {\n      const response = await fetch(`http://localhost:8080/reservas/detalle/todas`);\n      if (response.ok) {\n        const data = await response.json();\n        console.log('Reservations fetched successfully:', data);\n        setReservations(data.map(reserva => ({\n          ...reserva,\n          tipoHabitacion: translateTipoHabitacion(reserva.tipoHabitacion),\n          idHotel: reserva.idHotel,\n          idHabitacion: reserva.idHabitacion,\n          idUsuario: reserva.idUsuario\n        })));\n      } else {\n        console.error(\"Failed to fetch reservations.\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching reservations:\", error);\n    }\n  };\n\n  // a numero\n  const translateTipoHabitacion = tipoHabitacion => {\n    const tipoHabitacionMap = {\n      1: \"Doble\",\n      2: \"Junior Suite\",\n      3: \"Suite\",\n      4: \"Gran Suite\"\n    };\n    return tipoHabitacionMap[tipoHabitacion] || \"Unknown\";\n  };\n  const calculateNights = (checkIn, checkOut) => {\n    const checkInDate = new Date(checkIn);\n    const checkOutDate = new Date(checkOut);\n    const diffTime = Math.abs(checkOutDate.getTime() - checkInDate.getTime());\n    return Math.ceil(diffTime / (1000 * 3600 * 24));\n  };\n  const handleEdit = reserva => {\n    console.log('Opening edit modal for reservation:', reserva.idReserva);\n    setCurrentReservation(reserva);\n    setShowEditModal(true);\n  };\n  const cancelarReserva = async idReserva => {\n    try {\n      const response = await fetch(`http://localhost:8080/reservas/${idReserva}/cancelar`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) {\n        throw new Error('No se pudo cancelar la reserva');\n      }\n      alert('Reserva cancelada con éxito');\n      fetchReservations(); //error tipográfico.\n    } catch (error) {\n      console.error('Error al cancelar la reserva:', error);\n      alert('Error al cancelar la reserva');\n    }\n  };\n  const actualizarReserva = async reservaActualizada => {\n    console.log('Updating reservation with:', reservaActualizada);\n    try {\n      const response = await fetch(`http://localhost:8080/reservas/${reservaActualizada.idReserva}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(reservaActualizada)\n      });\n      if (!response.ok) {\n        if (response.status === 409) {\n          // Conflicto , notifica al usuario\n          alert(\"Habitación no disponible.\");\n        } else {\n          // Otro tipo de error HTTP\n          throw new Error(`Reservation update failed: ${response.statusText}`);\n        }\n      } else {\n        console.log('Reservation updated successfully');\n        setShowEditModal(false);\n        await fetchReservations(); // Refresca lalista de reservaciones\n      }\n    } catch (error) {\n      console.error('Error updating reservation:', error);\n      alert(\"Ocurrió un error al actualizar la reserva. Por favor, intenta de nuevo.\");\n    }\n  };\n  const downloadReservationPdf = reserva => {\n    const doc = new jsPDF();\n    doc.text(\"Detalle de Reserva\", 14, 16);\n    doc.setFontSize(10);\n\n    // Información de la reserva\n    const reservationDetails = [{\n      title: \"Hotel\",\n      data: reserva.nombreHotel\n    }, {\n      title: \"Número de habitación\",\n      data: reserva.numeroHabitacion.toString()\n    }, {\n      title: \"Tipo de habitación\",\n      data: reserva.tipoHabitacion\n    }, {\n      title: \"Ubicación\",\n      data: `${reserva.ciudad}, ${reserva.pais} - ${reserva.direccion}`\n    }, {\n      title: \"Check-in\",\n      data: reserva.fechaIngreso\n    }, {\n      title: \"Check-out\",\n      data: reserva.fechaSalida\n    }, {\n      title: \"Número de noches\",\n      data: calculateNights(reserva.fechaIngreso, reserva.fechaSalida).toString()\n    }, {\n      title: \"Personas\",\n      data: reserva.capacidadPersonas.toString()\n    }, {\n      title: \"Total Reserva\",\n      data: `$${reserva.totalReserva}`\n    }, {\n      title: \"Estado\",\n      data: reserva.estadoReserva\n    }, {\n      title: \"Código de reserva\",\n      data: reserva.codigoReserva\n    }];\n    doc.autoTable({\n      head: [[\"Detalle\", \"Información\"]],\n      body: reservationDetails.map(item => [item.title, item.data]),\n      startY: 20\n    });\n    doc.save(`Reserva_${reserva.codigoReserva}.pdf`);\n  };\n  const openNotificarCambiosModal = reserva => {\n    setCurrentReservation(reserva);\n    setShowCommentModal(true);\n  };\n  const handleNotificarCambios = async reserva => {\n    const translatedRoomType = translateTipoHabitacion(reserva.tipoHabitacion.toString());\n    const templateParams = {\n      to_name: user.primer_nombre,\n      hotel_name: reserva.nombreHotel,\n      room_number: reserva.numeroHabitacion.toString() || \"No especificado\",\n      room_type: reserva.tipoHabitacion,\n      location: `${reserva.ciudad}, ${reserva.pais} - ${reserva.direccion}`,\n      check_in_date: reserva.fechaIngreso,\n      check_out_date: reserva.fechaSalida,\n      total_nights: calculateNights(reserva.fechaIngreso, reserva.fechaSalida).toString(),\n      total_people: reserva.capacidadPersonas.toString(),\n      total_price: `$${reserva.totalReserva.toFixed(2)}`,\n      reservation_status: reserva.estadoReserva,\n      reservation_code: reserva.codigoReserva.toString(),\n      to_email: user.email,\n      comment\n    };\n    try {\n      await emailjs.send('service_db-dw2', 'template_vhblb7c', templateParams, '83TAqc_7hHgnfdESC');\n      console.log('Email successfully sent!');\n    } catch (error) {\n      console.error('Error al enviar notificación de cambio:', error.text);\n    }\n    setShowCommentModal(false); // Cerrar modal\n    setComment(''); // Limpiar comentario\n  };\n  const fetchUserReservations = async reservationId => {\n    try {\n      const response = await fetch(`http://localhost:8080/reservas/historial/${reservationId}`);\n      if (!response.ok) {\n        throw new Error('No se pudo cargar el historial de reservas');\n      }\n      const historialReservas = await response.json();\n      setUserReservations(historialReservas);\n      setShowHistoryModal(true); // Muestra el modal con el historial de reservas\n    } catch (error) {\n      console.error('Error al cargar el historial de reservas:', error);\n    }\n  };\n  useEffect(() => {\n    if (user && user.id) {\n      fetchUserReservations(user.id);\n    }\n  }, [user]);\n  const formatToLocalDateString = dateString => {\n    try {\n      // Intenta parsear la fecha utilizando el constructor Date\n      const date = new Date(dateString);\n      // Verifica si la fecha es válida antes de intentar formatearla\n      if (!isNaN(date)) {\n        return date.toLocaleDateString();\n      }\n    } catch (error) {\n      console.error(\"Error al parsear la fecha:\", error);\n    }\n    // Si la fecha es inválida o no se puede parsear, retorna un valor predeterminado o una cadena vacía\n    return \"Fecha no disponible\";\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"booking-history-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-center\",\n      children: \"Historial de Reservas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }, this), reservations.length > 0 ? reservations.map(reserva => /*#__PURE__*/_jsxDEV(Card, {\n      className: \"mb-4 shadow\",\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        as: \"h5\",\n        className: \"font-weight-bold\",\n        children: [\"Reserva #\", reserva.codigoReserva, \" - \", reserva.correoElectronico]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          children: reserva.nombreHotel\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Card.Subtitle, {\n          className: \"mb-2 text-muted\",\n          children: [reserva.ciudad, \", \", reserva.pais, \" - \", reserva.direccion]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: [\"Tipo de habitaci\\xF3n: \", reserva.tipoHabitacion]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: [\"N\\xFAmero de habitaci\\xF3n: \", reserva.numeroHabitacion]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: [\"Check-in: \", reserva.fechaIngreso]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: [\"Check-out: \", reserva.fechaSalida]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: [\"N\\xFAmero de noches: \", calculateNights(reserva.fechaIngreso, reserva.fechaSalida)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: [\"Personas: \", reserva.capacidadPersonas]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: [\"Total Reserva: $\", reserva.totalReserva]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: [\"Estado: \", reserva.estadoReserva]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 15\n        }, this), reserva.estadoReserva !== \"Cancelada\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"warning\",\n            onClick: () => handleEdit(reserva),\n            children: \"Editar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"danger\",\n            onClick: () => cancelarReserva(reserva.idReserva),\n            children: \"Cancelar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"info\",\n          onClick: () => downloadReservationPdf(reserva),\n          children: \"Descargar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"warning\",\n          onClick: () => openNotificarCambiosModal(reserva),\n          children: \"Notificar cambios\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: () => fetchUserReservations(reserva.idReserva),\n          children: \"Ver Historial\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 13\n      }, this)]\n    }, reserva.idReserva, true, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-center\",\n      children: \"No se encontraron reservas.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 9\n    }, this), currentReservation && /*#__PURE__*/_jsxDEV(EditReservationPage, {\n      show: showEditModal,\n      handleClose: () => setShowEditModal(false),\n      reserva: currentReservation,\n      actualizarReserva: actualizarReserva\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showCommentModal,\n      onHide: () => setShowCommentModal(false),\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Notificacion de cambios\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Comentario\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"textarea\",\n            rows: \"3\",\n            value: comment,\n            onChange: e => setComment(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: () => setShowCommentModal(false),\n          children: \"Cerrar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: () => handleNotificarCambios(currentReservation),\n          children: \"Enviar Notificaci\\xF3n\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showHistoryModal,\n      onHide: () => setShowHistoryModal(false),\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Historial de Reservas del Usuario\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: userReservations.length > 0 ? /*#__PURE__*/_jsxDEV(Table, {\n          striped: true,\n          bordered: true,\n          hover: true,\n          size: \"sm\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"C\\xF3digo de Reserva\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 308,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Check-in\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Check-out\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Estado\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Total Reserva\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: userReservations.map((reservation, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: reservation.codigoReserva\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 318,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: formatToLocalDateString(reservation.fechaIngreso)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: formatToLocalDateString(reservation.fechaSalida)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 320,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: reservation.estadoReserva\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\"$\", reservation.totalReserva ? reservation.totalReserva.toFixed(2) : \"0.00\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 322,\n                columnNumber: 15\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 13\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 7\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No se encontraron reservas para este usuario.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: () => setShowHistoryModal(false),\n          children: \"Cerrar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 233,\n    columnNumber: 5\n  }, this);\n};\n_s(AdministrarReservas, \"QDejx1GZUlE3armF9iOx9c5NU4M=\", false, function () {\n  return [useUser];\n});\n_c = AdministrarReservas;\nexport default AdministrarReservas;\nvar _c;\n$RefreshReg$(_c, \"AdministrarReservas\");","map":{"version":3,"names":["React","useEffect","useState","Button","Card","Modal","Form","Table","useUser","EditReservationPage","jsPDF","emailjs","jsxDEV","_jsxDEV","Fragment","_Fragment","AdministrarReservas","_s","reservations","setReservations","user","showEditModal","setShowEditModal","currentReservation","setCurrentReservation","editedReservation","setEditedReservation","showCommentModal","setShowCommentModal","comment","setComment","showHistoryModal","setShowHistoryModal","userReservations","setUserReservations","fetchReservations","console","log","id","response","fetch","ok","data","json","map","reserva","tipoHabitacion","translateTipoHabitacion","idHotel","idHabitacion","idUsuario","error","tipoHabitacionMap","calculateNights","checkIn","checkOut","checkInDate","Date","checkOutDate","diffTime","Math","abs","getTime","ceil","handleEdit","idReserva","cancelarReserva","method","headers","Error","alert","actualizarReserva","reservaActualizada","body","JSON","stringify","status","statusText","downloadReservationPdf","doc","text","setFontSize","reservationDetails","title","nombreHotel","numeroHabitacion","toString","ciudad","pais","direccion","fechaIngreso","fechaSalida","capacidadPersonas","totalReserva","estadoReserva","codigoReserva","autoTable","head","item","startY","save","openNotificarCambiosModal","handleNotificarCambios","translatedRoomType","templateParams","to_name","primer_nombre","hotel_name","room_number","room_type","location","check_in_date","check_out_date","total_nights","total_people","total_price","toFixed","reservation_status","reservation_code","to_email","email","send","fetchUserReservations","reservationId","historialReservas","formatToLocalDateString","dateString","date","isNaN","toLocaleDateString","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","Header","as","correoElectronico","Body","Title","Subtitle","Text","variant","onClick","show","handleClose","onHide","closeButton","Group","Label","Control","rows","value","onChange","e","target","Footer","striped","bordered","hover","size","reservation","index","_c","$RefreshReg$"],"sources":["/home/pmorales/Downloads/Proyecto-B2B/Hotel/frontend/sistema_hoteles/src/components/AdministrarReservas.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Button, Card, Modal, Form, Table } from 'react-bootstrap';\nimport { useUser } from './UserContext';\nimport EditReservationPage from './EditReservationPage';\nimport jsPDF from 'jspdf';\nimport 'jspdf-autotable';\nimport emailjs from 'emailjs-com';\n\n\nconst AdministrarReservas = () => {\n  const [reservations, setReservations] = useState([]);\n  const { user } = useUser();\n  const [showEditModal, setShowEditModal] = useState(false);\n  const [currentReservation, setCurrentReservation] = useState(null);\n  const [editedReservation, setEditedReservation] = useState(null);\n  const [showCommentModal, setShowCommentModal] = useState(false);\n  const [comment, setComment] = useState('');\n  const [showHistoryModal, setShowHistoryModal] = useState(false); // para la vista\n  const [userReservations, setUserReservations] = useState([]);  // para la vista\n  \n\n\n\n  useEffect(() => {\n    if (user) {\n      fetchReservations();\n    }\n  }, [user]);\n\n  const fetchReservations = async () => {\n    console.log('Fetching reservations for user:', user.id);\n    try {\n      const response = await fetch(`http://localhost:8080/reservas/detalle/todas`);\n      if (response.ok) {\n        const data = await response.json();\n        console.log('Reservations fetched successfully:', data);\n        setReservations(data.map(reserva => ({\n          ...reserva,\n          tipoHabitacion: translateTipoHabitacion(reserva.tipoHabitacion),\n          idHotel: reserva.idHotel, \n          idHabitacion: reserva.idHabitacion,\n          idUsuario: reserva.idUsuario\n        })));\n      } else {\n        console.error(\"Failed to fetch reservations.\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching reservations:\", error);\n    }\n  };\n\n  // a numero\n  const translateTipoHabitacion = (tipoHabitacion) => {\n    const tipoHabitacionMap = {\n      1: \"Doble\",\n      2: \"Junior Suite\",\n      3: \"Suite\",\n      4: \"Gran Suite\",\n    };\n    return tipoHabitacionMap[tipoHabitacion] || \"Unknown\";\n  };\n\n  const calculateNights = (checkIn, checkOut) => {\n    const checkInDate = new Date(checkIn);\n    const checkOutDate = new Date(checkOut);\n    const diffTime = Math.abs(checkOutDate.getTime() - checkInDate.getTime());\n    return Math.ceil(diffTime / (1000 * 3600 * 24));\n  };\n\n  const handleEdit = (reserva) => {\n    console.log('Opening edit modal for reservation:', reserva.idReserva);\n    setCurrentReservation(reserva);\n    setShowEditModal(true);\n  };\n  \n\n  const cancelarReserva = async (idReserva) => {\n    try {\n      const response = await fetch(`http://localhost:8080/reservas/${idReserva}/cancelar`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n      if (!response.ok) {\n        throw new Error('No se pudo cancelar la reserva');\n      }\n      alert('Reserva cancelada con éxito');\n      fetchReservations(); //error tipográfico.\n    } catch (error) {\n      console.error('Error al cancelar la reserva:', error);\n      alert('Error al cancelar la reserva');\n    }\n  };\n\n  const actualizarReserva = async (reservaActualizada) => {\n    console.log('Updating reservation with:', reservaActualizada);\n    try {\n      const response = await fetch(`http://localhost:8080/reservas/${reservaActualizada.idReserva}`, {\n        method: 'PUT',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(reservaActualizada),\n      });\n  \n      if (!response.ok) {\n        if (response.status === 409) {\n          // Conflicto , notifica al usuario\n          alert(\"Habitación no disponible.\");\n        } else {\n          // Otro tipo de error HTTP\n          throw new Error(`Reservation update failed: ${response.statusText}`);\n        }\n      } else {\n        console.log('Reservation updated successfully');\n        setShowEditModal(false);\n        await fetchReservations(); // Refresca lalista de reservaciones\n      }\n    } catch (error) {\n      console.error('Error updating reservation:', error);\n      alert(\"Ocurrió un error al actualizar la reserva. Por favor, intenta de nuevo.\");\n    }\n  };\n  \n\n\n  const downloadReservationPdf = (reserva) => {\n    const doc = new jsPDF();\n    doc.text(\"Detalle de Reserva\", 14, 16);\n    doc.setFontSize(10);\n\n    // Información de la reserva\n    const reservationDetails = [\n      { title: \"Hotel\", data: reserva.nombreHotel },\n      { title: \"Número de habitación\", data: reserva.numeroHabitacion.toString() }, \n      { title: \"Tipo de habitación\", data: reserva.tipoHabitacion },\n      { title: \"Ubicación\", data: `${reserva.ciudad}, ${reserva.pais} - ${reserva.direccion}` },\n      { title: \"Check-in\", data: reserva.fechaIngreso },\n      { title: \"Check-out\", data: reserva.fechaSalida },\n      { title: \"Número de noches\", data: calculateNights(reserva.fechaIngreso, reserva.fechaSalida).toString() },\n      { title: \"Personas\", data: reserva.capacidadPersonas.toString() },\n      { title: \"Total Reserva\", data: `$${reserva.totalReserva}` },\n      { title: \"Estado\", data: reserva.estadoReserva },\n      { title: \"Código de reserva\", data: reserva.codigoReserva },\n    ];\n\n    doc.autoTable({\n      head: [[\"Detalle\", \"Información\"]],\n      body: reservationDetails.map((item) => [item.title, item.data]),\n      startY: 20,\n    });\n\n    doc.save(`Reserva_${reserva.codigoReserva}.pdf`);\n  };\n  \n\n  const openNotificarCambiosModal = (reserva) => {\n    setCurrentReservation(reserva);\n    setShowCommentModal(true);\n  };\n\n\n  \n\n  const handleNotificarCambios = async (reserva) => {\n    const translatedRoomType = translateTipoHabitacion(reserva.tipoHabitacion.toString());\n\n    const templateParams = {\n      to_name: user.primer_nombre,\n      hotel_name: reserva.nombreHotel,\n      room_number: reserva.numeroHabitacion.toString() || \"No especificado\", \n      room_type: reserva.tipoHabitacion, \n      location: `${reserva.ciudad}, ${reserva.pais} - ${reserva.direccion}`,\n      check_in_date: reserva.fechaIngreso,\n      check_out_date: reserva.fechaSalida,\n      total_nights: calculateNights(reserva.fechaIngreso, reserva.fechaSalida).toString(),\n      total_people: reserva.capacidadPersonas.toString(),\n      total_price: `$${reserva.totalReserva.toFixed(2)}`,\n      reservation_status: reserva.estadoReserva,\n      reservation_code: reserva.codigoReserva.toString(), \n      to_email: user.email, \n      comment, \n    };\n\n    try {\n      await emailjs.send('service_db-dw2', 'template_vhblb7c', templateParams, '83TAqc_7hHgnfdESC');\n      console.log('Email successfully sent!');\n    } catch (error) {\n      console.error('Error al enviar notificación de cambio:', error.text);\n    }\n\n    setShowCommentModal(false); // Cerrar modal\n    setComment(''); // Limpiar comentario\n  };\n\n\nconst fetchUserReservations = async (reservationId) => {\n  try {\n    const response = await fetch(`http://localhost:8080/reservas/historial/${reservationId}`);\n    if (!response.ok) {\n      throw new Error('No se pudo cargar el historial de reservas');\n    }\n    const historialReservas = await response.json();\n    setUserReservations(historialReservas);\n    setShowHistoryModal(true);  // Muestra el modal con el historial de reservas\n  } catch (error) {\n    console.error('Error al cargar el historial de reservas:', error);\n  }\n};\n  useEffect(() => {\n    if (user && user.id) {\n      fetchUserReservations(user.id);\n    }\n  }, [user]); \n  \n  \n  const formatToLocalDateString = (dateString) => {\n    try {\n      // Intenta parsear la fecha utilizando el constructor Date\n      const date = new Date(dateString);\n      // Verifica si la fecha es válida antes de intentar formatearla\n      if (!isNaN(date)) {\n        return date.toLocaleDateString();\n      }\n    } catch (error) {\n      console.error(\"Error al parsear la fecha:\", error);\n    }\n    // Si la fecha es inválida o no se puede parsear, retorna un valor predeterminado o una cadena vacía\n    return \"Fecha no disponible\";\n  };\n\n\n  return (\n    <div className=\"booking-history-container\">\n      <h2 className=\"text-center\">Historial de Reservas</h2>\n      {reservations.length > 0 ? (\n        reservations.map((reserva) => (\n          <Card key={reserva.idReserva} className=\"mb-4 shadow\">\n            <Card.Header as=\"h5\" className=\"font-weight-bold\">\n              Reserva #{reserva.codigoReserva} - {reserva.correoElectronico}\n            </Card.Header>\n            <Card.Body>\n              <Card.Title>{reserva.nombreHotel}</Card.Title>\n              <Card.Subtitle className=\"mb-2 text-muted\">\n                {reserva.ciudad}, {reserva.pais} - {reserva.direccion}\n              </Card.Subtitle>\n              <Card.Text>Tipo de habitación: {reserva.tipoHabitacion}</Card.Text>\n              <Card.Text>Número de habitación: {reserva.numeroHabitacion}</Card.Text>\n              <Card.Text>Check-in: {reserva.fechaIngreso}</Card.Text>\n              <Card.Text>Check-out: {reserva.fechaSalida}</Card.Text>\n              <Card.Text>Número de noches: {calculateNights(reserva.fechaIngreso, reserva.fechaSalida)}</Card.Text>\n              <Card.Text>Personas: {reserva.capacidadPersonas}</Card.Text>\n              <Card.Text>Total Reserva: ${reserva.totalReserva}</Card.Text>\n              <Card.Text>Estado: {reserva.estadoReserva}</Card.Text>\n              {reserva.estadoReserva !== \"Cancelada\" && (\n                <>\n                  <Button variant=\"warning\" onClick={() => handleEdit(reserva)}>Editar</Button>\n                  <Button variant=\"danger\" onClick={() => cancelarReserva(reserva.idReserva)}>Cancelar</Button>\n                </>\n              )}\n              <Button variant=\"info\" onClick={() => downloadReservationPdf(reserva)}>Descargar</Button>\n              <Button variant=\"warning\" onClick={() => openNotificarCambiosModal(reserva)}>Notificar cambios</Button>\n              <Button variant=\"secondary\" onClick={() => fetchUserReservations(reserva.idReserva)}>Ver Historial</Button>\n\n\n            </Card.Body>\n          </Card>\n        \n        ))\n      ) : (\n        <p className=\"text-center\">No se encontraron reservas.</p>\n      )}\n      {currentReservation && (\n        <EditReservationPage\n          show={showEditModal}\n          handleClose={() => setShowEditModal(false)}\n          reserva={currentReservation}\n          actualizarReserva={actualizarReserva}\n        />\n        \n      )}\n            {/* Modal para el comentario */}\n            <Modal show={showCommentModal} onHide={() => setShowCommentModal(false)}>\n  <Modal.Header closeButton>\n    <Modal.Title>Notificacion de cambios</Modal.Title>\n  </Modal.Header>\n  <Modal.Body>\n    <Form.Group>\n      <Form.Label>Comentario</Form.Label>\n      <Form.Control as=\"textarea\" rows=\"3\" value={comment} onChange={(e) => setComment(e.target.value)} />\n    </Form.Group>\n  </Modal.Body>\n  <Modal.Footer>\n    <Button variant=\"secondary\" onClick={() => setShowCommentModal(false)}>Cerrar</Button>\n    <Button variant=\"primary\" onClick={() => handleNotificarCambios(currentReservation)}>Enviar Notificación</Button>\n  </Modal.Footer>\n</Modal>\n\n\n<Modal show={showHistoryModal} onHide={() => setShowHistoryModal(false)}>\n  <Modal.Header closeButton>\n    <Modal.Title>Historial de Reservas del Usuario</Modal.Title>\n  </Modal.Header>\n  <Modal.Body>\n    {userReservations.length > 0 ? (\n      <Table striped bordered hover size=\"sm\">\n        <thead>\n          <tr>\n            <th>Código de Reserva</th>\n            <th>Check-in</th>\n            <th>Check-out</th>\n            <th>Estado</th>\n            <th>Total Reserva</th>\n          </tr>\n        </thead>\n        <tbody>\n          {userReservations.map((reservation, index) => (\n            <tr key={index}>\n              <td>{reservation.codigoReserva}</td>\n              <td>{formatToLocalDateString(reservation.fechaIngreso)}</td>\n              <td>{formatToLocalDateString(reservation.fechaSalida)}</td>\n              <td>{reservation.estadoReserva}</td>\n              <td>${reservation.totalReserva ? reservation.totalReserva.toFixed(2) : \"0.00\"}</td>\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n    ) : (\n      <p>No se encontraron reservas para este usuario.</p>\n    )}\n  </Modal.Body>\n  <Modal.Footer>\n    <Button variant=\"secondary\" onClick={() => setShowHistoryModal(false)}>\n      Cerrar\n    </Button>\n  </Modal.Footer>\n</Modal>\n\n\n\n\n\n    </div>\n  );\n};\n\nexport default AdministrarReservas;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}