{"ast":null,"code":"var _jsxFileName = \"/home/pmorales/Downloads/Proyecto-B2B/Hotel/frontend/sistema_hoteles/src/components/EditReservationPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Modal, Button, Form } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditReservationPage = ({\n  show,\n  handleClose,\n  reserva,\n  actualizarReserva\n}) => {\n  _s();\n  // State for input fields\n  const [checkIn, setCheckIn] = useState(reserva.fechaIngreso);\n  const [checkOut, setCheckOut] = useState(reserva.fechaSalida);\n  const [tipoHabitacion, setTipoHabitacion] = useState(reserva.tipoHabitacion.toString());\n  const [tiposHabitacionDisponibles, setTiposHabitacionDisponibles] = useState([]);\n\n  // Handle the form submission\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Construct the updated reservation object, od\n    const reservaActualizada = {\n      ...reserva,\n      fechaIngreso: checkIn,\n      fechaSalida: checkOut,\n      tipoHabitacion: Number(tipoHabitacion) // tipoHabitacion as a number\n    };\n    console.log('Enviando reserva actualizada:', reservaActualizada);\n    try {\n      // Use the actualizarReserva function passed via props\n      await actualizarReserva(reservaActualizada);\n      handleClose(); // Close the modal upon successful update\n    } catch (error) {\n      console.error('Error al actualizar la reserva:', error);\n    }\n  };\n  const nombresTiposHabitacion = {\n    1: \"Doble\",\n    2: \"Junior Suite\",\n    3: \"Suite\",\n    4: \"Gran Suite\"\n  };\n\n  // Función que convierte el ID del tipo de habitación en su nombre correspondiente\n  const convertirTipoHabitacion = idTipoHabitacion => {\n    return nombresTiposHabitacion[idTipoHabitacion] || \"Tipo no definido\";\n  };\n  useEffect(() => {\n    const fetchTiposHabitacion = async () => {\n      if (show && reserva.idHotel) {\n        try {\n          const response = await fetch(`http://localhost:8080/habitaciones?hotelId=${reserva.idHotel}`);\n          if (!response.ok) throw new Error('Respuesta no satisfactoria del servidor');\n          const tiposHabitacion = await response.json();\n          setTiposHabitacionDisponibles(tiposHabitacion.map(habitacion => ({\n            id: habitacion.tipo_habitacion,\n            nombre: convertirTipoHabitacion(habitacion.tipo_habitacion) // Función ficticia, debes implementarla\n          })));\n        } catch (error) {\n          console.error('Error al obtener los tipos de habitación:', error);\n        }\n      }\n    };\n    fetchTiposHabitacion();\n  }, [show, reserva.idHotel]);\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: show,\n    onHide: handleClose,\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        children: \"Editar Reserva\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formCheckIn\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Check-in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"date\",\n            value: checkIn,\n            onChange: e => setCheckIn(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formCheckOut\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Check-out\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"date\",\n            value: checkOut,\n            onChange: e => setCheckOut(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formTipoHabitacion\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Tipo de Habitaci\\xF3n\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"select\",\n            value: tipoHabitacion,\n            onChange: e => setTipoHabitacion(e.target.value),\n            children: tiposHabitacionDisponibles.map(tipo => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: tipo.id,\n              children: tipo.nombre\n            }, tipo.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 29\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          children: \"Guardar Cambios\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"secondary\",\n        onClick: handleClose,\n        children: \"Cerrar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n};\n_s(EditReservationPage, \"fHISNVgcvCgjfDuQK+2mDbTJWNQ=\");\n_c = EditReservationPage;\nexport default EditReservationPage;\nvar _c;\n$RefreshReg$(_c, \"EditReservationPage\");","map":{"version":3,"names":["React","useState","useEffect","Modal","Button","Form","jsxDEV","_jsxDEV","EditReservationPage","show","handleClose","reserva","actualizarReserva","_s","checkIn","setCheckIn","fechaIngreso","checkOut","setCheckOut","fechaSalida","tipoHabitacion","setTipoHabitacion","toString","tiposHabitacionDisponibles","setTiposHabitacionDisponibles","handleSubmit","e","preventDefault","reservaActualizada","Number","console","log","error","nombresTiposHabitacion","convertirTipoHabitacion","idTipoHabitacion","fetchTiposHabitacion","idHotel","response","fetch","ok","Error","tiposHabitacion","json","map","habitacion","id","tipo_habitacion","nombre","onHide","children","Header","closeButton","Title","fileName","_jsxFileName","lineNumber","columnNumber","Body","onSubmit","Group","controlId","Label","Control","type","value","onChange","target","as","tipo","variant","Footer","onClick","_c","$RefreshReg$"],"sources":["/home/pmorales/Downloads/Proyecto-B2B/Hotel/frontend/sistema_hoteles/src/components/EditReservationPage.jsx"],"sourcesContent":["import React, { useState, useEffect} from 'react';\nimport { Modal, Button, Form } from 'react-bootstrap';\n\nconst EditReservationPage = ({ show, handleClose, reserva, actualizarReserva }) => {\n    // State for input fields\n    const [checkIn, setCheckIn] = useState(reserva.fechaIngreso);\n    const [checkOut, setCheckOut] = useState(reserva.fechaSalida);\n    const [tipoHabitacion, setTipoHabitacion] = useState(reserva.tipoHabitacion.toString());\n    const [tiposHabitacionDisponibles, setTiposHabitacionDisponibles] = useState([]);\n\n    // Handle the form submission\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        // Construct the updated reservation object, od\n        const reservaActualizada = {\n            ...reserva,\n            fechaIngreso: checkIn,\n            fechaSalida: checkOut,\n            tipoHabitacion: Number(tipoHabitacion), // tipoHabitacion as a number\n        };\n\n        console.log('Enviando reserva actualizada:', reservaActualizada);\n        try {\n            // Use the actualizarReserva function passed via props\n            await actualizarReserva(reservaActualizada);\n            handleClose(); // Close the modal upon successful update\n        } catch (error) {\n            console.error('Error al actualizar la reserva:', error);\n        }\n    };\n\n    const nombresTiposHabitacion = {\n        1: \"Doble\",\n        2: \"Junior Suite\",\n        3: \"Suite\",\n        4: \"Gran Suite\",\n    };\n    \n    // Función que convierte el ID del tipo de habitación en su nombre correspondiente\n    const convertirTipoHabitacion = (idTipoHabitacion) => {\n        return nombresTiposHabitacion[idTipoHabitacion] || \"Tipo no definido\";\n    };\n\n    useEffect(() => {\n        const fetchTiposHabitacion = async () => {\n            if (show && reserva.idHotel) {\n                try {\n                    const response = await fetch(`http://localhost:8080/habitaciones?hotelId=${reserva.idHotel}`);\n                    if (!response.ok) throw new Error('Respuesta no satisfactoria del servidor');\n                    const tiposHabitacion = await response.json();\n                    setTiposHabitacionDisponibles(tiposHabitacion.map(habitacion => ({\n                        id: habitacion.tipo_habitacion,\n                        nombre: convertirTipoHabitacion(habitacion.tipo_habitacion), // Función ficticia, debes implementarla\n                    })));\n                } catch (error) {\n                    console.error('Error al obtener los tipos de habitación:', error);\n                }\n            }\n        };\n    \n        fetchTiposHabitacion();\n    }, [show, reserva.idHotel]);\n\n    \n    \n\n    return (\n        <Modal show={show} onHide={handleClose}>\n            <Modal.Header closeButton>\n                <Modal.Title>Editar Reserva</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form onSubmit={handleSubmit}>\n                    <Form.Group controlId=\"formCheckIn\">\n                        <Form.Label>Check-in</Form.Label>\n                        <Form.Control\n                            type=\"date\"\n                            value={checkIn}\n                            onChange={(e) => setCheckIn(e.target.value)}\n                        />\n                    </Form.Group>\n                    <Form.Group controlId=\"formCheckOut\">\n                        <Form.Label>Check-out</Form.Label>\n                        <Form.Control\n                            type=\"date\"\n                            value={checkOut}\n                            onChange={(e) => setCheckOut(e.target.value)}\n                        />\n                    </Form.Group>\n                    <Form.Group controlId=\"formTipoHabitacion\">\n                        <Form.Label>Tipo de Habitación</Form.Label>\n                        <Form.Control\n                            as=\"select\"\n                            value={tipoHabitacion}\n                            onChange={(e) => setTipoHabitacion(e.target.value)}\n                        >\n                          {tiposHabitacionDisponibles.map((tipo) => (\n                            <option key={tipo.id} value={tipo.id}>{tipo.nombre}</option>\n                          ))}\n                        </Form.Control>\n                    </Form.Group>\n                    <Button variant=\"primary\" type=\"submit\">\n                        Guardar Cambios\n                    </Button>\n                </Form>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"secondary\" onClick={handleClose}>\n                    Cerrar\n                </Button>\n            </Modal.Footer>\n        </Modal>\n    );\n};\n\nexport default EditReservationPage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}