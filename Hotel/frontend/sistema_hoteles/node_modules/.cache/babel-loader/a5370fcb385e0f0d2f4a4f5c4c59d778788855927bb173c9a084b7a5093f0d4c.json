{"ast":null,"code":"var _jsxFileName = \"/home/pmorales/Downloads/Proyecto-B2B/Hotel/frontend/sistema_hoteles/src/components/HomePage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Button, Card, Form, Alert, Container, Row, Col, Carousel } from 'react-bootstrap';\nimport { useNavigate } from 'react-router-dom';\nimport defaultRoomImage from './roomImage.jpg';\nimport Comentarios from './Comentarios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomePage = () => {\n  _s();\n  const [hotels, setHotels] = useState([]);\n  const [paises, setPaises] = useState([]);\n  const [paisSeleccionado, setPaisSeleccionado] = useState('');\n  const [fechaIngreso, setFechaIngreso] = useState('');\n  const [fechaSalida, setFechaSalida] = useState('');\n  const [numeroPersonas, setNumeroPersonas] = useState('');\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  const [hotelImages, setHotelImages] = useState({});\n\n  // Suponiendo que 'tiposHabitacion' es estático y no necesita ser parte del estado\n  const tiposHabitacion = {\n    1: 'Doble',\n    2: 'Junior Suite',\n    3: 'Suite',\n    4: 'Gran Suite'\n  };\n  useEffect(() => {\n    fetchPaises();\n    // La llamada a fetchHotelsAndRooms se mueve al manejador del formulario\n  }, []);\n  const fetchHotelImages = async idHotel => {\n    try {\n      const response = await fetch(`http://localhost:8080/hoteles/${idHotel}/imagenes`);\n      const images = await response.json();\n      setHotelImages(prev => ({\n        ...prev,\n        [idHotel]: images\n      }));\n    } catch (error) {\n      console.error('Error fetching hotel images:', error);\n      setError('Error al cargar imágenes del hotel');\n    }\n  };\n  const fetchPaises = async () => {\n    try {\n      const response = await fetch('http://localhost:8080/hoteles/pais');\n      const data = await response.json();\n      setPaises(data);\n    } catch (error) {\n      console.error('Error fetching countries:', error);\n      setError('Error al cargar los países');\n    }\n  };\n  const fetchHotelsAndRooms = async () => {\n    let url = `http://localhost:8080/habitaciones/buscar?pais=${paisSeleccionado}&fechaIngreso=${fechaIngreso}&fechaSalida=${fechaSalida}&numeroPersonas=${numeroPersonas}`;\n    try {\n      const response = await fetch(url);\n      const data = await response.json();\n      setHotels(data.hotels || []);\n      data.hotels.forEach(hotel => fetchHotelImages(hotel.id_hotel));\n    } catch (error) {\n      console.error('Error fetching hotels and rooms:', error);\n      setError('Error al cargar hoteles y habitaciones');\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    fetchHotelsAndRooms();\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"my-5\",\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        md: 12,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Buscar Habitaciones Disponibles\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"danger\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Row, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              as: Col,\n              controlId: \"formGridState\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Pa\\xEDs\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                as: \"select\",\n                defaultValue: \"Seleccione un pa\\xEDs...\",\n                onChange: e => setPaisSeleccionado(e.target.value),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  children: \"Seleccione un pa\\xEDs...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 19\n                }, this), paises.map(pais => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: pais,\n                  children: pais\n                }, pais, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 21\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              as: Col,\n              controlId: \"formGridCapacity\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Capacidad de Personas\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                as: \"select\",\n                defaultValue: \"\",\n                onChange: e => setNumeroPersonas(e.target.value),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Cualquiera\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 19\n                }, this), Array.from({\n                  length: 10\n                }, (_, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: i + 1,\n                  children: i + 1\n                }, i + 1, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 21\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: () => fetchHotelsAndRooms(paisSeleccionado, numeroPersonas),\n            children: \"Buscar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"mt-4\",\n      children: hotels.length > 0 ? hotels.map(hotel => {\n        var _hotelImages$hotel$id;\n        return /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            md: 6,\n            className: \"mb-4\",\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n                as: \"h5\",\n                children: hotel.nombre\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Carousel, {\n                children: (_hotelImages$hotel$id = hotelImages[hotel.id_hotel]) === null || _hotelImages$hotel$id === void 0 ? void 0 : _hotelImages$hotel$id.map((image, index) => /*#__PURE__*/_jsxDEV(Carousel.Item, {\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    className: \"d-block w-100\",\n                    src: image,\n                    alt: `Slide ${index}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 118,\n                    columnNumber: 25\n                  }, this)\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                  children: [hotel.ciudad, \", \", hotel.pais]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                  children: [\"Direcci\\xF3n: \", hotel.direccion]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 21\n                }, this), hotel.rooms.map(room => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mb-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                    children: [\"Habitaci\\xF3n: \", tiposHabitacion[room.tipo_habitacion]]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 133,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: room.imagenUrl,\n                    alt: \"Habitaci\\xF3n\",\n                    style: {\n                      width: '100%'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 134,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Capacidad: \", room.capacidad_personas, \" personas - Precio: $\", room.precioxnoche, \" por noche\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 135,\n                    columnNumber: 25\n                  }, this)]\n                }, room.id_habitacion, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 23\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 15\n          }, this), hotel.rooms && hotel.rooms.map(room => /*#__PURE__*/_jsxDEV(Col, {\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n                variant: \"top\",\n                src: room.imagenUrl || defaultRoomImage\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                  children: [\"Habitaci\\xF3n: \", tiposHabitacion[room.tipo_habitacion]]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                  children: [\"N\\xFAmero de habitaci\\xF3n: \", room.numero_habitacion]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 150,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                  children: [\"Capacidad m\\xE1xima: \", room.capacidad_personas, \" personas\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                  children: [\"Precio por noche: $\", room.precioxnoche]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 152,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                  children: [\"Valoraci\\xF3n: \", room.valuacion, \" estrellas\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"primary\",\n                  onClick: () => {\n                    console.log(\"Navigating with hotelDetails:\", hotel);\n                    navigate('/checkout', {\n                      state: {\n                        hotelDetails: {\n                          ...hotel\n                        },\n                        roomDetails: {\n                          ...room,\n                          idHabitacion: room.id_habitacion,\n                          roomType: tiposHabitacion[room.tipo_habitacion],\n                          roomPrice: room.precioxnoche,\n                          capacidadPersonas: room.capacidad_personas\n                        }\n                      }\n                    });\n                  },\n                  children: \"Reservar\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 19\n            }, this)\n          }, room.id_habitacion, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 17\n          }, this))]\n        }, hotel.id_hotel, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-4\",\n          children: \"No se encontraron hoteles. Por favor, intenta nuevamente con diferentes criterios de b\\xFAsqueda.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(HomePage, \"W0zOoLwDspkAhI7JQxZRZfalk5o=\", false, function () {\n  return [useNavigate];\n});\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","useEffect","Button","Card","Form","Alert","Container","Row","Col","Carousel","useNavigate","defaultRoomImage","Comentarios","jsxDEV","_jsxDEV","HomePage","_s","hotels","setHotels","paises","setPaises","paisSeleccionado","setPaisSeleccionado","fechaIngreso","setFechaIngreso","fechaSalida","setFechaSalida","numeroPersonas","setNumeroPersonas","error","setError","navigate","hotelImages","setHotelImages","tiposHabitacion","fetchPaises","fetchHotelImages","idHotel","response","fetch","images","json","prev","console","data","fetchHotelsAndRooms","url","forEach","hotel","id_hotel","handleSubmit","e","preventDefault","className","children","md","fileName","_jsxFileName","lineNumber","columnNumber","variant","Group","as","controlId","Label","Control","defaultValue","onChange","target","value","map","pais","Array","from","length","_","i","onClick","_hotelImages$hotel$id","Fragment","Header","nombre","image","index","Item","src","alt","Body","Title","ciudad","Text","direccion","rooms","room","tipo_habitacion","imagenUrl","style","width","capacidad_personas","precioxnoche","id_habitacion","Img","numero_habitacion","valuacion","log","state","hotelDetails","roomDetails","idHabitacion","roomType","roomPrice","capacidadPersonas","_c","$RefreshReg$"],"sources":["/home/pmorales/Downloads/Proyecto-B2B/Hotel/frontend/sistema_hoteles/src/components/HomePage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Button, Card, Form, Alert, Container, Row, Col, Carousel } from 'react-bootstrap';\nimport { useNavigate } from 'react-router-dom';\nimport defaultRoomImage from './roomImage.jpg';\nimport Comentarios from './Comentarios';\n\nconst HomePage = () => {\n  const [hotels, setHotels] = useState([]);\n  const [paises, setPaises] = useState([]);\n  const [paisSeleccionado, setPaisSeleccionado] = useState('');\n  const [fechaIngreso, setFechaIngreso] = useState('');\n  const [fechaSalida, setFechaSalida] = useState('');\n  const [numeroPersonas, setNumeroPersonas] = useState('');\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  const [hotelImages, setHotelImages] = useState({});\n  \n  // Suponiendo que 'tiposHabitacion' es estático y no necesita ser parte del estado\n  const tiposHabitacion = {\n    1: 'Doble',\n    2: 'Junior Suite',\n    3: 'Suite',\n    4: 'Gran Suite'\n  };\n\n  useEffect(() => {\n    fetchPaises();\n    // La llamada a fetchHotelsAndRooms se mueve al manejador del formulario\n  }, []);\n\n  const fetchHotelImages = async (idHotel) => {\n    try {\n      const response = await fetch(`http://localhost:8080/hoteles/${idHotel}/imagenes`);\n      const images = await response.json();\n      setHotelImages(prev => ({ ...prev, [idHotel]: images }));\n    } catch (error) {\n      console.error('Error fetching hotel images:', error);\n      setError('Error al cargar imágenes del hotel');\n    }\n  };\n\n  const fetchPaises = async () => {\n    try {\n      const response = await fetch('http://localhost:8080/hoteles/pais');\n      const data = await response.json();\n      setPaises(data);\n    } catch (error) {\n      console.error('Error fetching countries:', error);\n      setError('Error al cargar los países');\n    }\n  };\n\n  const fetchHotelsAndRooms = async () => {\n    let url = `http://localhost:8080/habitaciones/buscar?pais=${paisSeleccionado}&fechaIngreso=${fechaIngreso}&fechaSalida=${fechaSalida}&numeroPersonas=${numeroPersonas}`;\n    try {\n      const response = await fetch(url);\n      const data = await response.json();\n      setHotels(data.hotels || []);\n      data.hotels.forEach(hotel => fetchHotelImages(hotel.id_hotel));\n    } catch (error) {\n      console.error('Error fetching hotels and rooms:', error);\n      setError('Error al cargar hoteles y habitaciones');\n    }\n  };\n  \n  const handleSubmit = (e) => {\n    e.preventDefault();\n    fetchHotelsAndRooms();\n  };\n\n  \n\n  return (\n    <Container className=\"my-5\">\n      <Row>\n        <Col md={12}>\n          <h2>Buscar Habitaciones Disponibles</h2>\n          {error && <Alert variant=\"danger\">{error}</Alert>}\n          <Form>\n            <Form.Row>\n              <Form.Group as={Col} controlId=\"formGridState\">\n                <Form.Label>País</Form.Label>\n                <Form.Control as=\"select\" defaultValue=\"Seleccione un país...\" onChange={e => setPaisSeleccionado(e.target.value)}>\n                  <option>Seleccione un país...</option>\n                  {paises.map(pais => (\n                    <option key={pais} value={pais}>{pais}</option>\n                  ))}\n                </Form.Control>\n              </Form.Group>\n  \n              <Form.Group as={Col} controlId=\"formGridCapacity\">\n                <Form.Label>Capacidad de Personas</Form.Label>\n                <Form.Control as=\"select\" defaultValue=\"\" onChange={e => setNumeroPersonas(e.target.value)}>\n                  <option value=\"\">Cualquiera</option>\n                  {Array.from({ length: 10 }, (_, i) => (\n                    <option key={i + 1} value={i + 1}>{i + 1}</option>\n                  ))}\n                </Form.Control>\n              </Form.Group>\n            </Form.Row>\n  \n            <Button variant=\"primary\" onClick={() => fetchHotelsAndRooms(paisSeleccionado, numeroPersonas)}>\n              Buscar\n            </Button>\n          </Form>\n        </Col>\n      </Row>\n      <Row className=\"mt-4\">\n        {hotels.length > 0 ? (\n          hotels.map(hotel => (\n            <React.Fragment key={hotel.id_hotel}>\n              <Col md={6} className=\"mb-4\">\n                <Card>\n                  <Card.Header as=\"h5\">{hotel.nombre}</Card.Header>\n                  <Carousel>\n                    {hotelImages[hotel.id_hotel]?.map((image, index) => (\n                      <Carousel.Item key={index}>\n                        <img\n                          className=\"d-block w-100\"\n                          src={image}\n                          alt={`Slide ${index}`}\n                        />\n                      </Carousel.Item>\n                    ))}\n                  </Carousel>\n                  <Card.Body>\n                    <Card.Title>{hotel.ciudad}, {hotel.pais}</Card.Title>\n                    <Card.Text>\n                      Dirección: {hotel.direccion}\n                    </Card.Text>\n                    {hotel.rooms.map(room => (\n                      <div key={room.id_habitacion} className=\"mb-2\">\n                        <h6>Habitación: {tiposHabitacion[room.tipo_habitacion]}</h6>\n                        <img src={room.imagenUrl} alt=\"Habitación\" style={{ width: '100%' }} />\n                        <p>Capacidad: {room.capacidad_personas} personas - Precio: ${room.precioxnoche} por noche</p>\n                      </div>\n                    ))}\n                  </Card.Body>\n                </Card>\n              </Col>\n\n\n\n              {hotel.rooms && hotel.rooms.map((room) => (\n                <Col key={room.id_habitacion} md={6}>\n                  <Card className=\"mb-3\">\n                  <Card.Img variant=\"top\" src={room.imagenUrl || defaultRoomImage} />\n                    <Card.Body>\n                    <Card.Title>Habitación: {tiposHabitacion[room.tipo_habitacion]}</Card.Title>\n                      <Card.Text>Número de habitación: {room.numero_habitacion}</Card.Text>\n                      <Card.Text>Capacidad máxima: {room.capacidad_personas} personas</Card.Text>\n                      <Card.Text>Precio por noche: ${room.precioxnoche}</Card.Text>\n                      <Card.Text>Valoración: {room.valuacion} estrellas</Card.Text>\n                      <Button variant=\"primary\" onClick={() => {\n                      console.log(\"Navigating with hotelDetails:\", hotel);\n                      navigate('/checkout', {\n                        state: {\n                          hotelDetails: { ...hotel },\n                          roomDetails: {\n                            ...room,\n                            idHabitacion: room.id_habitacion,\n                            roomType: tiposHabitacion[room.tipo_habitacion],\n                            roomPrice: room.precioxnoche,\n                            capacidadPersonas: room.capacidad_personas\n                          }\n                        }\n                      });\n                    }}>\n                      Reservar\n                    </Button>\n\n{/* <Comentarios idHabitacion={room.id_habitacion} /> */}\n\n\n                    </Card.Body>\n                  </Card>\n                </Col>\n              ))}\n            </React.Fragment>\n          ))\n        ) : (\n          <Col>\n            <p className=\"mt-4\">No se encontraron hoteles. Por favor, intenta nuevamente con diferentes criterios de búsqueda.</p>\n          </Col>\n        )}\n      </Row>\n    </Container>\n  );\n};\n\nexport default HomePage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}