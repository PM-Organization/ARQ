{"ast":null,"code":"var _jsxFileName = \"/home/pmorales/Downloads/Proyecto-B2B/Hotel/frontend/sistema_hoteles/src/components/HomePage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Card, Button, Form, Alert, Image, Carousel } from 'react-bootstrap';\nimport { useNavigate } from 'react-router-dom';\nimport defaultRoomImage from './roomImage.jpg';\nimport Comentarios from './Comentarios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomePage = () => {\n  _s();\n  const [hotels, setHotels] = useState([]);\n  const [paises, setPaises] = useState([]);\n  const [paisSeleccionado, setPaisSeleccionado] = useState('');\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  const [hotelImages, setHotelImages] = useState({});\n  const [fechaSalida, setFechaSalida] = useState('');\n  const [numeroPersonas, setNumeroPersonas] = useState(1);\n  const [habitaciones, setHabitaciones] = useState([]);\n  const [roomTypes, setRoomTypes] = useState({});\n  const tiposHabitacion = {\n    1: 'Doble',\n    2: 'Junior Suite',\n    3: 'Suite',\n    4: 'Gran Suite'\n  };\n  useEffect(() => {\n    fetchRoomTypes();\n    fetchPaises();\n    fetchHotelsAndRooms(paisSeleccionado);\n  }, []);\n\n  //IMAGENES\n\n  const fetchHotelImages = async idHotel => {\n    try {\n      const response = await fetch(`http://localhost:8080/hoteles/${idHotel}/imagenes`);\n      if (!response.ok) throw new Error('Error al cargar imágenes del hotel');\n      const images = await response.json();\n      setHotelImages(prevImages => ({\n        ...prevImages,\n        [idHotel]: images\n      }));\n    } catch (error) {\n      console.error('Error fetching hotel images:', error);\n    }\n  };\n  useEffect(() => {\n    hotels.forEach(hotel => {\n      fetchHotelImages(hotel.id_hotel);\n    });\n  }, [hotels]);\n  const fetchRoomTypes = async () => {\n    try {\n      const response = await fetch('http://localhost:8080/tipos_habitacion');\n      if (!response.ok) throw new Error('Error al cargar los tipos de habitación');\n      const data = await response.json();\n      setRoomTypes(data.reduce((map, roomType) => {\n        map[roomType.id_tipo] = roomType.imagenUrl || defaultRoomImage;\n        return map;\n      }, {}));\n    } catch (error) {\n      setError('Error al cargar los tipos de habitación: ' + error.message);\n    }\n  };\n  const fetchPaises = async () => {\n    try {\n      const response = await fetch('http://localhost:8080/hoteles/pais');\n      if (!response.ok) throw new Error('Error al cargar los países');\n      const data = await response.json();\n      setPaises(data);\n    } catch (error) {\n      setError('Error al cargar los países: ' + error.message);\n    }\n  };\n  const fetchHotelsAndRooms = async (pais = '') => {\n    let url = pais ? `http://localhost:8080/hoteles/por-pais/${pais}` : `http://localhost:8080/hoteles`;\n    try {\n      const hotelsResponse = await fetch(url);\n      if (!hotelsResponse.ok) throw new Error('Error al cargar hoteles');\n      const hotelsData = await hotelsResponse.json();\n      const roomTypesResponse = await fetch('http://localhost:8080/tipos_habitacion');\n      const roomTypesData = await roomTypesResponse.json();\n      const roomTypesMap = roomTypesData.reduce((acc, roomType) => {\n        acc[roomType.id_tipo] = roomType.imagenUrl || defaultRoomImage;\n        return acc;\n      }, {});\n      const hotelsWithRooms = await Promise.all(hotelsData.map(async hotel => {\n        const roomsResponse = await fetch(`http://localhost:8080/habitaciones?hotelId=${hotel.id_hotel}`);\n        const roomsData = await roomsResponse.json();\n        const roomsWithImages = roomsData.map(room => ({\n          ...room,\n          imagenUrl: roomTypesMap[room.tipo_habitacion]\n        }));\n        return {\n          ...hotel,\n          rooms: roomsWithImages\n        };\n      }));\n      setHotels(hotelsWithRooms);\n    } catch (error) {\n      setError('Error al cargar hoteles y habitaciones: ' + error.message);\n    }\n  };\n  const handleSearch = e => {\n    e.preventDefault();\n    fetchHotelsAndRooms(paisSeleccionado);\n  };\n  const fetchHabitaciones = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch(`http://localhost:8080/habitaciones/buscar?pais=${paisSeleccionado}&fechaIngreso=${fechaIngreso}&fechaSalida=${fechaSalida}&numeroPersonas=${numeroPersonas}`);\n      if (!response.ok) throw new Error('Error al buscar habitaciones disponibles');\n      const data = await response.json();\n      setHabitaciones(data);\n    } catch (error) {\n      setError('Error al buscar habitaciones disponibles: ' + error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"my-5\",\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        md: 12,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Buscar Habitaciones Disponibles\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"danger\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: fetchHabitaciones,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"pais\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Pa\\xEDs\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"select\",\n              value: paisSeleccionado,\n              onChange: e => setPaisSeleccionado(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Seleccione un pa\\xEDs\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 17\n              }, this), paises.map((pais, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: pais,\n                children: pais\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"fechaIngreso\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Fecha de Ingreso\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"date\",\n              value: fechaIngreso,\n              onChange: e => setFechaIngreso(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"fechaSalida\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Fecha de Salida\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"date\",\n              value: fechaSalida,\n              onChange: e => setFechaSalida(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"numeroPersonas\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"N\\xFAmero de Personas\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"number\",\n              min: \"1\",\n              value: numeroPersonas,\n              onChange: e => setNumeroPersonas(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            type: \"submit\",\n            children: \"Buscar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [hotels.length > 0 ? hotels.map(hotel => /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: 10,\n          className: \"mt-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Hotel: \", hotel.nombre]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [hotel.ciudad, \", \", hotel.pais]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Direcci\\xF3n: \", hotel.direccion]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 9\n          }, this), hotelImages[hotel.id_hotel] && hotelImages[hotel.id_hotel].length > 0 && /*#__PURE__*/_jsxDEV(Carousel, {\n            interval: null,\n            children: hotelImages[hotel.id_hotel].map((image, index) => /*#__PURE__*/_jsxDEV(Carousel.Item, {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"d-block w-100\",\n                src: image,\n                alt: `Imagen ${index + 1} del hotel ${hotel.nombre}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 17\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 15\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 7\n        }, this), hotel.rooms && hotel.rooms.map(room => /*#__PURE__*/_jsxDEV(Col, {\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n              variant: \"top\",\n              src: room.imagenUrl || defaultRoomImage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                children: [\"Habitaci\\xF3n: \", tiposHabitacion[room.tipo_habitacion]]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: [\"N\\xFAmero de habitaci\\xF3n: \", room.numero_habitacion]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: [\"Capacidad m\\xE1xima: \", room.capacidad_personas, \" personas\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: [\"Precio por noche: $\", room.precioxnoche]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: [\"Valoraci\\xF3n: \", room.valuacion, \" estrellas\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"primary\",\n                onClick: () => {\n                  console.log(\"Navigating with hotelDetails:\", hotel);\n                  navigate('/checkout', {\n                    state: {\n                      hotelDetails: {\n                        ...hotel\n                      },\n                      roomDetails: {\n                        ...room,\n                        idHabitacion: room.id_habitacion,\n                        roomType: tiposHabitacion[room.tipo_habitacion],\n                        roomPrice: room.precioxnoche,\n                        capacidadPersonas: room.capacidad_personas\n                      }\n                    }\n                  });\n                },\n                children: \"Reservar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Comentarios, {\n                idHabitacion: room.id_habitacion\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 11\n          }, this)\n        }, room.id_habitacion, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 9\n        }, this))]\n      }, hotel.id_hotel, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 5\n      }, this)) : /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-4\",\n          children: \"No se encontraron hoteles. Por favor, intenta nuevamente con diferentes criterios de b\\xFAsqueda.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 3\n      }, this), habitaciones.length > 0 ? habitaciones.map(habitacion => /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: 6,\n          className: \"mt-4\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n              variant: \"top\",\n              src: habitacion.imagenUrl || defaultRoomImage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                children: [\"Habitaci\\xF3n: \", tiposHabitacion[habitacion.tipo_habitacion]]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: [\"N\\xFAmero de habitaci\\xF3n: \", habitacion.numero_habitacion]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: [\"Capacidad m\\xE1xima: \", habitacion.capacidad_personas, \" personas\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: [\"Precio por noche: $\", habitacion.precioxnoche]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: [\"Valoraci\\xF3n: \", habitacion.valuacion, \" estrellas\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"primary\",\n                onClick: () => {\n                  console.log(\"Navigating with room details:\", habitacion);\n                  navigate('/checkout', {\n                    state: {\n                      roomDetails: {\n                        ...habitacion,\n                        idHabitacion: habitacion.id_habitacion,\n                        roomType: tiposHabitacion[habitacion.tipo_habitacion],\n                        roomPrice: habitacion.precioxnoche,\n                        capacidadPersonas: habitacion.capacidad_personas\n                      }\n                    }\n                  });\n                },\n                children: \"Reservar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 7\n        }, this)\n      }, habitacion.id_habitacion, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 5\n      }, this)) : /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-4\",\n          children: \"No se encontraron habitaciones disponibles. Intenta nuevamente con diferentes criterios de b\\xFAsqueda.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 5\n  }, this);\n};\n_s(HomePage, \"VqO2mait//krE7zsCdSi49Shmps=\", false, function () {\n  return [useNavigate];\n});\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","useEffect","Container","Row","Col","Card","Button","Form","Alert","Image","Carousel","useNavigate","defaultRoomImage","Comentarios","jsxDEV","_jsxDEV","HomePage","_s","hotels","setHotels","paises","setPaises","paisSeleccionado","setPaisSeleccionado","error","setError","navigate","hotelImages","setHotelImages","fechaSalida","setFechaSalida","numeroPersonas","setNumeroPersonas","habitaciones","setHabitaciones","roomTypes","setRoomTypes","tiposHabitacion","fetchRoomTypes","fetchPaises","fetchHotelsAndRooms","fetchHotelImages","idHotel","response","fetch","ok","Error","images","json","prevImages","console","forEach","hotel","id_hotel","data","reduce","map","roomType","id_tipo","imagenUrl","message","pais","url","hotelsResponse","hotelsData","roomTypesResponse","roomTypesData","roomTypesMap","acc","hotelsWithRooms","Promise","all","roomsResponse","roomsData","roomsWithImages","room","tipo_habitacion","rooms","handleSearch","e","preventDefault","fetchHabitaciones","fechaIngreso","className","children","md","fileName","_jsxFileName","lineNumber","columnNumber","variant","onSubmit","Group","controlId","Label","Control","as","value","onChange","target","index","type","setFechaIngreso","min","length","Fragment","nombre","ciudad","direccion","interval","image","Item","src","alt","Img","Body","Title","Text","numero_habitacion","capacidad_personas","precioxnoche","valuacion","onClick","log","state","hotelDetails","roomDetails","idHabitacion","id_habitacion","roomPrice","capacidadPersonas","habitacion","_c","$RefreshReg$"],"sources":["/home/pmorales/Downloads/Proyecto-B2B/Hotel/frontend/sistema_hoteles/src/components/HomePage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Card, Button, Form, Alert, Image, Carousel } from 'react-bootstrap';\nimport { useNavigate } from 'react-router-dom';\nimport defaultRoomImage from './roomImage.jpg';\nimport Comentarios from './Comentarios';\n\nconst HomePage = () => {\n  const [hotels, setHotels] = useState([]);\n  const [paises, setPaises] = useState([]);\n  const [paisSeleccionado, setPaisSeleccionado] = useState('');\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  \n  const [hotelImages, setHotelImages] = useState({}); \n  const [fechaSalida, setFechaSalida] = useState('');\n  const [numeroPersonas, setNumeroPersonas] = useState(1);\n  const [habitaciones, setHabitaciones] = useState([]);\n  const [roomTypes, setRoomTypes] = useState({});\n\n\n\n  const tiposHabitacion = {\n    1: 'Doble',\n    2: 'Junior Suite',\n    3: 'Suite',\n    4: 'Gran Suite'\n  };\n\n\n  useEffect(() => {\n    fetchRoomTypes();\n    fetchPaises();\n    fetchHotelsAndRooms(paisSeleccionado);\n  }, []);\n\n\n\n\n  //IMAGENES\n\n  const fetchHotelImages = async (idHotel) => {\n    try {\n      const response = await fetch(`http://localhost:8080/hoteles/${idHotel}/imagenes`);\n      if (!response.ok) throw new Error('Error al cargar imágenes del hotel');\n      const images = await response.json();\n      setHotelImages(prevImages => ({ ...prevImages, [idHotel]: images }));\n    } catch (error) {\n      console.error('Error fetching hotel images:', error);\n    }\n  };\n\n  useEffect(() => {\n    hotels.forEach((hotel) => {\n      fetchHotelImages(hotel.id_hotel);\n    });\n  }, [hotels]);\n\n  \n\n  const fetchRoomTypes = async () => {\n    try {\n      const response = await fetch('http://localhost:8080/tipos_habitacion');\n      if (!response.ok) throw new Error('Error al cargar los tipos de habitación');\n      const data = await response.json();\n      setRoomTypes(data.reduce((map, roomType) => {\n        map[roomType.id_tipo] = roomType.imagenUrl || defaultRoomImage; \n        return map;\n      }, {}));\n    } catch (error) {\n      setError('Error al cargar los tipos de habitación: ' + error.message);\n    }\n  };\n  \n\n\n\n  const fetchPaises = async () => {\n    try {\n      const response = await fetch('http://localhost:8080/hoteles/pais');\n      if (!response.ok) throw new Error('Error al cargar los países');\n      const data = await response.json();\n      setPaises(data);\n    } catch (error) {\n      setError('Error al cargar los países: ' + error.message);\n    }\n  };\n\n  const fetchHotelsAndRooms = async (pais = '') => {\n    let url = pais ? `http://localhost:8080/hoteles/por-pais/${pais}` : `http://localhost:8080/hoteles`;\n    try {\n      const hotelsResponse = await fetch(url);\n      if (!hotelsResponse.ok) throw new Error('Error al cargar hoteles');\n      const hotelsData = await hotelsResponse.json();\n  \n      const roomTypesResponse = await fetch('http://localhost:8080/tipos_habitacion');\n      const roomTypesData = await roomTypesResponse.json();\n      const roomTypesMap = roomTypesData.reduce((acc, roomType) => {\n        acc[roomType.id_tipo] = roomType.imagenUrl || defaultRoomImage;\n        return acc;\n      }, {});\n  \n      const hotelsWithRooms = await Promise.all(hotelsData.map(async (hotel) => {\n        const roomsResponse = await fetch(`http://localhost:8080/habitaciones?hotelId=${hotel.id_hotel}`);\n        const roomsData = await roomsResponse.json();\n        const roomsWithImages = roomsData.map(room => ({\n          ...room,\n          imagenUrl: roomTypesMap[room.tipo_habitacion]\n        }));\n        return { ...hotel, rooms: roomsWithImages };\n      }));\n  \n      setHotels(hotelsWithRooms);\n    } catch (error) {\n      setError('Error al cargar hoteles y habitaciones: ' + error.message);\n    }\n  };\n  \n  \n  \n  \n  const handleSearch = (e) => {\n    e.preventDefault();\n    fetchHotelsAndRooms(paisSeleccionado);\n  };\n  \n\n  const fetchHabitaciones = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await fetch(`http://localhost:8080/habitaciones/buscar?pais=${paisSeleccionado}&fechaIngreso=${fechaIngreso}&fechaSalida=${fechaSalida}&numeroPersonas=${numeroPersonas}`);\n      if (!response.ok) throw new Error('Error al buscar habitaciones disponibles');\n      const data = await response.json();\n      setHabitaciones(data);\n    } catch (error) {\n      setError('Error al buscar habitaciones disponibles: ' + error.message);\n    }\n  };\n\n\n\n  return (\n    <Container className=\"my-5\">\n      <Row>\n        <Col md={12}>\n          <h2>Buscar Habitaciones Disponibles</h2>\n          {error && <Alert variant=\"danger\">{error}</Alert>}\n          <Form onSubmit={fetchHabitaciones}>\n            <Form.Group controlId=\"pais\">\n              <Form.Label>País</Form.Label>\n              <Form.Control as=\"select\" value={paisSeleccionado} onChange={(e) => setPaisSeleccionado(e.target.value)}>\n                <option value=\"\">Seleccione un país</option>\n                {paises.map((pais, index) => (\n                  <option key={index} value={pais}>{pais}</option>\n                ))}\n              </Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId=\"fechaIngreso\">\n              <Form.Label>Fecha de Ingreso</Form.Label>\n              <Form.Control type=\"date\" value={fechaIngreso} onChange={(e) => setFechaIngreso(e.target.value)} />\n            </Form.Group>\n\n            <Form.Group controlId=\"fechaSalida\">\n              <Form.Label>Fecha de Salida</Form.Label>\n              <Form.Control type=\"date\" value={fechaSalida} onChange={(e) => setFechaSalida(e.target.value)} />\n            </Form.Group>\n\n            <Form.Group controlId=\"numeroPersonas\">\n              <Form.Label>Número de Personas</Form.Label>\n              <Form.Control type=\"number\" min=\"1\" value={numeroPersonas} onChange={(e) => setNumeroPersonas(e.target.value)} />\n            </Form.Group>\n\n            <Button variant=\"primary\" type=\"submit\">Buscar</Button>\n          </Form>\n        </Col>\n      </Row>\n      <Row>\n        \n      {hotels.length > 0 ? (\n  hotels.map((hotel) => (\n    <React.Fragment key={hotel.id_hotel}>\n      <Col md={10} className=\"mt-4\">\n        <h3>Hotel: {hotel.nombre}</h3>\n        <p>{hotel.ciudad}, {hotel.pais}</p>\n        <p>Dirección: {hotel.direccion}</p>\n        {hotelImages[hotel.id_hotel] && hotelImages[hotel.id_hotel].length > 0 && (\n          <Carousel interval={null}>\n            {hotelImages[hotel.id_hotel].map((image, index) => (\n              <Carousel.Item key={index}>\n                <img\n                  className=\"d-block w-100\"\n                  src={image}\n                  alt={`Imagen ${index + 1} del hotel ${hotel.nombre}`}\n                />\n              </Carousel.Item>\n            ))}\n          </Carousel>\n        )}\n      </Col>\n      {hotel.rooms && hotel.rooms.map((room) => (\n        <Col key={room.id_habitacion} md={6}>\n          <Card className=\"mb-3\">\n            <Card.Img variant=\"top\" src={room.imagenUrl || defaultRoomImage} />\n            <Card.Body>\n              <Card.Title>Habitación: {tiposHabitacion[room.tipo_habitacion]}</Card.Title>\n              <Card.Text>Número de habitación: {room.numero_habitacion}</Card.Text>\n              <Card.Text>Capacidad máxima: {room.capacidad_personas} personas</Card.Text>\n              <Card.Text>Precio por noche: ${room.precioxnoche}</Card.Text>\n              <Card.Text>Valoración: {room.valuacion} estrellas</Card.Text>\n              <Button variant=\"primary\" onClick={() => {\n                console.log(\"Navigating with hotelDetails:\", hotel);\n                navigate('/checkout', {\n                  state: {\n                    hotelDetails: { ...hotel },\n                    roomDetails: {\n                      ...room,\n                      idHabitacion: room.id_habitacion,\n                      roomType: tiposHabitacion[room.tipo_habitacion],\n                      roomPrice: room.precioxnoche,\n                      capacidadPersonas: room.capacidad_personas\n                    }\n                  }\n                });\n              }}>\n                Reservar\n              </Button>\n              <Comentarios idHabitacion={room.id_habitacion} />\n            </Card.Body>\n          </Card>\n        </Col>\n      ))}\n    </React.Fragment>\n  ))\n) : (\n  <Col>\n    <p className=\"mt-4\">No se encontraron hoteles. Por favor, intenta nuevamente con diferentes criterios de búsqueda.</p>\n  </Col>\n)}\n{habitaciones.length > 0 ? (\n  habitaciones.map((habitacion) => (\n    <React.Fragment key={habitacion.id_habitacion}>\n      <Col md={6} className=\"mt-4\">\n        <Card className=\"mb-3\">\n          <Card.Img variant=\"top\" src={habitacion.imagenUrl || defaultRoomImage} />\n          <Card.Body>\n            <Card.Title>Habitación: {tiposHabitacion[habitacion.tipo_habitacion]}</Card.Title>\n            <Card.Text>Número de habitación: {habitacion.numero_habitacion}</Card.Text>\n            <Card.Text>Capacidad máxima: {habitacion.capacidad_personas} personas</Card.Text>\n            <Card.Text>Precio por noche: ${habitacion.precioxnoche}</Card.Text>\n            <Card.Text>Valoración: {habitacion.valuacion} estrellas</Card.Text>\n            <Button variant=\"primary\" onClick={() => {\n              console.log(\"Navigating with room details:\", habitacion);\n              navigate('/checkout', {\n                state: {\n                  roomDetails: {\n                    ...habitacion,\n                    idHabitacion: habitacion.id_habitacion,\n                    roomType: tiposHabitacion[habitacion.tipo_habitacion],\n                    roomPrice: habitacion.precioxnoche,\n                    capacidadPersonas: habitacion.capacidad_personas\n                  }\n                }\n              });\n            }}>\n              Reservar\n            </Button>\n          </Card.Body>\n        </Card>\n      </Col>\n    </React.Fragment>\n  ))\n) : (\n  <Col>\n    <p className=\"mt-4\">No se encontraron habitaciones disponibles. Intenta nuevamente con diferentes criterios de búsqueda.</p>\n  </Col>\n)}\n</Row>\n</Container>\n);\n};\n\nexport default HomePage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}