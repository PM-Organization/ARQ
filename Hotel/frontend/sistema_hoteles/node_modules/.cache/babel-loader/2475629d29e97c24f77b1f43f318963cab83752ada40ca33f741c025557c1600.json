{"ast":null,"code":"var _jsxFileName = \"/home/pmorales/Downloads/Proyecto-B2B/Hotel/frontend/sistema_hoteles/src/components/BookingHistoryPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Button, Card } from 'react-bootstrap';\nimport { useUser } from './UserContext';\nimport EditReservationPage from './EditReservationPage';\nimport jsPDF from 'jspdf';\nimport 'jspdf-autotable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst BookingHistoryPage = () => {\n  _s();\n  const [reservations, setReservations] = useState([]);\n  const {\n    user\n  } = useUser();\n  const [showEditModal, setShowEditModal] = useState(false);\n  const [currentReservation, setCurrentReservation] = useState(null);\n  useEffect(() => {\n    if (user) {\n      fetchReservations();\n    }\n  }, [user]);\n  const fetchReservations = async () => {\n    console.log('Fetching reservations for user:', user.id);\n    try {\n      const response = await fetch(`http://localhost:8080/reservas/detalle/usuario/${user.id}`);\n      if (response.ok) {\n        const data = await response.json();\n        console.log('Reservations fetched successfully:', data);\n        setReservations(data.map(reserva => ({\n          ...reserva,\n          // como numero\n          tipoHabitacion: translateTipoHabitacion(reserva.tipoHabitacion) //formto\n        })));\n      } else {\n        console.error(\"Failed to fetch reservations.\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching reservations:\", error);\n    }\n  };\n\n  // a numero\n  const translateTipoHabitacion = tipoHabitacion => {\n    const tipoHabitacionMap = {\n      1: \"Doble\",\n      2: \"Junior Suite\",\n      3: \"Suite\",\n      4: \"Gran Suite\"\n    };\n    return tipoHabitacionMap[tipoHabitacion] || \"Unknown\";\n  };\n  const calculateNights = (checkIn, checkOut) => {\n    const checkInDate = new Date(checkIn);\n    const checkOutDate = new Date(checkOut);\n    const diffTime = Math.abs(checkOutDate.getTime() - checkInDate.getTime());\n    return Math.ceil(diffTime / (1000 * 3600 * 24));\n  };\n  setReservations(data.map(reserva => ({\n    ...reserva,\n    idHotel: reserva.idHotel,\n    // Asegúrate de que el nombre del campo coincida con la respuesta de la API\n    tipoHabitacion: translateTipoHabitacion(reserva.tipoHabitacion)\n  })));\n  const handleEdit = reserva => {\n    console.log('Opening edit modal for reservation with hotel id:', reserva.idHotel); // ¿Se imprime correctamente aquí?\n    if (!reserva.idHotel) {\n      console.error('No se encontró idHotel en la reserva:', reserva);\n      // Puede que desees manejar este error aquí, tal vez mostrando un mensaje al usuario.\n      return;\n    }\n    setCurrentReservation(reserva);\n    setShowEditModal(true);\n  };\n  const cancelarReserva = async idReserva => {\n    try {\n      const response = await fetch(`http://localhost:8080/reservas/${idReserva}/cancelar`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) {\n        throw new Error('No se pudo cancelar la reserva');\n      }\n      alert('Reserva cancelada con éxito');\n      fetchReservations(); //error tipográfico.\n    } catch (error) {\n      console.error('Error al cancelar la reserva:', error);\n      alert('Error al cancelar la reserva');\n    }\n  };\n  const actualizarReserva = async reservaActualizada => {\n    console.log('Updating reservation with:', reservaActualizada);\n    try {\n      const response = await fetch(`http://localhost:8080/reservas/${reservaActualizada.idReserva}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(reservaActualizada)\n      });\n      if (!response.ok) {\n        if (response.status === 409) {\n          // Conflicto , notifica al usuario\n          alert(\"Habitación no disponible.\");\n        } else {\n          // Otro tipo de error HTTP\n          throw new Error(`Reservation update failed: ${response.statusText}`);\n        }\n      } else {\n        console.log('Reservation updated successfully');\n        setShowEditModal(false);\n        await fetchReservations(); // Refresh the list of reservations\n      }\n    } catch (error) {\n      console.error('Error updating reservation:', error);\n      // Maneja el error genérico\n      alert(\"Ocurrió un error al actualizar la reserva. Por favor, intenta de nuevo.\");\n    }\n  };\n  const downloadReservationPdf = reserva => {\n    const doc = new jsPDF();\n    doc.text(\"Detalle de Reserva\", 14, 16);\n    doc.setFontSize(10);\n\n    // Información de la reserva\n    const reservationDetails = [{\n      title: \"Hotel\",\n      data: reserva.nombreHotel\n    }, {\n      title: \"Tipo de habitación\",\n      data: reserva.tipoHabitacion\n    }, {\n      title: \"Ubicación\",\n      data: `${reserva.ciudad}, ${reserva.pais} - ${reserva.direccion}`\n    }, {\n      title: \"Check-in\",\n      data: reserva.fechaIngreso\n    }, {\n      title: \"Check-out\",\n      data: reserva.fechaSalida\n    }, {\n      title: \"Número de noches\",\n      data: calculateNights(reserva.fechaIngreso, reserva.fechaSalida).toString()\n    }, {\n      title: \"Personas\",\n      data: reserva.capacidadPersonas.toString()\n    }, {\n      title: \"Total Reserva\",\n      data: `$${reserva.totalReserva}`\n    }, {\n      title: \"Estado\",\n      data: reserva.estadoReserva\n    }, {\n      title: \"Código de reserva\",\n      data: reserva.codigoReserva\n    }];\n    doc.autoTable({\n      head: [[\"Detalle\", \"Información\"]],\n      body: reservationDetails.map(item => [item.title, item.data]),\n      startY: 20\n    });\n    doc.save(`Reserva_${reserva.codigoReserva}.pdf`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"booking-history-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Historial de Reservas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), reservations.length > 0 ? reservations.map(reserva => /*#__PURE__*/_jsxDEV(Card, {\n      className: \"mb-3\",\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          children: [reserva.nombreHotel, \" - Tipo de habitaci\\xF3n: \", reserva.tipoHabitacion]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Card.Subtitle, {\n          children: [reserva.ciudad, \", \", reserva.pais, \" - \", reserva.direccion]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: [\"Check-in: \", reserva.fechaIngreso]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: [\"Check-out: \", reserva.fechaSalida]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: [\"N\\xFAmero de noches: \", calculateNights(reserva.fechaIngreso, reserva.fechaSalida)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: [\"Personas: \", reserva.capacidadPersonas]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: [\"Total Reserva: $\", reserva.totalReserva]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: [\"Estado: \", reserva.estadoReserva]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: [\"C\\xF3digo de reserva: \", reserva.codigoReserva]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }, this), reserva.estadoReserva !== \"Cancelada\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"warning\",\n            onClick: () => handleEdit(reserva),\n            children: \"Editar Reserva\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"danger\",\n            onClick: () => cancelarReserva(reserva.idReserva),\n            children: \"Cancelar Reserva\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"info\",\n          onClick: () => downloadReservationPdf(reserva),\n          children: \"Descargar Reserva\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }, this)\n    }, reserva.idReserva, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No se encontraron reservas.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 12\n    }, this), currentReservation && /*#__PURE__*/_jsxDEV(EditReservationPage, {\n      show: showEditModal,\n      handleClose: () => setShowEditModal(false),\n      reserva: currentReservation,\n      actualizarReserva: actualizarReserva\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 5\n  }, this);\n};\n_s(BookingHistoryPage, \"X1OkSv60oUg0CDYnhcTebtTtx/o=\", false, function () {\n  return [useUser];\n});\n_c = BookingHistoryPage;\nexport default BookingHistoryPage;\nvar _c;\n$RefreshReg$(_c, \"BookingHistoryPage\");","map":{"version":3,"names":["React","useEffect","useState","Button","Card","useUser","EditReservationPage","jsPDF","jsxDEV","_jsxDEV","Fragment","_Fragment","BookingHistoryPage","_s","reservations","setReservations","user","showEditModal","setShowEditModal","currentReservation","setCurrentReservation","fetchReservations","console","log","id","response","fetch","ok","data","json","map","reserva","tipoHabitacion","translateTipoHabitacion","error","tipoHabitacionMap","calculateNights","checkIn","checkOut","checkInDate","Date","checkOutDate","diffTime","Math","abs","getTime","ceil","idHotel","handleEdit","cancelarReserva","idReserva","method","headers","Error","alert","actualizarReserva","reservaActualizada","body","JSON","stringify","status","statusText","downloadReservationPdf","doc","text","setFontSize","reservationDetails","title","nombreHotel","ciudad","pais","direccion","fechaIngreso","fechaSalida","toString","capacidadPersonas","totalReserva","estadoReserva","codigoReserva","autoTable","head","item","startY","save","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","Body","Title","Subtitle","Text","variant","onClick","show","handleClose","_c","$RefreshReg$"],"sources":["/home/pmorales/Downloads/Proyecto-B2B/Hotel/frontend/sistema_hoteles/src/components/BookingHistoryPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Button, Card } from 'react-bootstrap';\nimport { useUser } from './UserContext';\nimport EditReservationPage from './EditReservationPage';\nimport jsPDF from 'jspdf';\nimport 'jspdf-autotable';\n\nconst BookingHistoryPage = () => {\n  const [reservations, setReservations] = useState([]);\n  const { user } = useUser();\n  const [showEditModal, setShowEditModal] = useState(false);\n  const [currentReservation, setCurrentReservation] = useState(null);\n\n  useEffect(() => {\n    if (user) {\n      fetchReservations();\n    }\n  }, [user]);\n\n  const fetchReservations = async () => {\n    console.log('Fetching reservations for user:', user.id);\n    try {\n      const response = await fetch(`http://localhost:8080/reservas/detalle/usuario/${user.id}`);\n      if (response.ok) {\n        const data = await response.json();\n        console.log('Reservations fetched successfully:', data);\n        setReservations(data.map(reserva => ({\n          ...reserva,\n          // como numero\n          tipoHabitacion: translateTipoHabitacion(reserva.tipoHabitacion), //formto\n        })));\n      } else {\n        console.error(\"Failed to fetch reservations.\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching reservations:\", error);\n    }\n  };\n\n  // a numero\n  const translateTipoHabitacion = (tipoHabitacion) => {\n    const tipoHabitacionMap = {\n      1: \"Doble\",\n      2: \"Junior Suite\",\n      3: \"Suite\",\n      4: \"Gran Suite\",\n    };\n    return tipoHabitacionMap[tipoHabitacion] || \"Unknown\";\n  };\n\n  const calculateNights = (checkIn, checkOut) => {\n    const checkInDate = new Date(checkIn);\n    const checkOutDate = new Date(checkOut);\n    const diffTime = Math.abs(checkOutDate.getTime() - checkInDate.getTime());\n    return Math.ceil(diffTime / (1000 * 3600 * 24));\n  };\n\n\n  setReservations(data.map(reserva => ({\n    ...reserva,\n    idHotel: reserva.idHotel, // Asegúrate de que el nombre del campo coincida con la respuesta de la API\n    tipoHabitacion: translateTipoHabitacion(reserva.tipoHabitacion),\n  })));\n  \n\n\n  const handleEdit = (reserva) => {\n    console.log('Opening edit modal for reservation with hotel id:', reserva.idHotel); // ¿Se imprime correctamente aquí?\n    if (!reserva.idHotel) {\n      console.error('No se encontró idHotel en la reserva:', reserva);\n      // Puede que desees manejar este error aquí, tal vez mostrando un mensaje al usuario.\n      return;\n    }\n    setCurrentReservation(reserva);\n    setShowEditModal(true);\n  };\n  \n  \n\n  const cancelarReserva = async (idReserva) => {\n    try {\n      const response = await fetch(`http://localhost:8080/reservas/${idReserva}/cancelar`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n      if (!response.ok) {\n        throw new Error('No se pudo cancelar la reserva');\n      }\n      alert('Reserva cancelada con éxito');\n      fetchReservations(); //error tipográfico.\n    } catch (error) {\n      console.error('Error al cancelar la reserva:', error);\n      alert('Error al cancelar la reserva');\n    }\n  };\n\n  const actualizarReserva = async (reservaActualizada) => {\n    console.log('Updating reservation with:', reservaActualizada);\n    try {\n      const response = await fetch(`http://localhost:8080/reservas/${reservaActualizada.idReserva}`, {\n        method: 'PUT',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(reservaActualizada),\n      });\n  \n      if (!response.ok) {\n        if (response.status === 409) {\n          // Conflicto , notifica al usuario\n          alert(\"Habitación no disponible.\");\n        } else {\n          // Otro tipo de error HTTP\n          throw new Error(`Reservation update failed: ${response.statusText}`);\n        }\n      } else {\n        console.log('Reservation updated successfully');\n        setShowEditModal(false);\n        await fetchReservations(); // Refresh the list of reservations\n      }\n    } catch (error) {\n      console.error('Error updating reservation:', error);\n      // Maneja el error genérico\n      alert(\"Ocurrió un error al actualizar la reserva. Por favor, intenta de nuevo.\");\n    }\n  };\n  \n\n\n  const downloadReservationPdf = (reserva) => {\n    const doc = new jsPDF();\n    doc.text(\"Detalle de Reserva\", 14, 16);\n    doc.setFontSize(10);\n\n    // Información de la reserva\n    const reservationDetails = [\n      { title: \"Hotel\", data: reserva.nombreHotel },\n      { title: \"Tipo de habitación\", data: reserva.tipoHabitacion },\n      { title: \"Ubicación\", data: `${reserva.ciudad}, ${reserva.pais} - ${reserva.direccion}` },\n      { title: \"Check-in\", data: reserva.fechaIngreso },\n      { title: \"Check-out\", data: reserva.fechaSalida },\n      { title: \"Número de noches\", data: calculateNights(reserva.fechaIngreso, reserva.fechaSalida).toString() },\n      { title: \"Personas\", data: reserva.capacidadPersonas.toString() },\n      { title: \"Total Reserva\", data: `$${reserva.totalReserva}` },\n      { title: \"Estado\", data: reserva.estadoReserva },\n      { title: \"Código de reserva\", data: reserva.codigoReserva },\n    ];\n\n    doc.autoTable({\n      head: [[\"Detalle\", \"Información\"]],\n      body: reservationDetails.map((item) => [item.title, item.data]),\n      startY: 20,\n    });\n\n    doc.save(`Reserva_${reserva.codigoReserva}.pdf`);\n  };\n\n  return (\n    <div className=\"booking-history-container\">\n      <h2>Historial de Reservas</h2>\n      {reservations.length > 0 ? reservations.map((reserva) => (\n        <Card key={reserva.idReserva} className=\"mb-3\">\n          <Card.Body>\n            <Card.Title>{reserva.nombreHotel} - Tipo de habitación: {reserva.tipoHabitacion}</Card.Title>\n            <Card.Subtitle>{reserva.ciudad}, {reserva.pais} - {reserva.direccion}</Card.Subtitle>\n            <Card.Text>Check-in: {reserva.fechaIngreso}</Card.Text>\n            <Card.Text>Check-out: {reserva.fechaSalida}</Card.Text>\n            <Card.Text>Número de noches: {calculateNights(reserva.fechaIngreso, reserva.fechaSalida)}</Card.Text>\n            <Card.Text>Personas: {reserva.capacidadPersonas}</Card.Text>\n            <Card.Text>Total Reserva: ${reserva.totalReserva}</Card.Text>\n            <Card.Text>Estado: {reserva.estadoReserva}</Card.Text>\n            <Card.Text>Código de reserva: {reserva.codigoReserva}</Card.Text>\n            {reserva.estadoReserva !== \"Cancelada\" && (\n              <>\n                <Button variant=\"warning\" onClick={() => handleEdit(reserva)}>Editar Reserva</Button>\n                <Button variant=\"danger\" onClick={() => cancelarReserva(reserva.idReserva)}>Cancelar Reserva</Button>\n              </>\n            )}\n                      <Button variant=\"info\" onClick={() => downloadReservationPdf(reserva)}>Descargar Reserva</Button>\n\n          </Card.Body>\n        </Card>\n        \n      )) : <p>No se encontraron reservas.</p>}\n      {currentReservation && (\n        <EditReservationPage\n          show={showEditModal}\n          handleClose={() => setShowEditModal(false)}\n          reserva={currentReservation}\n          actualizarReserva={actualizarReserva}\n        />\n        \n      )}\n    </div>\n  );\n};\n\nexport default BookingHistoryPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}