{"ast":null,"code":"var _jsxFileName = \"/home/pmorales/Downloads/Proyecto-B2B/Hotel/frontend/sistema_hoteles/src/components/HomePage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Card, Button, Form, Alert, Image, Carousel } from 'react-bootstrap';\nimport { useNavigate } from 'react-router-dom';\nimport defaultRoomImage from './roomImage.jpg';\nimport Comentarios from './Comentarios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomePage = () => {\n  _s();\n  const [hotels, setHotels] = useState([]);\n  const [paises, setPaises] = useState([]);\n  const [paisSeleccionado, setPaisSeleccionado] = useState('');\n  const [fechaIngreso, setFechaIngreso] = useState('');\n  const [fechaSalida, setFechaSalida] = useState('');\n  const [numeroPersonas, setNumeroPersonas] = useState(1);\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  const [hotelImages, setHotelImages] = useState({});\n  const [roomTypes, setRoomTypes] = useState({});\n  const tiposHabitacion = {\n    1: 'Doble',\n    2: 'Junior Suite',\n    3: 'Suite',\n    4: 'Gran Suite'\n  };\n  useEffect(() => {\n    fetchRoomTypes();\n    fetchPaises();\n    fetchHotelsAndRooms(paisSeleccionado, fechaIngreso, fechaSalida, numeroPersonas);\n  }, [paisSeleccionado, fechaIngreso, fechaSalida, numeroPersonas]);\n\n  //IMAGENES\n\n  const fetchHotelImages = async idHotel => {\n    try {\n      const response = await fetch(`http://localhost:8080/hoteles/${idHotel}/imagenes`);\n      if (!response.ok) throw new Error('Error al cargar imágenes del hotel');\n      const images = await response.json();\n      setHotelImages(prevImages => ({\n        ...prevImages,\n        [idHotel]: images\n      }));\n    } catch (error) {\n      console.error('Error fetching hotel images:', error);\n    }\n  };\n  useEffect(() => {\n    hotels.forEach(hotel => {\n      fetchHotelImages(hotel.id_hotel);\n    });\n  }, [hotels]);\n  const fetchRoomTypes = async () => {\n    try {\n      const response = await fetch('http://localhost:8080/tipos_habitacion');\n      const data = await response.json();\n      const types = data.reduce((acc, curr) => ({\n        ...acc,\n        [curr.id_tipo]: curr\n      }), {});\n      setRoomTypes(types);\n    } catch (error) {\n      setError('Error al cargar los tipos de habitación: ' + error.message);\n    }\n  };\n  const fetchPaises = async () => {\n    try {\n      const response = await fetch('http://localhost:8080/hoteles/pais');\n      if (!response.ok) throw new Error('Error al cargar los países');\n      const data = await response.json();\n      setPaises(data);\n    } catch (error) {\n      setError('Error al cargar los países: ' + error.message);\n    }\n  };\n  const fetchHotelsAndRooms = async () => {\n    const params = new URLSearchParams({\n      ...(paisSeleccionado && {\n        pais: paisSeleccionado\n      }),\n      ...(fechaIngreso && {\n        fechaIngreso\n      }),\n      ...(fechaSalida && {\n        fechaSalida\n      }),\n      numeroPersonas: numeroPersonas.toString()\n    }).toString();\n    const url = `http://localhost:8080/habitaciones/buscar?${params}`;\n    try {\n      const response = await fetch(url);\n      if (!response.ok) throw new Error(`Error al cargar hoteles y habitaciones: ${response.statusText}`);\n      const data = await response.json();\n\n      // Asegura que cada habitación tenga asignada una imagen de tipo de habitación\n      const hotelsWithDetailedRooms = data.map(hotel => ({\n        ...hotel,\n        rooms: hotel.rooms.map(room => {\n          var _roomTypes$room$tipo_;\n          return {\n            ...room,\n            imagenUrl: ((_roomTypes$room$tipo_ = roomTypes[room.tipo_habitacion]) === null || _roomTypes$room$tipo_ === void 0 ? void 0 : _roomTypes$room$tipo_.imagenUrl) || defaultRoomImage\n          };\n        })\n      }));\n      setHotels(hotelsWithDetailedRooms);\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n  const handleSearch = e => {\n    e.preventDefault();\n    setError(''); // Restablece el estado de error antes de hacer una nueva búsqueda\n    fetchHotelsAndRooms(paisSeleccionado, fechaIngreso, fechaSalida, numeroPersonas);\n  };\n  const organizeRoomsByHotel = roomsData => {\n    const hotels = {};\n    roomsData.forEach(room => {\n      if (!hotels[room.id_hotel]) {\n        hotels[room.id_hotel] = {\n          id_hotel: room.id_hotel,\n          nombre: room.nombre_hotel,\n          ciudad: room.ciudad,\n          pais: room.pais,\n          direccion: room.direccion,\n          imagenes: room.imagenes_hotel,\n          // Asumiendo que este campo trae las imágenes del hotel\n          rooms: []\n        };\n      }\n      hotels[room.id_hotel].rooms.push({\n        id_habitacion: room.id_habitacion,\n        numero_habitacion: room.numero_habitacion,\n        capacidad_personas: room.capacidad_personas,\n        tipo_habitacion: room.tipo_habitacion,\n        precioxpersona: room.precioxpersona,\n        precioxnoche: room.precioxnoche,\n        valuacion: room.valuacion,\n        disponible: room.disponible\n      });\n    });\n    return Object.values(hotels);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"my-5\",\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        md: 12,\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleSearch,\n          children: [/*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"formPais\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Pa\\xEDs\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  as: \"select\",\n                  value: paisSeleccionado,\n                  onChange: e => setPaisSeleccionado(e.target.value),\n                  children: paises.map(pais => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: pais,\n                    children: pais\n                  }, pais, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 171,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"formFechaIngreso\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Fecha de Ingreso\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 178,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"date\",\n                  value: fechaIngreso,\n                  onChange: e => setFechaIngreso(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"formFechaSalida\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Fecha de Salida\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 184,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"date\",\n                  value: fechaSalida,\n                  onChange: e => setFechaSalida(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 185,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"formNumeroPersonas\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"N\\xFAmero de Personas\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 190,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"number\",\n                  value: numeroPersonas,\n                  onChange: e => setNumeroPersonas(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            type: \"submit\",\n            children: \"Buscar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: hotels.length > 0 ? hotels.map(hotel => /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: 10,\n          className: \"mt-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Hotel: \", hotel.nombre]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [hotel.ciudad, \", \", hotel.pais]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Direcci\\xF3n: \", hotel.direccion]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 9\n          }, this), hotelImages[hotel.id_hotel] && hotelImages[hotel.id_hotel].length > 0 && /*#__PURE__*/_jsxDEV(Carousel, {\n            interval: null,\n            children: hotelImages[hotel.id_hotel].map((image, index) => /*#__PURE__*/_jsxDEV(Carousel.Item, {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"d-block w-100\",\n                src: image,\n                alt: `Imagen ${index + 1} del hotel ${hotel.nombre}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 17\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 15\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 7\n        }, this), hotel.rooms && hotel.rooms.map(room => /*#__PURE__*/_jsxDEV(Col, {\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n              variant: \"top\",\n              src: room.imagenUrl || defaultRoomImage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                children: [\"Habitaci\\xF3n: \", tiposHabitacion[room.tipo_habitacion]]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: [\"N\\xFAmero de habitaci\\xF3n: \", room.numero_habitacion]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: [\"Capacidad m\\xE1xima: \", room.capacidad_personas, \" personas\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: [\"Precio por noche: $\", room.precioxnoche]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: [\"Valoraci\\xF3n: \", room.valuacion, \" estrellas\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"primary\",\n                onClick: () => {\n                  console.log(\"Navigating with hotelDetails:\", hotel);\n                  navigate('/checkout', {\n                    state: {\n                      hotelDetails: {\n                        ...hotel\n                      },\n                      roomDetails: {\n                        ...room,\n                        idHabitacion: room.id_habitacion,\n                        roomType: tiposHabitacion[room.tipo_habitacion],\n                        roomPrice: room.precioxnoche,\n                        capacidadPersonas: room.capacidad_personas\n                      }\n                    }\n                  });\n                },\n                children: \"Reservar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Comentarios, {\n                idHabitacion: room.id_habitacion\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 19\n          }, this)\n        }, room.id_habitacion, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 17\n        }, this))]\n      }, hotel.id_hotel, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 5\n      }, this)) : /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-4\",\n          children: \"No se encontraron hoteles. Por favor, intenta nuevamente con diferentes criterios de b\\xFAsqueda.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 5\n  }, this);\n};\n_s(HomePage, \"4M01MezPRIwAkSEJ8Gnlr5Cy6Ys=\", false, function () {\n  return [useNavigate];\n});\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","useEffect","Container","Row","Col","Card","Button","Form","Alert","Image","Carousel","useNavigate","defaultRoomImage","Comentarios","jsxDEV","_jsxDEV","HomePage","_s","hotels","setHotels","paises","setPaises","paisSeleccionado","setPaisSeleccionado","fechaIngreso","setFechaIngreso","fechaSalida","setFechaSalida","numeroPersonas","setNumeroPersonas","error","setError","navigate","hotelImages","setHotelImages","roomTypes","setRoomTypes","tiposHabitacion","fetchRoomTypes","fetchPaises","fetchHotelsAndRooms","fetchHotelImages","idHotel","response","fetch","ok","Error","images","json","prevImages","console","forEach","hotel","id_hotel","data","types","reduce","acc","curr","id_tipo","message","params","URLSearchParams","pais","toString","url","statusText","hotelsWithDetailedRooms","map","rooms","room","_roomTypes$room$tipo_","imagenUrl","tipo_habitacion","handleSearch","e","preventDefault","organizeRoomsByHotel","roomsData","nombre","nombre_hotel","ciudad","direccion","imagenes","imagenes_hotel","push","id_habitacion","numero_habitacion","capacidad_personas","precioxpersona","precioxnoche","valuacion","disponible","Object","values","className","children","md","onSubmit","Group","controlId","Label","fileName","_jsxFileName","lineNumber","columnNumber","Control","as","value","onChange","target","type","variant","length","Fragment","interval","image","index","Item","src","alt","Img","Body","Title","Text","onClick","log","state","hotelDetails","roomDetails","idHabitacion","roomType","roomPrice","capacidadPersonas","_c","$RefreshReg$"],"sources":["/home/pmorales/Downloads/Proyecto-B2B/Hotel/frontend/sistema_hoteles/src/components/HomePage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Card, Button, Form, Alert, Image, Carousel } from 'react-bootstrap';\nimport { useNavigate } from 'react-router-dom';\nimport defaultRoomImage from './roomImage.jpg';\nimport Comentarios from './Comentarios';\n\nconst HomePage = () => {\n  const [hotels, setHotels] = useState([]);\n  const [paises, setPaises] = useState([]);\n  const [paisSeleccionado, setPaisSeleccionado] = useState('');\n  const [fechaIngreso, setFechaIngreso] = useState('');\n  const [fechaSalida, setFechaSalida] = useState('');\n  const [numeroPersonas, setNumeroPersonas] = useState(1);\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  const [hotelImages, setHotelImages] = useState({});\n  const [roomTypes, setRoomTypes] = useState({});\n\n\n\n\n  const tiposHabitacion = {\n    1: 'Doble',\n    2: 'Junior Suite',\n    3: 'Suite',\n    4: 'Gran Suite'\n  };\n\n\n  useEffect(() => {\n    fetchRoomTypes();\n    fetchPaises();\n    fetchHotelsAndRooms(paisSeleccionado, fechaIngreso, fechaSalida, numeroPersonas);\n  }, [paisSeleccionado, fechaIngreso, fechaSalida, numeroPersonas]);\n\n\n\n\n\n  //IMAGENES\n\n  const fetchHotelImages = async (idHotel) => {\n    try {\n      const response = await fetch(`http://localhost:8080/hoteles/${idHotel}/imagenes`);\n      if (!response.ok) throw new Error('Error al cargar imágenes del hotel');\n      const images = await response.json();\n      setHotelImages(prevImages => ({ ...prevImages, [idHotel]: images }));\n    } catch (error) {\n      console.error('Error fetching hotel images:', error);\n    }\n  };\n\n  useEffect(() => {\n    hotels.forEach((hotel) => {\n      fetchHotelImages(hotel.id_hotel);\n    });\n  }, [hotels]);\n\n  \n\n  const fetchRoomTypes = async () => {\n    try {\n      const response = await fetch('http://localhost:8080/tipos_habitacion');\n      const data = await response.json();\n      const types = data.reduce((acc, curr) => ({ ...acc, [curr.id_tipo]: curr }), {});\n      setRoomTypes(types);\n    } catch (error) {\n      setError('Error al cargar los tipos de habitación: ' + error.message);\n    }\n  };\n\n  \n\n\n\n  const fetchPaises = async () => {\n    try {\n      const response = await fetch('http://localhost:8080/hoteles/pais');\n      if (!response.ok) throw new Error('Error al cargar los países');\n      const data = await response.json();\n      setPaises(data);\n    } catch (error) {\n      setError('Error al cargar los países: ' + error.message);\n    }\n  };\n\n  const fetchHotelsAndRooms = async () => {\n    const params = new URLSearchParams({\n      ...(paisSeleccionado && { pais: paisSeleccionado }),\n      ...(fechaIngreso && { fechaIngreso }),\n      ...(fechaSalida && { fechaSalida }),\n      numeroPersonas: numeroPersonas.toString()\n    }).toString();\n    const url = `http://localhost:8080/habitaciones/buscar?${params}`;\n\n    try {\n      const response = await fetch(url);\n      if (!response.ok) throw new Error(`Error al cargar hoteles y habitaciones: ${response.statusText}`);\n      const data = await response.json();\n      \n      // Asegura que cada habitación tenga asignada una imagen de tipo de habitación\n      const hotelsWithDetailedRooms = data.map(hotel => ({\n        ...hotel,\n        rooms: hotel.rooms.map(room => ({\n          ...room,\n          imagenUrl: roomTypes[room.tipo_habitacion]?.imagenUrl || defaultRoomImage\n        }))\n      }));\n      setHotels(hotelsWithDetailedRooms);\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n  \n  \n  \n  const handleSearch = (e) => {\n    e.preventDefault();\n    setError(''); // Restablece el estado de error antes de hacer una nueva búsqueda\n    fetchHotelsAndRooms(paisSeleccionado, fechaIngreso, fechaSalida, numeroPersonas);\n  };\n  \n\n\n  const organizeRoomsByHotel = (roomsData) => {\n    const hotels = {};\n    \n    roomsData.forEach(room => {\n      if (!hotels[room.id_hotel]) {\n        hotels[room.id_hotel] = {\n          id_hotel: room.id_hotel,\n          nombre: room.nombre_hotel,\n          ciudad: room.ciudad,\n          pais: room.pais,\n          direccion: room.direccion,\n          imagenes: room.imagenes_hotel, // Asumiendo que este campo trae las imágenes del hotel\n          rooms: [],\n        };\n      }\n      hotels[room.id_hotel].rooms.push({\n        id_habitacion: room.id_habitacion,\n        numero_habitacion: room.numero_habitacion,\n        capacidad_personas: room.capacidad_personas,\n        tipo_habitacion: room.tipo_habitacion,\n        precioxpersona: room.precioxpersona,\n        precioxnoche: room.precioxnoche,\n        valuacion: room.valuacion,\n        disponible: room.disponible,\n      });\n    });\n    \n    return Object.values(hotels);\n  };\n  \n\n\n  \n\n  return (\n    <Container className=\"my-5\">\n      <Row>\n        <Col md={12}>\n          {/* Formulario para los filtros de búsqueda */}\n          <Form onSubmit={handleSearch}>\n            <Row>\n              <Col>\n                <Form.Group controlId=\"formPais\">\n                  <Form.Label>País</Form.Label>\n                  <Form.Control as=\"select\" value={paisSeleccionado} onChange={(e) => setPaisSeleccionado(e.target.value)}>\n                    {paises.map((pais) => (\n                      <option key={pais} value={pais}>{pais}</option>\n                    ))}\n                  </Form.Control>\n                </Form.Group>\n              </Col>\n              <Col>\n                <Form.Group controlId=\"formFechaIngreso\">\n                  <Form.Label>Fecha de Ingreso</Form.Label>\n                  <Form.Control type=\"date\" value={fechaIngreso} onChange={(e) => setFechaIngreso(e.target.value)} />\n                </Form.Group>\n              </Col>\n              <Col>\n                <Form.Group controlId=\"formFechaSalida\">\n                  <Form.Label>Fecha de Salida</Form.Label>\n                  <Form.Control type=\"date\" value={fechaSalida} onChange={(e) => setFechaSalida(e.target.value)} />\n                </Form.Group>\n              </Col>\n              <Col>\n                <Form.Group controlId=\"formNumeroPersonas\">\n                  <Form.Label>Número de Personas</Form.Label>\n                  <Form.Control type=\"number\" value={numeroPersonas} onChange={(e) => setNumeroPersonas(e.target.value)} />\n                </Form.Group>\n              </Col>\n            </Row>\n            <Button variant=\"primary\" type=\"submit\">\n              Buscar\n            </Button>\n          </Form>\n        </Col>\n      </Row>\n      <Row>\n      {hotels.length > 0 ? (\n  hotels.map((hotel) => (\n    <React.Fragment key={hotel.id_hotel}>\n      <Col md={10} className=\"mt-4\">\n        <h3>Hotel: {hotel.nombre}</h3>\n        <p>{hotel.ciudad}, {hotel.pais}</p>\n        <p>Dirección: {hotel.direccion}</p>\n        {hotelImages[hotel.id_hotel] && hotelImages[hotel.id_hotel].length > 0 && (\n          <Carousel interval={null}>\n            {hotelImages[hotel.id_hotel].map((image, index) => (\n              <Carousel.Item key={index}>\n                <img\n                  className=\"d-block w-100\"\n                  src={image}\n                  alt={`Imagen ${index + 1} del hotel ${hotel.nombre}`}\n                />\n              </Carousel.Item>\n            ))}\n          </Carousel>\n        )}\n\n      </Col>\n              {hotel.rooms && hotel.rooms.map((room) => (\n                <Col key={room.id_habitacion} md={6}>\n                  <Card className=\"mb-3\">\n                  <Card.Img variant=\"top\" src={room.imagenUrl || defaultRoomImage} />\n                    <Card.Body>\n                    <Card.Title>Habitación: {tiposHabitacion[room.tipo_habitacion]}</Card.Title>\n                      <Card.Text>Número de habitación: {room.numero_habitacion}</Card.Text>\n                      <Card.Text>Capacidad máxima: {room.capacidad_personas} personas</Card.Text>\n                      <Card.Text>Precio por noche: ${room.precioxnoche}</Card.Text>\n                      <Card.Text>Valoración: {room.valuacion} estrellas</Card.Text>\n                      <Button variant=\"primary\" onClick={() => {\n                      console.log(\"Navigating with hotelDetails:\", hotel);\n                      navigate('/checkout', {\n                        state: {\n                          hotelDetails: { ...hotel },\n                          roomDetails: {\n                            ...room,\n                            idHabitacion: room.id_habitacion,\n                            roomType: tiposHabitacion[room.tipo_habitacion],\n                            roomPrice: room.precioxnoche,\n                            capacidadPersonas: room.capacidad_personas\n                          }\n                        }\n                      });\n                    }}>\n                      Reservar\n                    </Button>\n\n                    <Comentarios idHabitacion={room.id_habitacion} />\n\n\n                    </Card.Body>\n                  </Card>\n                </Col>\n              ))}\n            </React.Fragment>\n          ))\n        ) : (\n          <Col>\n            <p className=\"mt-4\">No se encontraron hoteles. Por favor, intenta nuevamente con diferentes criterios de búsqueda.</p>\n          </Col>\n        )}\n      </Row>\n    </Container>\n  );\n};\n\nexport default HomePage;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,GAAG,EAAEC,GAAG,EAAEC,IAAI,EAAEC,MAAM,EAAEC,IAAI,EAAEC,KAAK,EAAEC,KAAK,EAAEC,QAAQ,QAAQ,iBAAiB;AACjG,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,gBAAgB,MAAM,iBAAiB;AAC9C,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACoB,MAAM,EAAEC,SAAS,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACsB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAACwB,YAAY,EAAEC,eAAe,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAAC0B,WAAW,EAAEC,cAAc,CAAC,GAAG3B,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAAC4B,cAAc,EAAEC,iBAAiB,CAAC,GAAG7B,QAAQ,CAAC,CAAC,CAAC;EACvD,MAAM,CAAC8B,KAAK,EAAEC,QAAQ,CAAC,GAAG/B,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMgC,QAAQ,GAAGrB,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACsB,WAAW,EAAEC,cAAc,CAAC,GAAGlC,QAAQ,CAAC,CAAC,CAAC,CAAC;EAClD,MAAM,CAACmC,SAAS,EAAEC,YAAY,CAAC,GAAGpC,QAAQ,CAAC,CAAC,CAAC,CAAC;EAK9C,MAAMqC,eAAe,GAAG;IACtB,CAAC,EAAE,OAAO;IACV,CAAC,EAAE,cAAc;IACjB,CAAC,EAAE,OAAO;IACV,CAAC,EAAE;EACL,CAAC;EAGDpC,SAAS,CAAC,MAAM;IACdqC,cAAc,CAAC,CAAC;IAChBC,WAAW,CAAC,CAAC;IACbC,mBAAmB,CAAClB,gBAAgB,EAAEE,YAAY,EAAEE,WAAW,EAAEE,cAAc,CAAC;EAClF,CAAC,EAAE,CAACN,gBAAgB,EAAEE,YAAY,EAAEE,WAAW,EAAEE,cAAc,CAAC,CAAC;;EAMjE;;EAEA,MAAMa,gBAAgB,GAAG,MAAOC,OAAO,IAAK;IAC1C,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,iCAAgCF,OAAQ,WAAU,CAAC;MACjF,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,oCAAoC,CAAC;MACvE,MAAMC,MAAM,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MACpCd,cAAc,CAACe,UAAU,KAAK;QAAE,GAAGA,UAAU;QAAE,CAACP,OAAO,GAAGK;MAAO,CAAC,CAAC,CAAC;IACtE,CAAC,CAAC,OAAOjB,KAAK,EAAE;MACdoB,OAAO,CAACpB,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACtD;EACF,CAAC;EAED7B,SAAS,CAAC,MAAM;IACdiB,MAAM,CAACiC,OAAO,CAAEC,KAAK,IAAK;MACxBX,gBAAgB,CAACW,KAAK,CAACC,QAAQ,CAAC;IAClC,CAAC,CAAC;EACJ,CAAC,EAAE,CAACnC,MAAM,CAAC,CAAC;EAIZ,MAAMoB,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI;MACF,MAAMK,QAAQ,GAAG,MAAMC,KAAK,CAAC,wCAAwC,CAAC;MACtE,MAAMU,IAAI,GAAG,MAAMX,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClC,MAAMO,KAAK,GAAGD,IAAI,CAACE,MAAM,CAAC,CAACC,GAAG,EAAEC,IAAI,MAAM;QAAE,GAAGD,GAAG;QAAE,CAACC,IAAI,CAACC,OAAO,GAAGD;MAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;MAChFtB,YAAY,CAACmB,KAAK,CAAC;IACrB,CAAC,CAAC,OAAOzB,KAAK,EAAE;MACdC,QAAQ,CAAC,2CAA2C,GAAGD,KAAK,CAAC8B,OAAO,CAAC;IACvE;EACF,CAAC;EAMD,MAAMrB,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACF,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAoC,CAAC;MAClE,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,4BAA4B,CAAC;MAC/D,MAAMQ,IAAI,GAAG,MAAMX,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClC3B,SAAS,CAACiC,IAAI,CAAC;IACjB,CAAC,CAAC,OAAOxB,KAAK,EAAE;MACdC,QAAQ,CAAC,8BAA8B,GAAGD,KAAK,CAAC8B,OAAO,CAAC;IAC1D;EACF,CAAC;EAED,MAAMpB,mBAAmB,GAAG,MAAAA,CAAA,KAAY;IACtC,MAAMqB,MAAM,GAAG,IAAIC,eAAe,CAAC;MACjC,IAAIxC,gBAAgB,IAAI;QAAEyC,IAAI,EAAEzC;MAAiB,CAAC,CAAC;MACnD,IAAIE,YAAY,IAAI;QAAEA;MAAa,CAAC,CAAC;MACrC,IAAIE,WAAW,IAAI;QAAEA;MAAY,CAAC,CAAC;MACnCE,cAAc,EAAEA,cAAc,CAACoC,QAAQ,CAAC;IAC1C,CAAC,CAAC,CAACA,QAAQ,CAAC,CAAC;IACb,MAAMC,GAAG,GAAI,6CAA4CJ,MAAO,EAAC;IAEjE,IAAI;MACF,MAAMlB,QAAQ,GAAG,MAAMC,KAAK,CAACqB,GAAG,CAAC;MACjC,IAAI,CAACtB,QAAQ,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAE,2CAA0CH,QAAQ,CAACuB,UAAW,EAAC,CAAC;MACnG,MAAMZ,IAAI,GAAG,MAAMX,QAAQ,CAACK,IAAI,CAAC,CAAC;;MAElC;MACA,MAAMmB,uBAAuB,GAAGb,IAAI,CAACc,GAAG,CAAChB,KAAK,KAAK;QACjD,GAAGA,KAAK;QACRiB,KAAK,EAAEjB,KAAK,CAACiB,KAAK,CAACD,GAAG,CAACE,IAAI;UAAA,IAAAC,qBAAA;UAAA,OAAK;YAC9B,GAAGD,IAAI;YACPE,SAAS,EAAE,EAAAD,qBAAA,GAAApC,SAAS,CAACmC,IAAI,CAACG,eAAe,CAAC,cAAAF,qBAAA,uBAA/BA,qBAAA,CAAiCC,SAAS,KAAI5D;UAC3D,CAAC;QAAA,CAAC;MACJ,CAAC,CAAC,CAAC;MACHO,SAAS,CAACgD,uBAAuB,CAAC;IACpC,CAAC,CAAC,OAAOrC,KAAK,EAAE;MACdC,QAAQ,CAACD,KAAK,CAAC8B,OAAO,CAAC;IACzB;EACF,CAAC;EAID,MAAMc,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB7C,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;IACdS,mBAAmB,CAAClB,gBAAgB,EAAEE,YAAY,EAAEE,WAAW,EAAEE,cAAc,CAAC;EAClF,CAAC;EAID,MAAMiD,oBAAoB,GAAIC,SAAS,IAAK;IAC1C,MAAM5D,MAAM,GAAG,CAAC,CAAC;IAEjB4D,SAAS,CAAC3B,OAAO,CAACmB,IAAI,IAAI;MACxB,IAAI,CAACpD,MAAM,CAACoD,IAAI,CAACjB,QAAQ,CAAC,EAAE;QAC1BnC,MAAM,CAACoD,IAAI,CAACjB,QAAQ,CAAC,GAAG;UACtBA,QAAQ,EAAEiB,IAAI,CAACjB,QAAQ;UACvB0B,MAAM,EAAET,IAAI,CAACU,YAAY;UACzBC,MAAM,EAAEX,IAAI,CAACW,MAAM;UACnBlB,IAAI,EAAEO,IAAI,CAACP,IAAI;UACfmB,SAAS,EAAEZ,IAAI,CAACY,SAAS;UACzBC,QAAQ,EAAEb,IAAI,CAACc,cAAc;UAAE;UAC/Bf,KAAK,EAAE;QACT,CAAC;MACH;MACAnD,MAAM,CAACoD,IAAI,CAACjB,QAAQ,CAAC,CAACgB,KAAK,CAACgB,IAAI,CAAC;QAC/BC,aAAa,EAAEhB,IAAI,CAACgB,aAAa;QACjCC,iBAAiB,EAAEjB,IAAI,CAACiB,iBAAiB;QACzCC,kBAAkB,EAAElB,IAAI,CAACkB,kBAAkB;QAC3Cf,eAAe,EAAEH,IAAI,CAACG,eAAe;QACrCgB,cAAc,EAAEnB,IAAI,CAACmB,cAAc;QACnCC,YAAY,EAAEpB,IAAI,CAACoB,YAAY;QAC/BC,SAAS,EAAErB,IAAI,CAACqB,SAAS;QACzBC,UAAU,EAAEtB,IAAI,CAACsB;MACnB,CAAC,CAAC;IACJ,CAAC,CAAC;IAEF,OAAOC,MAAM,CAACC,MAAM,CAAC5E,MAAM,CAAC;EAC9B,CAAC;EAMD,oBACEH,OAAA,CAACb,SAAS;IAAC6F,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACzBjF,OAAA,CAACZ,GAAG;MAAA6F,QAAA,eACFjF,OAAA,CAACX,GAAG;QAAC6F,EAAE,EAAE,EAAG;QAAAD,QAAA,eAEVjF,OAAA,CAACR,IAAI;UAAC2F,QAAQ,EAAExB,YAAa;UAAAsB,QAAA,gBAC3BjF,OAAA,CAACZ,GAAG;YAAA6F,QAAA,gBACFjF,OAAA,CAACX,GAAG;cAAA4F,QAAA,eACFjF,OAAA,CAACR,IAAI,CAAC4F,KAAK;gBAACC,SAAS,EAAC,UAAU;gBAAAJ,QAAA,gBAC9BjF,OAAA,CAACR,IAAI,CAAC8F,KAAK;kBAAAL,QAAA,EAAC;gBAAI;kBAAAM,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAY,CAAC,eAC7B1F,OAAA,CAACR,IAAI,CAACmG,OAAO;kBAACC,EAAE,EAAC,QAAQ;kBAACC,KAAK,EAAEtF,gBAAiB;kBAACuF,QAAQ,EAAGlC,CAAC,IAAKpD,mBAAmB,CAACoD,CAAC,CAACmC,MAAM,CAACF,KAAK,CAAE;kBAAAZ,QAAA,EACrG5E,MAAM,CAACgD,GAAG,CAAEL,IAAI,iBACfhD,OAAA;oBAAmB6F,KAAK,EAAE7C,IAAK;oBAAAiC,QAAA,EAAEjC;kBAAI,GAAxBA,IAAI;oBAAAuC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAA6B,CAC/C;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACU,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACL;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACV,CAAC,eACN1F,OAAA,CAACX,GAAG;cAAA4F,QAAA,eACFjF,OAAA,CAACR,IAAI,CAAC4F,KAAK;gBAACC,SAAS,EAAC,kBAAkB;gBAAAJ,QAAA,gBACtCjF,OAAA,CAACR,IAAI,CAAC8F,KAAK;kBAAAL,QAAA,EAAC;gBAAgB;kBAAAM,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAY,CAAC,eACzC1F,OAAA,CAACR,IAAI,CAACmG,OAAO;kBAACK,IAAI,EAAC,MAAM;kBAACH,KAAK,EAAEpF,YAAa;kBAACqF,QAAQ,EAAGlC,CAAC,IAAKlD,eAAe,CAACkD,CAAC,CAACmC,MAAM,CAACF,KAAK;gBAAE;kBAAAN,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACzF;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACV,CAAC,eACN1F,OAAA,CAACX,GAAG;cAAA4F,QAAA,eACFjF,OAAA,CAACR,IAAI,CAAC4F,KAAK;gBAACC,SAAS,EAAC,iBAAiB;gBAAAJ,QAAA,gBACrCjF,OAAA,CAACR,IAAI,CAAC8F,KAAK;kBAAAL,QAAA,EAAC;gBAAe;kBAAAM,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAY,CAAC,eACxC1F,OAAA,CAACR,IAAI,CAACmG,OAAO;kBAACK,IAAI,EAAC,MAAM;kBAACH,KAAK,EAAElF,WAAY;kBAACmF,QAAQ,EAAGlC,CAAC,IAAKhD,cAAc,CAACgD,CAAC,CAACmC,MAAM,CAACF,KAAK;gBAAE;kBAAAN,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACvF;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACV,CAAC,eACN1F,OAAA,CAACX,GAAG;cAAA4F,QAAA,eACFjF,OAAA,CAACR,IAAI,CAAC4F,KAAK;gBAACC,SAAS,EAAC,oBAAoB;gBAAAJ,QAAA,gBACxCjF,OAAA,CAACR,IAAI,CAAC8F,KAAK;kBAAAL,QAAA,EAAC;gBAAkB;kBAAAM,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAY,CAAC,eAC3C1F,OAAA,CAACR,IAAI,CAACmG,OAAO;kBAACK,IAAI,EAAC,QAAQ;kBAACH,KAAK,EAAEhF,cAAe;kBAACiF,QAAQ,EAAGlC,CAAC,IAAK9C,iBAAiB,CAAC8C,CAAC,CAACmC,MAAM,CAACF,KAAK;gBAAE;kBAAAN,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC/F;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACV,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,eACN1F,OAAA,CAACT,MAAM;YAAC0G,OAAO,EAAC,SAAS;YAACD,IAAI,EAAC,QAAQ;YAAAf,QAAA,EAAC;UAExC;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACN1F,OAAA,CAACZ,GAAG;MAAA6F,QAAA,EACH9E,MAAM,CAAC+F,MAAM,GAAG,CAAC,GACtB/F,MAAM,CAACkD,GAAG,CAAEhB,KAAK,iBACfrC,OAAA,CAAChB,KAAK,CAACmH,QAAQ;QAAAlB,QAAA,gBACbjF,OAAA,CAACX,GAAG;UAAC6F,EAAE,EAAE,EAAG;UAACF,SAAS,EAAC,MAAM;UAAAC,QAAA,gBAC3BjF,OAAA;YAAAiF,QAAA,GAAI,SAAO,EAAC5C,KAAK,CAAC2B,MAAM;UAAA;YAAAuB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC9B1F,OAAA;YAAAiF,QAAA,GAAI5C,KAAK,CAAC6B,MAAM,EAAC,IAAE,EAAC7B,KAAK,CAACW,IAAI;UAAA;YAAAuC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACnC1F,OAAA;YAAAiF,QAAA,GAAG,gBAAW,EAAC5C,KAAK,CAAC8B,SAAS;UAAA;YAAAoB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,EAClCxE,WAAW,CAACmB,KAAK,CAACC,QAAQ,CAAC,IAAIpB,WAAW,CAACmB,KAAK,CAACC,QAAQ,CAAC,CAAC4D,MAAM,GAAG,CAAC,iBACpElG,OAAA,CAACL,QAAQ;YAACyG,QAAQ,EAAE,IAAK;YAAAnB,QAAA,EACtB/D,WAAW,CAACmB,KAAK,CAACC,QAAQ,CAAC,CAACe,GAAG,CAAC,CAACgD,KAAK,EAAEC,KAAK,kBAC5CtG,OAAA,CAACL,QAAQ,CAAC4G,IAAI;cAAAtB,QAAA,eACZjF,OAAA;gBACEgF,SAAS,EAAC,eAAe;gBACzBwB,GAAG,EAAEH,KAAM;gBACXI,GAAG,EAAG,UAASH,KAAK,GAAG,CAAE,cAAajE,KAAK,CAAC2B,MAAO;cAAE;gBAAAuB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACtD;YAAC,GALgBY,KAAK;cAAAf,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAMV,CAChB;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACM,CACX;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEE,CAAC,EACGrD,KAAK,CAACiB,KAAK,IAAIjB,KAAK,CAACiB,KAAK,CAACD,GAAG,CAAEE,IAAI,iBACnCvD,OAAA,CAACX,GAAG;UAA0B6F,EAAE,EAAE,CAAE;UAAAD,QAAA,eAClCjF,OAAA,CAACV,IAAI;YAAC0F,SAAS,EAAC,MAAM;YAAAC,QAAA,gBACtBjF,OAAA,CAACV,IAAI,CAACoH,GAAG;cAACT,OAAO,EAAC,KAAK;cAACO,GAAG,EAAEjD,IAAI,CAACE,SAAS,IAAI5D;YAAiB;cAAA0F,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eACjE1F,OAAA,CAACV,IAAI,CAACqH,IAAI;cAAA1B,QAAA,gBACVjF,OAAA,CAACV,IAAI,CAACsH,KAAK;gBAAA3B,QAAA,GAAC,iBAAY,EAAC3D,eAAe,CAACiC,IAAI,CAACG,eAAe,CAAC;cAAA;gBAAA6B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAa,CAAC,eAC1E1F,OAAA,CAACV,IAAI,CAACuH,IAAI;gBAAA5B,QAAA,GAAC,8BAAsB,EAAC1B,IAAI,CAACiB,iBAAiB;cAAA;gBAAAe,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC,eACrE1F,OAAA,CAACV,IAAI,CAACuH,IAAI;gBAAA5B,QAAA,GAAC,uBAAkB,EAAC1B,IAAI,CAACkB,kBAAkB,EAAC,WAAS;cAAA;gBAAAc,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAW,CAAC,eAC3E1F,OAAA,CAACV,IAAI,CAACuH,IAAI;gBAAA5B,QAAA,GAAC,qBAAmB,EAAC1B,IAAI,CAACoB,YAAY;cAAA;gBAAAY,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC,eAC7D1F,OAAA,CAACV,IAAI,CAACuH,IAAI;gBAAA5B,QAAA,GAAC,iBAAY,EAAC1B,IAAI,CAACqB,SAAS,EAAC,YAAU;cAAA;gBAAAW,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAW,CAAC,eAC7D1F,OAAA,CAACT,MAAM;gBAAC0G,OAAO,EAAC,SAAS;gBAACa,OAAO,EAAEA,CAAA,KAAM;kBACzC3E,OAAO,CAAC4E,GAAG,CAAC,+BAA+B,EAAE1E,KAAK,CAAC;kBACnDpB,QAAQ,CAAC,WAAW,EAAE;oBACpB+F,KAAK,EAAE;sBACLC,YAAY,EAAE;wBAAE,GAAG5E;sBAAM,CAAC;sBAC1B6E,WAAW,EAAE;wBACX,GAAG3D,IAAI;wBACP4D,YAAY,EAAE5D,IAAI,CAACgB,aAAa;wBAChC6C,QAAQ,EAAE9F,eAAe,CAACiC,IAAI,CAACG,eAAe,CAAC;wBAC/C2D,SAAS,EAAE9D,IAAI,CAACoB,YAAY;wBAC5B2C,iBAAiB,EAAE/D,IAAI,CAACkB;sBAC1B;oBACF;kBACF,CAAC,CAAC;gBACJ,CAAE;gBAAAQ,QAAA,EAAC;cAEH;gBAAAM,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eAET1F,OAAA,CAACF,WAAW;gBAACqH,YAAY,EAAE5D,IAAI,CAACgB;cAAc;gBAAAgB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAGtC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACR;QAAC,GA/BCnC,IAAI,CAACgB,aAAa;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAgCvB,CACN,CAAC;MAAA,GAtDSrD,KAAK,CAACC,QAAQ;QAAAiD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAuDX,CACjB,CAAC,gBAEF1F,OAAA,CAACX,GAAG;QAAA4F,QAAA,eACFjF,OAAA;UAAGgF,SAAS,EAAC,MAAM;UAAAC,QAAA,EAAC;QAA8F;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnH;IACN;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEhB,CAAC;AAACxF,EAAA,CAtQID,QAAQ;EAAA,QAQKL,WAAW;AAAA;AAAA2H,EAAA,GARxBtH,QAAQ;AAwQd,eAAeA,QAAQ;AAAC,IAAAsH,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}