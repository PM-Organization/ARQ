{"ast":null,"code":"var _jsxFileName = \"/home/pmorales/Downloads/Proyecto-B2B/Hotel/frontend/sistema_hoteles/src/components/HotelList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, Card, ListGroup } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HotelList = () => {\n  _s();\n  const [hotels, setHotels] = useState([]);\n  useEffect(() => {\n    // Leer los hoteles de localStorage al cargar el componente\n    const storedHotels = JSON.parse(localStorage.getItem('hotels')) || [];\n    setHotels(storedHotels);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: hotels.map((hotel, index) => /*#__PURE__*/_jsxDEV(Card, {\n      className: \"mb-3\",\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          children: hotel.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: hotel.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n          variant: \"flush\",\n          children: hotel.rooms.map((room, idx) => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: [room.type, \" - $\", room.price, \" por noche\"]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 21\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n};\n_s(HotelList, \"Gakc+Y7g9A1UZYw8Op/kyzheHeo=\");\n_c = HotelList;\nexport default HotelList;\nvar _c;\n$RefreshReg$(_c, \"HotelList\");","map":{"version":3,"names":["React","useState","useEffect","Container","Card","ListGroup","jsxDEV","_jsxDEV","HotelList","_s","hotels","setHotels","storedHotels","JSON","parse","localStorage","getItem","children","map","hotel","index","className","Body","Title","name","fileName","_jsxFileName","lineNumber","columnNumber","Text","description","variant","rooms","room","idx","Item","type","price","_c","$RefreshReg$"],"sources":["/home/pmorales/Downloads/Proyecto-B2B/Hotel/frontend/sistema_hoteles/src/components/HotelList.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Container, Card, ListGroup } from 'react-bootstrap';\n\nconst HotelList = () => {\n    const [hotels, setHotels] = useState([]);\n\n    useEffect(() => {\n        // Leer los hoteles de localStorage al cargar el componente\n        const storedHotels = JSON.parse(localStorage.getItem('hotels')) || [];\n        setHotels(storedHotels);\n    }, []);\n\n    return (\n        <Container>\n            {hotels.map((hotel, index) => (\n                <Card key={index} className=\"mb-3\">\n                    <Card.Body>\n                        <Card.Title>{hotel.name}</Card.Title>\n                        <Card.Text>{hotel.description}</Card.Text>\n                        <ListGroup variant=\"flush\">\n                            {hotel.rooms.map((room, idx) => (\n                                <ListGroup.Item key={idx}>\n                                    {room.type} - ${room.price} por noche\n                                </ListGroup.Item>\n                            ))}\n                        </ListGroup>\n                    </Card.Body>\n                </Card>\n            ))}\n        </Container>\n    );\n};\n\nexport default HotelList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,IAAI,EAAEC,SAAS,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7D,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAExCC,SAAS,CAAC,MAAM;IACZ;IACA,MAAMU,YAAY,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,CAAC,IAAI,EAAE;IACrEL,SAAS,CAACC,YAAY,CAAC;EAC3B,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIL,OAAA,CAACJ,SAAS;IAAAc,QAAA,EACLP,MAAM,CAACQ,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBACrBb,OAAA,CAACH,IAAI;MAAaiB,SAAS,EAAC,MAAM;MAAAJ,QAAA,eAC9BV,OAAA,CAACH,IAAI,CAACkB,IAAI;QAAAL,QAAA,gBACNV,OAAA,CAACH,IAAI,CAACmB,KAAK;UAAAN,QAAA,EAAEE,KAAK,CAACK;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAa,CAAC,eACrCrB,OAAA,CAACH,IAAI,CAACyB,IAAI;UAAAZ,QAAA,EAAEE,KAAK,CAACW;QAAW;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eAC1CrB,OAAA,CAACF,SAAS;UAAC0B,OAAO,EAAC,OAAO;UAAAd,QAAA,EACrBE,KAAK,CAACa,KAAK,CAACd,GAAG,CAAC,CAACe,IAAI,EAAEC,GAAG,kBACvB3B,OAAA,CAACF,SAAS,CAAC8B,IAAI;YAAAlB,QAAA,GACVgB,IAAI,CAACG,IAAI,EAAC,MAAI,EAACH,IAAI,CAACI,KAAK,EAAC,YAC/B;UAAA,GAFqBH,GAAG;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAER,CACnB;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACK,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL;IAAC,GAXLR,KAAK;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAYV,CACT;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAEpB,CAAC;AAACnB,EAAA,CA5BID,SAAS;AAAA8B,EAAA,GAAT9B,SAAS;AA8Bf,eAAeA,SAAS;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}