{"ast":null,"code":"var _jsxFileName = \"/home/pmorales/Downloads/Proyecto-B2B/Hotel/frontend/sistema_hoteles/src/components/HomePage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Card, Button, Form, Alert, Image, Carousel } from 'react-bootstrap';\nimport { useNavigate } from 'react-router-dom';\nimport defaultRoomImage from './roomImage.jpg';\nimport Comentarios from './Comentarios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomePage = () => {\n  _s();\n  const [hotels, setHotels] = useState([]);\n  const [paises, setPaises] = useState([]);\n  const [capacidades, setCapacidades] = useState([]);\n  const [paisSeleccionado, setPaisSeleccionado] = useState('');\n  const [fechaIngreso, setFechaIngreso] = useState('');\n  const [fechaSalida, setFechaSalida] = useState('');\n  const [numeroPersonas, setNumeroPersonas] = useState(1);\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  const [hotelImages, setHotelImages] = useState({});\n  const [roomTypes, setRoomTypes] = useState({});\n  const tiposHabitacion = {\n    1: 'Doble',\n    2: 'Junior Suite',\n    3: 'Suite',\n    4: 'Gran Suite'\n  };\n  useEffect(() => {\n    fetchRoomTypes();\n    fetchPaises();\n    fetchCapacidades();\n    fetchInitialHotelsAndRooms();\n  }, []);\n  const fetchCapacidades = async () => {\n    try {\n      const response = await fetch('http://localhost:8080/habitaciones');\n      if (!response.ok) throw new Error('No se pudieron cargar las capacidades de las habitaciones');\n      const habitaciones = await response.json();\n      const capacidadesUnicas = [...new Set(habitaciones.map(habitacion => habitacion.capacidad_personas))];\n      setCapacidades(capacidadesUnicas.sort((a, b) => a - b));\n    } catch (error) {\n      console.error('Error al cargar capacidades:', error);\n      setError('Error al cargar las capacidades de las habitaciones.');\n    }\n  };\n\n  //IMAGENES\n\n  const fetchHotelImages = async idHotel => {\n    try {\n      const response = await fetch(`http://localhost:8080/hoteles/${idHotel}/imagenes`);\n      if (!response.ok) throw new Error('Error al cargar imágenes del hotel');\n      const images = await response.json();\n      setHotelImages(prevImages => ({\n        ...prevImages,\n        [idHotel]: images\n      }));\n    } catch (error) {\n      console.error('Error fetching hotel images:', error);\n    }\n  };\n  useEffect(() => {\n    hotels.forEach(hotel => {\n      fetchHotelImages(hotel.id_hotel);\n    });\n  }, [hotels]);\n  const fetchRoomTypes = async () => {\n    try {\n      const response = await fetch('http://localhost:8080/tipos_habitacion');\n      if (!response.ok) throw new Error('Error al cargar los tipos de habitación');\n      const data = await response.json();\n      setRoomTypes(data.reduce((map, roomType) => {\n        map[roomType.id_tipo] = roomType.imagenUrl || defaultRoomImage;\n        return map;\n      }, {}));\n    } catch (error) {\n      setError('Error al cargar los tipos de habitación: ' + error.message);\n    }\n  };\n  const fetchPaises = async () => {\n    try {\n      const response = await fetch('http://localhost:8080/hoteles/pais');\n      if (!response.ok) throw new Error('Error al cargar los países');\n      const data = await response.json();\n      setPaises(data);\n    } catch (error) {\n      setError('Error al cargar los países: ' + error.message);\n    }\n  };\n  const fetchInitialHotelsAndRooms = async () => {\n    // Este fetch inicial no usa los parámetros del filtro\n    try {\n      const response = await fetch('http://localhost:8080/hoteles');\n      if (!response.ok) throw new Error('Error al cargar hoteles');\n      const hotelsData = await response.json();\n      setHotels(hotelsData);\n    } catch (error) {\n      setError('Error al cargar los hoteles iniciales: ' + error.message);\n    }\n  };\n  const fetchHotelsAndRooms = async () => {\n    // Aquí construyes la URL con los parámetros de filtro\n    let queryParams = '';\n    if (paisSeleccionado || fechaIngreso || fechaSalida || numeroPersonas) {\n      queryParams = `?pais=${paisSeleccionado}&fechaIngreso=${fechaIngreso}&fechaSalida=${fechaSalida}&numeroPersonas=${numeroPersonas}`;\n    }\n    try {\n      const response = await fetch(`http://localhost:8080/habitaciones/buscar${queryParams}`);\n      if (!response.ok) throw new Error('Error al cargar hoteles y habitaciones filtradas');\n      const filteredData = await response.json();\n      // Asumimos que filteredData ya es un arreglo de hoteles con habitaciones incluidas\n      setHotels(filteredData);\n    } catch (error) {\n      setError('Error al cargar hoteles y habitaciones con los filtros aplicados: ' + error.message);\n    }\n  };\n  const fetchHotelsAndRoomsFiltered = async () => {\n    let url = `http://localhost:8080/habitaciones/buscar`;\n\n    // Construir parámetros de consulta basados en los filtros aplicados\n    const params = new URLSearchParams({\n      ...(paisSeleccionado && {\n        pais: paisSeleccionado\n      }),\n      ...(fechaIngreso && {\n        fechaIngreso\n      }),\n      ...(fechaSalida && {\n        fechaSalida\n      }),\n      ...(numeroPersonas && {\n        numeroPersonas: numeroPersonas.toString()\n      })\n    });\n    if (params.toString()) {\n      url += `?${params.toString()}`;\n    }\n    try {\n      const response = await fetch(url);\n      if (!response.ok) throw new Error('Error al cargar hoteles y habitaciones filtradas');\n      const filteredRooms = await response.json();\n\n      // Asignar las habitaciones filtradas a sus respectivos hoteles\n      const filteredHotels = {};\n      filteredRooms.forEach(room => {\n        if (!filteredHotels[room.id_hotel]) {\n          filteredHotels[room.id_hotel] = {\n            id_hotel: room.id_hotel,\n            nombre: room.nombre_hotel,\n            ciudad: room.ciudad,\n            pais: room.pais,\n            direccion: room.direccion,\n            rooms: [],\n            // Asume que la API devuelve una URL de imagen por hotel\n            imagenUrl: room.imagen_hotel\n          };\n        }\n        filteredHotels[room.id_hotel].rooms.push(room);\n      });\n      setHotels(Object.values(filteredHotels));\n    } catch (error) {\n      console.error('Error fetching filtered hotels and rooms:', error);\n      setError('Error al cargar hoteles y habitaciones con los filtros aplicados: ' + error.message);\n    }\n  };\n\n  // Actualizar handleSearch para usar fetchHotelsAndRoomsFiltered\n  const handleSearch = e => {\n    e.preventDefault();\n    fetchHotelsAndRoomsFiltered();\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"my-5\",\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSearch,\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"pais\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Pa\\xEDs\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"select\",\n              value: paisSeleccionado,\n              onChange: e => setPaisSeleccionado(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Seleccione un pa\\xEDs\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 17\n              }, this), paises.map(pais => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: pais,\n                children: pais\n              }, pais, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"fechaIngreso\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Fecha de Ingreso\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"date\",\n              value: fechaIngreso,\n              onChange: e => setFechaIngreso(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"fechaSalida\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Fecha de Salida\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"date\",\n              value: fechaSalida,\n              onChange: e => setFechaSalida(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"capacidadPersonas\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Capacidad de Personas\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"select\",\n              value: numeroPersonas,\n              onChange: e => setNumeroPersonas(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Seleccione capacidad\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 17\n              }, this), capacidades.map((capacidad, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: capacidad,\n                children: [capacidad, \" personas\"]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            type: \"submit\",\n            children: \"Buscar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: hotels.length > 0 ? hotels.map(hotel => /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: 10,\n          className: \"mt-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Hotel: \", hotel.nombre]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [hotel.ciudad, \", \", hotel.pais]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Direcci\\xF3n: \", hotel.direccion]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 9\n          }, this), hotelImages[hotel.id_hotel] && hotelImages[hotel.id_hotel].length > 0 && /*#__PURE__*/_jsxDEV(Carousel, {\n            interval: null,\n            children: hotelImages[hotel.id_hotel].map((image, index) => /*#__PURE__*/_jsxDEV(Carousel.Item, {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"d-block w-100\",\n                src: image,\n                alt: `Imagen ${index + 1} del hotel ${hotel.nombre}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 17\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 15\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 7\n        }, this), hotel.rooms && hotel.rooms.map(room => /*#__PURE__*/_jsxDEV(Col, {\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n              variant: \"top\",\n              src: room.imagenUrl || defaultRoomImage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                children: [\"Habitaci\\xF3n: \", tiposHabitacion[room.tipo_habitacion]]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: [\"N\\xFAmero de habitaci\\xF3n: \", room.numero_habitacion]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: [\"Capacidad m\\xE1xima: \", room.capacidad_personas, \" personas\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: [\"Precio por noche: $\", room.precioxnoche]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: [\"Valoraci\\xF3n: \", room.valuacion, \" estrellas\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"primary\",\n                onClick: () => {\n                  console.log(\"Navigating with hotelDetails:\", hotel);\n                  navigate('/checkout', {\n                    state: {\n                      hotelDetails: {\n                        ...hotel\n                      },\n                      roomDetails: {\n                        ...room,\n                        idHabitacion: room.id_habitacion,\n                        roomType: tiposHabitacion[room.tipo_habitacion],\n                        roomPrice: room.precioxnoche,\n                        capacidadPersonas: room.capacidad_personas\n                      }\n                    }\n                  });\n                },\n                children: \"Reservar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Comentarios, {\n                idHabitacion: room.id_habitacion\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 19\n          }, this)\n        }, room.id_habitacion, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 17\n        }, this))]\n      }, hotel.id_hotel, true, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 5\n      }, this)) : /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-4\",\n          children: \"No se encontraron hoteles. Por favor, intenta nuevamente con diferentes criterios de b\\xFAsqueda.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 193,\n    columnNumber: 5\n  }, this);\n};\n_s(HomePage, \"V+aP6O1WlfpN5HNIfvy0rD0cnPc=\", false, function () {\n  return [useNavigate];\n});\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","useEffect","Container","Row","Col","Card","Button","Form","Alert","Image","Carousel","useNavigate","defaultRoomImage","Comentarios","jsxDEV","_jsxDEV","HomePage","_s","hotels","setHotels","paises","setPaises","capacidades","setCapacidades","paisSeleccionado","setPaisSeleccionado","fechaIngreso","setFechaIngreso","fechaSalida","setFechaSalida","numeroPersonas","setNumeroPersonas","error","setError","navigate","hotelImages","setHotelImages","roomTypes","setRoomTypes","tiposHabitacion","fetchRoomTypes","fetchPaises","fetchCapacidades","fetchInitialHotelsAndRooms","response","fetch","ok","Error","habitaciones","json","capacidadesUnicas","Set","map","habitacion","capacidad_personas","sort","a","b","console","fetchHotelImages","idHotel","images","prevImages","forEach","hotel","id_hotel","data","reduce","roomType","id_tipo","imagenUrl","message","hotelsData","fetchHotelsAndRooms","queryParams","filteredData","fetchHotelsAndRoomsFiltered","url","params","URLSearchParams","pais","toString","filteredRooms","filteredHotels","room","nombre","nombre_hotel","ciudad","direccion","rooms","imagen_hotel","push","Object","values","handleSearch","e","preventDefault","className","children","onSubmit","Group","controlId","Label","fileName","_jsxFileName","lineNumber","columnNumber","Control","as","value","onChange","target","type","capacidad","index","variant","length","Fragment","md","interval","image","Item","src","alt","Img","Body","Title","tipo_habitacion","Text","numero_habitacion","precioxnoche","valuacion","onClick","log","state","hotelDetails","roomDetails","idHabitacion","id_habitacion","roomPrice","capacidadPersonas","_c","$RefreshReg$"],"sources":["/home/pmorales/Downloads/Proyecto-B2B/Hotel/frontend/sistema_hoteles/src/components/HomePage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Card, Button, Form, Alert, Image, Carousel } from 'react-bootstrap';\nimport { useNavigate } from 'react-router-dom';\nimport defaultRoomImage from './roomImage.jpg';\nimport Comentarios from './Comentarios';\n\nconst HomePage = () => {\n  const [hotels, setHotels] = useState([]);\n  const [paises, setPaises] = useState([]);\n  const [capacidades, setCapacidades] = useState([]);\n  const [paisSeleccionado, setPaisSeleccionado] = useState('');\n  const [fechaIngreso, setFechaIngreso] = useState('');\n  const [fechaSalida, setFechaSalida] = useState('');\n  const [numeroPersonas, setNumeroPersonas] = useState(1);\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  const [hotelImages, setHotelImages] = useState({});\n  const [roomTypes, setRoomTypes] = useState({});\n\n\n  const tiposHabitacion = {\n    1: 'Doble',\n    2: 'Junior Suite',\n    3: 'Suite',\n    4: 'Gran Suite'\n  };\n\n\n  useEffect(() => {\n    fetchRoomTypes();\n    fetchPaises();\n    fetchCapacidades();\n    fetchInitialHotelsAndRooms();\n  }, []);\n\n\n\n\n  const fetchCapacidades = async () => {\n    try {\n      const response = await fetch('http://localhost:8080/habitaciones');\n      if (!response.ok) throw new Error('No se pudieron cargar las capacidades de las habitaciones');\n      const habitaciones = await response.json();\n      const capacidadesUnicas = [...new Set(habitaciones.map(habitacion => habitacion.capacidad_personas))];\n      setCapacidades(capacidadesUnicas.sort((a, b) => a - b));\n    } catch (error) {\n      console.error('Error al cargar capacidades:', error);\n      setError('Error al cargar las capacidades de las habitaciones.');\n    }\n  };\n\n\n\n\n  //IMAGENES\n\n  const fetchHotelImages = async (idHotel) => {\n    try {\n      const response = await fetch(`http://localhost:8080/hoteles/${idHotel}/imagenes`);\n      if (!response.ok) throw new Error('Error al cargar imágenes del hotel');\n      const images = await response.json();\n      setHotelImages(prevImages => ({ ...prevImages, [idHotel]: images }));\n    } catch (error) {\n      console.error('Error fetching hotel images:', error);\n    }\n  };\n\n  useEffect(() => {\n    hotels.forEach((hotel) => {\n      fetchHotelImages(hotel.id_hotel);\n    });\n  }, [hotels]);\n\n  \n\n  const fetchRoomTypes = async () => {\n    try {\n      const response = await fetch('http://localhost:8080/tipos_habitacion');\n      if (!response.ok) throw new Error('Error al cargar los tipos de habitación');\n      const data = await response.json();\n      setRoomTypes(data.reduce((map, roomType) => {\n        map[roomType.id_tipo] = roomType.imagenUrl || defaultRoomImage; \n        return map;\n      }, {}));\n    } catch (error) {\n      setError('Error al cargar los tipos de habitación: ' + error.message);\n    }\n  };\n  \n\n\n\n  const fetchPaises = async () => {\n    try {\n      const response = await fetch('http://localhost:8080/hoteles/pais');\n      if (!response.ok) throw new Error('Error al cargar los países');\n      const data = await response.json();\n      setPaises(data);\n    } catch (error) {\n      setError('Error al cargar los países: ' + error.message);\n    }\n  };\n\n  const fetchInitialHotelsAndRooms = async () => {\n    // Este fetch inicial no usa los parámetros del filtro\n    try {\n      const response = await fetch('http://localhost:8080/hoteles');\n      if (!response.ok) throw new Error('Error al cargar hoteles');\n      const hotelsData = await response.json();\n      setHotels(hotelsData);\n    } catch (error) {\n      setError('Error al cargar los hoteles iniciales: ' + error.message);\n    }\n  };\n  \n  \n  \n\n  const fetchHotelsAndRooms = async () => {\n    // Aquí construyes la URL con los parámetros de filtro\n    let queryParams = '';\n    if (paisSeleccionado || fechaIngreso || fechaSalida || numeroPersonas) {\n      queryParams = `?pais=${paisSeleccionado}&fechaIngreso=${fechaIngreso}&fechaSalida=${fechaSalida}&numeroPersonas=${numeroPersonas}`;\n    }\n    try {\n      const response = await fetch(`http://localhost:8080/habitaciones/buscar${queryParams}`);\n      if (!response.ok) throw new Error('Error al cargar hoteles y habitaciones filtradas');\n      const filteredData = await response.json();\n      // Asumimos que filteredData ya es un arreglo de hoteles con habitaciones incluidas\n      setHotels(filteredData);\n    } catch (error) {\n      setError('Error al cargar hoteles y habitaciones con los filtros aplicados: ' + error.message);\n    }\n  };\n\nconst fetchHotelsAndRoomsFiltered = async () => {\n  let url = `http://localhost:8080/habitaciones/buscar`;\n\n  // Construir parámetros de consulta basados en los filtros aplicados\n  const params = new URLSearchParams({\n    ...(paisSeleccionado && { pais: paisSeleccionado }),\n    ...(fechaIngreso && { fechaIngreso }),\n    ...(fechaSalida && { fechaSalida }),\n    ...(numeroPersonas && { numeroPersonas: numeroPersonas.toString() }),\n  });\n\n  if (params.toString()) {\n    url += `?${params.toString()}`;\n  }\n\n  try {\n    const response = await fetch(url);\n    if (!response.ok) throw new Error('Error al cargar hoteles y habitaciones filtradas');\n    const filteredRooms = await response.json();\n\n    // Asignar las habitaciones filtradas a sus respectivos hoteles\n    const filteredHotels = {};\n    filteredRooms.forEach(room => {\n      if (!filteredHotels[room.id_hotel]) {\n        filteredHotels[room.id_hotel] = {\n          id_hotel: room.id_hotel,\n          nombre: room.nombre_hotel,\n          ciudad: room.ciudad,\n          pais: room.pais,\n          direccion: room.direccion,\n          rooms: [],\n          // Asume que la API devuelve una URL de imagen por hotel\n          imagenUrl: room.imagen_hotel,\n        };\n      }\n      filteredHotels[room.id_hotel].rooms.push(room);\n    });\n\n    setHotels(Object.values(filteredHotels));\n  } catch (error) {\n    console.error('Error fetching filtered hotels and rooms:', error);\n    setError('Error al cargar hoteles y habitaciones con los filtros aplicados: ' + error.message);\n  }\n};\n\n// Actualizar handleSearch para usar fetchHotelsAndRoomsFiltered\nconst handleSearch = (e) => {\n  e.preventDefault();\n  fetchHotelsAndRoomsFiltered();\n};\n\n\n\n\n\n\n  return (\n    <Container className=\"my-5\">\n      {/* Filtro de búsqueda */}\n      <Form onSubmit={handleSearch}>\n        <Row className=\"mb-4\">\n          <Col>\n            <Form.Group controlId=\"pais\">\n              <Form.Label>País</Form.Label>\n              <Form.Control as=\"select\" value={paisSeleccionado} onChange={e => setPaisSeleccionado(e.target.value)}>\n                <option value=\"\">Seleccione un país</option>\n                {paises.map(pais => (\n                  <option key={pais} value={pais}>{pais}</option>\n                ))}\n              </Form.Control>\n            </Form.Group>\n          </Col>\n          <Col>\n            <Form.Group controlId=\"fechaIngreso\">\n              <Form.Label>Fecha de Ingreso</Form.Label>\n              <Form.Control type=\"date\" value={fechaIngreso} onChange={e => setFechaIngreso(e.target.value)} />\n            </Form.Group>\n          </Col>\n          <Col>\n            <Form.Group controlId=\"fechaSalida\">\n              <Form.Label>Fecha de Salida</Form.Label>\n              <Form.Control type=\"date\" value={fechaSalida} onChange={e => setFechaSalida(e.target.value)} />\n            </Form.Group>\n          </Col>\n         <Col>\n            <Form.Group controlId=\"capacidadPersonas\">\n              <Form.Label>Capacidad de Personas</Form.Label>\n              <Form.Control as=\"select\" value={numeroPersonas} onChange={e => setNumeroPersonas(e.target.value)}>\n                <option value=\"\">Seleccione capacidad</option>\n                {capacidades.map((capacidad, index) => (\n                  <option key={index} value={capacidad}>{capacidad} personas</option>\n                ))}\n              </Form.Control>\n            </Form.Group>\n          </Col>\n          <Col>\n            <Button variant=\"primary\" type=\"submit\">Buscar</Button>\n          </Col>\n        </Row>\n      </Form>\n\n      <Row>\n      {hotels.length > 0 ? (\n  hotels.map((hotel) => (\n    <React.Fragment key={hotel.id_hotel}>\n      <Col md={10} className=\"mt-4\">\n        <h3>Hotel: {hotel.nombre}</h3>\n        <p>{hotel.ciudad}, {hotel.pais}</p>\n        <p>Dirección: {hotel.direccion}</p>\n        {hotelImages[hotel.id_hotel] && hotelImages[hotel.id_hotel].length > 0 && (\n          <Carousel interval={null}>\n            {hotelImages[hotel.id_hotel].map((image, index) => (\n              <Carousel.Item key={index}>\n                <img\n                  className=\"d-block w-100\"\n                  src={image}\n                  alt={`Imagen ${index + 1} del hotel ${hotel.nombre}`}\n                />\n              </Carousel.Item>\n            ))}\n          </Carousel>\n        )}\n\n      </Col>\n              {hotel.rooms && hotel.rooms.map((room) => (\n                <Col key={room.id_habitacion} md={6}>\n                  <Card className=\"mb-3\">\n                  <Card.Img variant=\"top\" src={room.imagenUrl || defaultRoomImage} />\n                    <Card.Body>\n                    <Card.Title>Habitación: {tiposHabitacion[room.tipo_habitacion]}</Card.Title>\n                      <Card.Text>Número de habitación: {room.numero_habitacion}</Card.Text>\n                      <Card.Text>Capacidad máxima: {room.capacidad_personas} personas</Card.Text>\n                      <Card.Text>Precio por noche: ${room.precioxnoche}</Card.Text>\n                      <Card.Text>Valoración: {room.valuacion} estrellas</Card.Text>\n                      <Button variant=\"primary\" onClick={() => {\n                      console.log(\"Navigating with hotelDetails:\", hotel);\n                      navigate('/checkout', {\n                        state: {\n                          hotelDetails: { ...hotel },\n                          roomDetails: {\n                            ...room,\n                            idHabitacion: room.id_habitacion,\n                            roomType: tiposHabitacion[room.tipo_habitacion],\n                            roomPrice: room.precioxnoche,\n                            capacidadPersonas: room.capacidad_personas\n                          }\n                        }\n                      });\n                    }}>\n                      Reservar\n                    </Button>\n\n                    <Comentarios idHabitacion={room.id_habitacion} />\n\n\n                    </Card.Body>\n                  </Card>\n                </Col>\n              ))}\n            </React.Fragment>\n          ))\n        ) : (\n          <Col>\n            <p className=\"mt-4\">No se encontraron hoteles. Por favor, intenta nuevamente con diferentes criterios de búsqueda.</p>\n          </Col>\n        )}\n      </Row>\n    </Container>\n  );\n};\n\nexport default HomePage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}