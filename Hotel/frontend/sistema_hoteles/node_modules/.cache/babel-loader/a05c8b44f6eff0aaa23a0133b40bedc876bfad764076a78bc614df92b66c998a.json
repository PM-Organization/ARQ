{"ast":null,"code":"var _jsxFileName = \"/home/pmorales/Downloads/Proyecto-B2B/Hotel/frontend/sistema_hoteles/src/components/AdministrarReservas.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Button, Card, Modal, Form, Table, InputGroup, FormControl } from 'react-bootstrap';\nimport { useUser } from './UserContext';\nimport EditReservationPage from './EditReservationPage';\nimport jsPDF from 'jspdf';\nimport 'jspdf-autotable';\nimport emailjs from 'emailjs-com';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AdministrarReservas = () => {\n  _s();\n  const [reservations, setReservations] = useState([]);\n  const {\n    user\n  } = useUser();\n  const [showEditModal, setShowEditModal] = useState(false);\n  const [currentReservation, setCurrentReservation] = useState(null);\n  const [editedReservation, setEditedReservation] = useState(null);\n  const [showCommentModal, setShowCommentModal] = useState(false);\n  const [comment, setComment] = useState('');\n  const [showHistoryModal, setShowHistoryModal] = useState(false); // para la vista\n  const [userReservations, setUserReservations] = useState([]); // para la vista\n  const [searchCode, setSearchCode] = useState(''); // filtro\n  const [filteredReservations, setFilteredReservations] = useState([]); // filtro\n\n  useEffect(() => {\n    if (user) {\n      fetchReservations();\n    }\n  }, [user]);\n  const fetchReservations = async () => {\n    console.log('Fetching reservations for user:', user.id);\n    try {\n      const response = await fetch(process.env.REACT_APP_BACKEND_URL + `/reservas/detalle/todas`);\n      if (response.ok) {\n        const data = await response.json();\n        console.log('Reservations fetched successfully:', data);\n        setReservations(data.map(reserva => ({\n          ...reserva,\n          tipoHabitacion: translateTipoHabitacion(reserva.tipoHabitacion),\n          idHotel: reserva.idHotel,\n          idHabitacion: reserva.idHabitacion,\n          idUsuario: reserva.idUsuario\n        })));\n      } else {\n        console.error(\"Failed to fetch reservations.\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching reservations:\", error);\n    }\n  };\n\n  // a numero\n  const translateTipoHabitacion = tipoHabitacion => {\n    const tipoHabitacionMap = {\n      1: \"Doble\",\n      2: \"Junior Suite\",\n      3: \"Suite\",\n      4: \"Gran Suite\"\n    };\n    return tipoHabitacionMap[tipoHabitacion] || \"Unknown\";\n  };\n  const calculateNights = (checkIn, checkOut) => {\n    const checkInDate = new Date(checkIn);\n    const checkOutDate = new Date(checkOut);\n    const diffTime = Math.abs(checkOutDate.getTime() - checkInDate.getTime());\n    return Math.ceil(diffTime / (1000 * 3600 * 24));\n  };\n  const handleEdit = reserva => {\n    console.log('Opening edit modal for reservation:', reserva.idReserva);\n    setCurrentReservation(reserva);\n    setShowEditModal(true);\n  };\n  const cancelarReserva = async idReserva => {\n    try {\n      const response = await fetch(process.env.REACT_APP_BACKEND_URL + `/reservas/${idReserva}/cancelar`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) {\n        throw new Error('No se pudo cancelar la reserva');\n      }\n      alert('Reserva cancelada con éxito');\n      fetchReservations(); //error tipográfico.\n    } catch (error) {\n      console.error('Error al cancelar la reserva:', error);\n      alert('Error al cancelar la reserva');\n    }\n  };\n  const actualizarReserva = async reservaActualizada => {\n    console.log('Updating reservation with:', reservaActualizada);\n    try {\n      const response = await fetch(process.env.REACT_APP_BACKEND_URL + `/reservas/${reservaActualizada.idReserva}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(reservaActualizada)\n      });\n      if (!response.ok) {\n        if (response.status === 409) {\n          // Conflicto , notifica al usuario\n          alert(\"Habitación no disponible.\");\n        } else {\n          // Otro tipo de error HTTP\n          throw new Error(`Reservation update failed: ${response.statusText}`);\n        }\n      } else {\n        console.log('Reservation updated successfully');\n        setShowEditModal(false);\n        await fetchReservations(); // Refresca lalista de reservaciones\n      }\n    } catch (error) {\n      console.error('Error updating reservation:', error);\n      alert(\"Ocurrió un error al actualizar la reserva. Por favor, intenta de nuevo.\");\n    }\n  };\n  const downloadReservationPdf = reserva => {\n    const doc = new jsPDF();\n    doc.text(\"Detalle de Reserva\", 14, 16);\n    doc.setFontSize(10);\n\n    // Información de la reserva\n    const reservationDetails = [{\n      title: \"Hotel\",\n      data: reserva.nombreHotel\n    }, {\n      title: \"Número de habitación\",\n      data: reserva.numeroHabitacion.toString()\n    }, {\n      title: \"Tipo de habitación\",\n      data: reserva.tipoHabitacion\n    }, {\n      title: \"Ubicación\",\n      data: `${reserva.ciudad}, ${reserva.pais} - ${reserva.direccion}`\n    }, {\n      title: \"Check-in\",\n      data: reserva.fechaIngreso\n    }, {\n      title: \"Check-out\",\n      data: reserva.fechaSalida\n    }, {\n      title: \"Número de noches\",\n      data: calculateNights(reserva.fechaIngreso, reserva.fechaSalida).toString()\n    }, {\n      title: \"Personas\",\n      data: reserva.capacidadPersonas.toString()\n    }, {\n      title: \"Total Reserva\",\n      data: `$${reserva.totalReserva}`\n    }, {\n      title: \"Estado\",\n      data: reserva.estadoReserva\n    }, {\n      title: \"Código de reserva\",\n      data: reserva.codigoReserva\n    }];\n    doc.autoTable({\n      head: [[\"Detalle\", \"Información\"]],\n      body: reservationDetails.map(item => [item.title, item.data]),\n      startY: 20\n    });\n    doc.save(`Reserva_${reserva.codigoReserva}.pdf`);\n  };\n  const openNotificarCambiosModal = reserva => {\n    setCurrentReservation(reserva);\n    setShowCommentModal(true);\n  };\n  const handleNotificarCambios = async reserva => {\n    const translatedRoomType = translateTipoHabitacion(reserva.tipoHabitacion.toString());\n    const templateParams = {\n      to_name: user.primer_nombre,\n      hotel_name: reserva.nombreHotel,\n      room_number: reserva.numeroHabitacion.toString() || \"No especificado\",\n      room_type: reserva.tipoHabitacion,\n      location: `${reserva.ciudad}, ${reserva.pais} - ${reserva.direccion}`,\n      check_in_date: reserva.fechaIngreso,\n      check_out_date: reserva.fechaSalida,\n      total_nights: calculateNights(reserva.fechaIngreso, reserva.fechaSalida).toString(),\n      total_people: reserva.capacidadPersonas.toString(),\n      total_price: `$${reserva.totalReserva.toFixed(2)}`,\n      reservation_status: reserva.estadoReserva,\n      reservation_code: reserva.codigoReserva.toString(),\n      to_email: user.email,\n      comment\n    };\n    try {\n      await emailjs.send('service_db-dw2', 'template_vhblb7c', templateParams, '83TAqc_7hHgnfdESC');\n      console.log('Email successfully sent!');\n    } catch (error) {\n      console.error('Error al enviar notificación de cambio:', error.text);\n    }\n    setShowCommentModal(false); // Cerrar modal\n    setComment(''); // Limpiar comentario\n  };\n  const fetchUserReservations = async userId => {\n    try {\n      const response = await fetch(process.env.REACT_APP_BACKEND_URL + `/reservas/historial/${userId}`);\n      if (!response.ok) {\n        throw new Error('No se pudo cargar el historial de reservas');\n      }\n      const historialReservas = await response.json();\n      setUserReservations(historialReservas);\n      setShowHistoryModal(true); // Muestra el modal con el historial de reservas\n    } catch (error) {\n      console.error('Error al cargar el historial de reservas:', error);\n    }\n  };\n  const formatToLocalDateString = dateString => {\n    try {\n      const date = new Date(dateString);\n      if (!isNaN(date)) {\n        return date.toLocaleDateString();\n      }\n    } catch (error) {\n      console.error(\"Error al parsear la fecha:\", error);\n    }\n    return \"Fecha no disponible\";\n  };\n  const handleSearchChange = e => {\n    setSearchCode(e.target.value);\n  };\n  const filterReservationsByCode = () => {\n    if (!searchCode) {\n      setFilteredReservations([]);\n      return;\n    }\n    const filtered = reservations.filter(reserva => reserva.codigoReserva.toString() === searchCode);\n    setFilteredReservations(filtered);\n  };\n  const showAllReservations = () => {\n    // Restablecer el código de búsqueda\n    setSearchCode('');\n    // Restablecer las reservaciones filtradas a todas las reservaciones\n    setFilteredReservations(reservations);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"booking-history-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-center\",\n      children: \"Encontrar Reserva\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(FormControl, {\n        placeholder: \"Buscar por c\\xF3digo de reserva\",\n        \"aria-label\": \"Buscar por c\\xF3digo de reserva\",\n        onChange: e => setSearchCode(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outline-secondary\",\n        onClick: () => filterReservationsByCode(),\n        children: \"Buscar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outline-info\",\n        onClick: () => showAllReservations(),\n        children: \"Mostrar Todas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 5\n    }, this), filteredReservations.length > 0 ? filteredReservations.map(reserva => /*#__PURE__*/_jsxDEV(Card, {\n      className: \"mb-4 shadow\",\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        as: \"h5\",\n        className: \"font-weight-bold\",\n        children: [\"Reserva #\", reserva.codigoReserva, \" - \", reserva.correoElectronico]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          children: reserva.nombreHotel\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Card.Subtitle, {\n          className: \"mb-2 text-muted\",\n          children: [reserva.ciudad, \", \", reserva.pais, \" - \", reserva.direccion]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: [\"Tipo de habitaci\\xF3n: \", reserva.tipoHabitacion]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: [\"N\\xFAmero de habitaci\\xF3n: \", reserva.numeroHabitacion]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: [\"Check-in: \", reserva.fechaIngreso]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: [\"Check-out: \", reserva.fechaSalida]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: [\"N\\xFAmero de noches: \", calculateNights(reserva.fechaIngreso, reserva.fechaSalida)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: [\"Personas: \", reserva.capacidadPersonas]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: [\"Total Reserva: $\", reserva.totalReserva]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: [\"Estado: \", reserva.estadoReserva]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 13\n        }, this), reserva.estadoReserva !== \"Cancelada\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"warning\",\n            onClick: () => handleEdit(reserva),\n            children: \"Editar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"danger\",\n            onClick: () => cancelarReserva(reserva.idReserva),\n            children: \"Cancelar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"info\",\n          onClick: () => downloadReservationPdf(reserva),\n          children: \"Descargar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"warning\",\n          onClick: () => openNotificarCambiosModal(reserva),\n          children: \"Notificar cambios\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: () => fetchUserReservations(reserva.idUsuario),\n          children: \"Ver Historial\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 11\n      }, this)]\n    }, reserva.idReserva, true, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 9\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-center\",\n      children: \"No se encontraron reservas.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 9\n    }, this), currentReservation && /*#__PURE__*/_jsxDEV(EditReservationPage, {\n      show: showEditModal,\n      handleClose: () => setShowEditModal(false),\n      reserva: currentReservation,\n      actualizarReserva: actualizarReserva\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showCommentModal,\n      onHide: () => setShowCommentModal(false),\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Notificacion de cambios\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Comentario\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"textarea\",\n            rows: \"3\",\n            value: comment,\n            onChange: e => setComment(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: () => setShowCommentModal(false),\n          children: \"Cerrar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: () => handleNotificarCambios(currentReservation),\n          children: \"Enviar Notificaci\\xF3n\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showHistoryModal,\n      onHide: () => setShowHistoryModal(false),\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Historial de Reservas del Usuario\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: userReservations.length > 0 ? /*#__PURE__*/_jsxDEV(Table, {\n          striped: true,\n          bordered: true,\n          hover: true,\n          size: \"sm\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"C\\xF3digo de Reserva\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 336,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Check-in\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 337,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Check-out\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 338,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Estado\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 339,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Total Reserva\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 340,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: userReservations.map((reservation, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: reservation.codigoReserva\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 346,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: formatToLocalDateString(reservation.fechaIngreso)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 347,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: formatToLocalDateString(reservation.fechaSalida)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 348,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: reservation.estadoReserva\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 349,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\"$\", reservation.totalReserva ? reservation.totalReserva.toFixed(2) : \"0.00\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 350,\n                columnNumber: 15\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 13\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 7\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No se encontraron reservas para este usuario.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: () => setShowHistoryModal(false),\n          children: \"Cerrar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 252,\n    columnNumber: 3\n  }, this);\n};\n_s(AdministrarReservas, \"GkS6BVKCZpscbFjPhJjL5M4VeUA=\", false, function () {\n  return [useUser];\n});\n_c = AdministrarReservas;\nexport default AdministrarReservas;\nvar _c;\n$RefreshReg$(_c, \"AdministrarReservas\");","map":{"version":3,"names":["React","useEffect","useState","Button","Card","Modal","Form","Table","InputGroup","FormControl","useUser","EditReservationPage","jsPDF","emailjs","jsxDEV","_jsxDEV","Fragment","_Fragment","AdministrarReservas","_s","reservations","setReservations","user","showEditModal","setShowEditModal","currentReservation","setCurrentReservation","editedReservation","setEditedReservation","showCommentModal","setShowCommentModal","comment","setComment","showHistoryModal","setShowHistoryModal","userReservations","setUserReservations","searchCode","setSearchCode","filteredReservations","setFilteredReservations","fetchReservations","console","log","id","response","fetch","process","env","REACT_APP_BACKEND_URL","ok","data","json","map","reserva","tipoHabitacion","translateTipoHabitacion","idHotel","idHabitacion","idUsuario","error","tipoHabitacionMap","calculateNights","checkIn","checkOut","checkInDate","Date","checkOutDate","diffTime","Math","abs","getTime","ceil","handleEdit","idReserva","cancelarReserva","method","headers","Error","alert","actualizarReserva","reservaActualizada","body","JSON","stringify","status","statusText","downloadReservationPdf","doc","text","setFontSize","reservationDetails","title","nombreHotel","numeroHabitacion","toString","ciudad","pais","direccion","fechaIngreso","fechaSalida","capacidadPersonas","totalReserva","estadoReserva","codigoReserva","autoTable","head","item","startY","save","openNotificarCambiosModal","handleNotificarCambios","translatedRoomType","templateParams","to_name","primer_nombre","hotel_name","room_number","room_type","location","check_in_date","check_out_date","total_nights","total_people","total_price","toFixed","reservation_status","reservation_code","to_email","email","send","fetchUserReservations","userId","historialReservas","formatToLocalDateString","dateString","date","isNaN","toLocaleDateString","handleSearchChange","e","target","value","filterReservationsByCode","filtered","filter","showAllReservations","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onChange","variant","onClick","length","Header","as","correoElectronico","Body","Title","Subtitle","Text","show","handleClose","onHide","closeButton","Group","Label","Control","rows","Footer","striped","bordered","hover","size","reservation","index","_c","$RefreshReg$"],"sources":["/home/pmorales/Downloads/Proyecto-B2B/Hotel/frontend/sistema_hoteles/src/components/AdministrarReservas.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Button, Card, Modal, Form, Table, InputGroup, FormControl } from 'react-bootstrap';\nimport { useUser } from './UserContext';\nimport EditReservationPage from './EditReservationPage';\nimport jsPDF from 'jspdf';\nimport 'jspdf-autotable';\nimport emailjs from 'emailjs-com';\n\n\nconst AdministrarReservas = () => {\n  const [reservations, setReservations] = useState([]);\n  const { user } = useUser();\n  const [showEditModal, setShowEditModal] = useState(false);\n  const [currentReservation, setCurrentReservation] = useState(null);\n  const [editedReservation, setEditedReservation] = useState(null);\n  const [showCommentModal, setShowCommentModal] = useState(false);\n  const [comment, setComment] = useState('');\n  const [showHistoryModal, setShowHistoryModal] = useState(false); // para la vista\n  const [userReservations, setUserReservations] = useState([]);  // para la vista\n  const [searchCode, setSearchCode] = useState('');   // filtro\n  const [filteredReservations, setFilteredReservations] = useState([]);  // filtro\n\n\n\n  useEffect(() => {\n    if (user) {\n      fetchReservations();\n    }\n  }, [user]);\n\n  const fetchReservations = async () => {\n    console.log('Fetching reservations for user:', user.id);\n    try {\n      const response = await fetch(process.env.REACT_APP_BACKEND_URL + `/reservas/detalle/todas`);\n      if (response.ok) {\n        const data = await response.json();\n        console.log('Reservations fetched successfully:', data);\n        setReservations(data.map(reserva => ({\n          ...reserva,\n          tipoHabitacion: translateTipoHabitacion(reserva.tipoHabitacion),\n          idHotel: reserva.idHotel, \n          idHabitacion: reserva.idHabitacion,\n          idUsuario: reserva.idUsuario\n        })));\n      } else {\n        console.error(\"Failed to fetch reservations.\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching reservations:\", error);\n    }\n  };\n\n  // a numero\n  const translateTipoHabitacion = (tipoHabitacion) => {\n    const tipoHabitacionMap = {\n      1: \"Doble\",\n      2: \"Junior Suite\",\n      3: \"Suite\",\n      4: \"Gran Suite\",\n    };\n    return tipoHabitacionMap[tipoHabitacion] || \"Unknown\";\n  };\n\n  const calculateNights = (checkIn, checkOut) => {\n    const checkInDate = new Date(checkIn);\n    const checkOutDate = new Date(checkOut);\n    const diffTime = Math.abs(checkOutDate.getTime() - checkInDate.getTime());\n    return Math.ceil(diffTime / (1000 * 3600 * 24));\n  };\n\n  const handleEdit = (reserva) => {\n    console.log('Opening edit modal for reservation:', reserva.idReserva);\n    setCurrentReservation(reserva);\n    setShowEditModal(true);\n  };\n  \n\n  const cancelarReserva = async (idReserva) => {\n    try {\n      const response = await fetch(process.env.REACT_APP_BACKEND_URL + `/reservas/${idReserva}/cancelar`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n      if (!response.ok) {\n        throw new Error('No se pudo cancelar la reserva');\n      }\n      alert('Reserva cancelada con éxito');\n      fetchReservations(); //error tipográfico.\n    } catch (error) {\n      console.error('Error al cancelar la reserva:', error);\n      alert('Error al cancelar la reserva');\n    }\n  };\n\n  const actualizarReserva = async (reservaActualizada) => {\n    console.log('Updating reservation with:', reservaActualizada);\n    try {\n      const response = await fetch(process.env.REACT_APP_BACKEND_URL + `/reservas/${reservaActualizada.idReserva}`, {\n        method: 'PUT',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(reservaActualizada),\n      });\n  \n      if (!response.ok) {\n        if (response.status === 409) {\n          // Conflicto , notifica al usuario\n          alert(\"Habitación no disponible.\");\n        } else {\n          // Otro tipo de error HTTP\n          throw new Error(`Reservation update failed: ${response.statusText}`);\n        }\n      } else {\n        console.log('Reservation updated successfully');\n        setShowEditModal(false);\n        await fetchReservations(); // Refresca lalista de reservaciones\n      }\n    } catch (error) {\n      console.error('Error updating reservation:', error);\n      alert(\"Ocurrió un error al actualizar la reserva. Por favor, intenta de nuevo.\");\n    }\n  };\n  \n\n\n  const downloadReservationPdf = (reserva) => {\n    const doc = new jsPDF();\n    doc.text(\"Detalle de Reserva\", 14, 16);\n    doc.setFontSize(10);\n\n    // Información de la reserva\n    const reservationDetails = [\n      { title: \"Hotel\", data: reserva.nombreHotel },\n      { title: \"Número de habitación\", data: reserva.numeroHabitacion.toString() }, \n      { title: \"Tipo de habitación\", data: reserva.tipoHabitacion },\n      { title: \"Ubicación\", data: `${reserva.ciudad}, ${reserva.pais} - ${reserva.direccion}` },\n      { title: \"Check-in\", data: reserva.fechaIngreso },\n      { title: \"Check-out\", data: reserva.fechaSalida },\n      { title: \"Número de noches\", data: calculateNights(reserva.fechaIngreso, reserva.fechaSalida).toString() },\n      { title: \"Personas\", data: reserva.capacidadPersonas.toString() },\n      { title: \"Total Reserva\", data: `$${reserva.totalReserva}` },\n      { title: \"Estado\", data: reserva.estadoReserva },\n      { title: \"Código de reserva\", data: reserva.codigoReserva },\n    ];\n\n    doc.autoTable({\n      head: [[\"Detalle\", \"Información\"]],\n      body: reservationDetails.map((item) => [item.title, item.data]),\n      startY: 20,\n    });\n\n    doc.save(`Reserva_${reserva.codigoReserva}.pdf`);\n  };\n  \n\n  const openNotificarCambiosModal = (reserva) => {\n    setCurrentReservation(reserva);\n    setShowCommentModal(true);\n  };\n\n\n  \n\n  const handleNotificarCambios = async (reserva) => {\n    const translatedRoomType = translateTipoHabitacion(reserva.tipoHabitacion.toString());\n\n    const templateParams = {\n      to_name: user.primer_nombre,\n      hotel_name: reserva.nombreHotel,\n      room_number: reserva.numeroHabitacion.toString() || \"No especificado\", \n      room_type: reserva.tipoHabitacion, \n      location: `${reserva.ciudad}, ${reserva.pais} - ${reserva.direccion}`,\n      check_in_date: reserva.fechaIngreso,\n      check_out_date: reserva.fechaSalida,\n      total_nights: calculateNights(reserva.fechaIngreso, reserva.fechaSalida).toString(),\n      total_people: reserva.capacidadPersonas.toString(),\n      total_price: `$${reserva.totalReserva.toFixed(2)}`,\n      reservation_status: reserva.estadoReserva,\n      reservation_code: reserva.codigoReserva.toString(), \n      to_email: user.email, \n      comment, \n    };\n\n    try {\n      await emailjs.send('service_db-dw2', 'template_vhblb7c', templateParams, '83TAqc_7hHgnfdESC');\n      console.log('Email successfully sent!');\n    } catch (error) {\n      console.error('Error al enviar notificación de cambio:', error.text);\n    }\n\n    setShowCommentModal(false); // Cerrar modal\n    setComment(''); // Limpiar comentario\n  };\n\n\n  const fetchUserReservations = async (userId) => {\n    try {\n      const response = await fetch(process.env.REACT_APP_BACKEND_URL + `/reservas/historial/${userId}`);\n      if (!response.ok) {\n        throw new Error('No se pudo cargar el historial de reservas');\n      }\n      const historialReservas = await response.json();\n      setUserReservations(historialReservas);\n      setShowHistoryModal(true);  // Muestra el modal con el historial de reservas\n    } catch (error) {\n      console.error('Error al cargar el historial de reservas:', error);\n    }\n  };\n  \n\n  \n  \n  const formatToLocalDateString = (dateString) => {\n    try {\n      const date = new Date(dateString);\n      if (!isNaN(date)) {\n        return date.toLocaleDateString();\n      }\n    } catch (error) {\n      console.error(\"Error al parsear la fecha:\", error);\n    }\n    return \"Fecha no disponible\";\n  };\n\n\n\nconst handleSearchChange = (e) => {\n  setSearchCode(e.target.value);\n};\n\nconst filterReservationsByCode = () => {\n  if (!searchCode) {\n    setFilteredReservations([]);\n    return;\n  }\n  \n  const filtered = reservations.filter(reserva => reserva.codigoReserva.toString() === searchCode);\n  setFilteredReservations(filtered);\n};\n\nconst showAllReservations = () => {\n  // Restablecer el código de búsqueda\n  setSearchCode('');\n  // Restablecer las reservaciones filtradas a todas las reservaciones\n  setFilteredReservations(reservations);\n};\n\n\n\nreturn (\n  <div className=\"booking-history-container\">\n    <h2 className=\"text-center\">Encontrar Reserva</h2>\n\n    <InputGroup className=\"mb-3\">\n      <FormControl\n        placeholder=\"Buscar por código de reserva\"\n        aria-label=\"Buscar por código de reserva\"\n        onChange={(e) => setSearchCode(e.target.value)}\n      />\n      <Button variant=\"outline-secondary\" onClick={() => filterReservationsByCode()}>Buscar</Button>\n      <Button variant=\"outline-info\" onClick={() => showAllReservations()}>Mostrar Todas</Button>\n\n    </InputGroup>\n\n    {filteredReservations.length > 0 ? (\n      filteredReservations.map((reserva) => (\n        <Card key={reserva.idReserva} className=\"mb-4 shadow\">\n          <Card.Header as=\"h5\" className=\"font-weight-bold\">\n            Reserva #{reserva.codigoReserva} - {reserva.correoElectronico}\n          </Card.Header>\n          <Card.Body>\n            <Card.Title>{reserva.nombreHotel}</Card.Title>\n            <Card.Subtitle className=\"mb-2 text-muted\">\n              {reserva.ciudad}, {reserva.pais} - {reserva.direccion}\n            </Card.Subtitle>\n            <Card.Text>Tipo de habitación: {reserva.tipoHabitacion}</Card.Text>\n            <Card.Text>Número de habitación: {reserva.numeroHabitacion}</Card.Text>\n            <Card.Text>Check-in: {reserva.fechaIngreso}</Card.Text>\n            <Card.Text>Check-out: {reserva.fechaSalida}</Card.Text>\n            <Card.Text>Número de noches: {calculateNights(reserva.fechaIngreso, reserva.fechaSalida)}</Card.Text>\n            <Card.Text>Personas: {reserva.capacidadPersonas}</Card.Text>\n            <Card.Text>Total Reserva: ${reserva.totalReserva}</Card.Text>\n            <Card.Text>Estado: {reserva.estadoReserva}</Card.Text>\n            {reserva.estadoReserva !== \"Cancelada\" && (\n              <>\n                <Button variant=\"warning\" onClick={() => handleEdit(reserva)}>Editar</Button>\n                <Button variant=\"danger\" onClick={() => cancelarReserva(reserva.idReserva)}>Cancelar</Button>\n              </>\n            )}\n            <Button variant=\"info\" onClick={() => downloadReservationPdf(reserva)}>Descargar</Button>\n            <Button variant=\"warning\" onClick={() => openNotificarCambiosModal(reserva)}>Notificar cambios</Button>\n            <Button variant=\"secondary\" onClick={() => fetchUserReservations(reserva.idUsuario)}>Ver Historial</Button>\n          </Card.Body>\n        </Card>\n      ))\n    ) : (\n        <p className=\"text-center\">No se encontraron reservas.</p>\n      )}\n      {currentReservation && (\n        <EditReservationPage\n          show={showEditModal}\n          handleClose={() => setShowEditModal(false)}\n          reserva={currentReservation}\n          actualizarReserva={actualizarReserva}\n        />\n        \n      )}\n            {/* Modal para el comentario */}\n            <Modal show={showCommentModal} onHide={() => setShowCommentModal(false)}>\n  <Modal.Header closeButton>\n    <Modal.Title>Notificacion de cambios</Modal.Title>\n  </Modal.Header>\n  <Modal.Body>\n    <Form.Group>\n      <Form.Label>Comentario</Form.Label>\n      <Form.Control as=\"textarea\" rows=\"3\" value={comment} onChange={(e) => setComment(e.target.value)} />\n    </Form.Group>\n  </Modal.Body>\n  <Modal.Footer>\n    <Button variant=\"secondary\" onClick={() => setShowCommentModal(false)}>Cerrar</Button>\n    <Button variant=\"primary\" onClick={() => handleNotificarCambios(currentReservation)}>Enviar Notificación</Button>\n  </Modal.Footer>\n</Modal>\n\n\n<Modal show={showHistoryModal} onHide={() => setShowHistoryModal(false)}>\n  <Modal.Header closeButton>\n    <Modal.Title>Historial de Reservas del Usuario</Modal.Title>\n  </Modal.Header>\n  <Modal.Body>\n    {userReservations.length > 0 ? (\n      <Table striped bordered hover size=\"sm\">\n        <thead>\n          <tr>\n            <th>Código de Reserva</th>\n            <th>Check-in</th>\n            <th>Check-out</th>\n            <th>Estado</th>\n            <th>Total Reserva</th>\n          </tr>\n        </thead>\n        <tbody>\n          {userReservations.map((reservation, index) => (\n            <tr key={index}>\n              <td>{reservation.codigoReserva}</td>\n              <td>{formatToLocalDateString(reservation.fechaIngreso)}</td>\n              <td>{formatToLocalDateString(reservation.fechaSalida)}</td>\n              <td>{reservation.estadoReserva}</td>\n              <td>${reservation.totalReserva ? reservation.totalReserva.toFixed(2) : \"0.00\"}</td>\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n      \n    ) : (\n      <p>No se encontraron reservas para este usuario.</p>\n    )}\n  </Modal.Body>\n  <Modal.Footer>\n    <Button variant=\"secondary\" onClick={() => setShowHistoryModal(false)}>\n      Cerrar\n    </Button>\n  </Modal.Footer>\n</Modal>\n\n\n\n\n\n    </div>\n  );\n};\n\nexport default AdministrarReservas;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}