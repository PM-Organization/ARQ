{"ast":null,"code":"var _jsxFileName = \"/home/pmorales/Downloads/Proyecto-B2B/Hotel/frontend/sistema_hoteles/src/components/AddHabitacionPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, Form, Button, Table, Alert, Row, Col } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddHabitacionPage = () => {\n  _s();\n  const [hoteles, setHoteles] = useState([]);\n  const [habitaciones, setHabitaciones] = useState([]);\n  const [selectedHotel, setSelectedHotel] = useState('');\n  const [nuevaHabitacion, setNuevaHabitacion] = useState({\n    numero_habitacion: '',\n    capacidad_personas: '',\n    tipo_habitacion: '',\n    precioxpersona: '',\n    precioxnoche: '',\n    valuacion: ''\n  });\n  const [successMessage, setSuccessMessage] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  useEffect(() => {\n    fetchHoteles();\n  }, []);\n  const fetchHoteles = async () => {\n    try {\n      const response = await fetch('http://localhost:8080/hoteles');\n      const data = await response.json();\n      setHoteles(data);\n    } catch (error) {\n      console.error('Error al cargar los hoteles:', error);\n      setErrorMessage('Error al cargar los hoteles');\n    }\n  };\n  const fetchHabitaciones = async idHotel => {\n    try {\n      // Asegúrate de usar el parámetro correcto para filtrar por hotel. En este caso, asumimos que es 'hotelId'\n      const response = await fetch(`http://localhost:8080/habitaciones?hotelId=${idHotel}`);\n      if (!response.ok) throw new Error('No se pudieron cargar las habitaciones');\n      const data = await response.json();\n      setHabitaciones(data);\n    } catch (error) {\n      console.error('Error al cargar las habitaciones:', error);\n      setErrorMessage('Error al cargar las habitaciones');\n    }\n  };\n  const handleSelectHotel = e => {\n    const idHotel = e.target.value;\n    setSelectedHotel(idHotel);\n    fetchHabitaciones(idHotel);\n  };\n  const handleChangeNuevaHabitacion = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNuevaHabitacion({\n      ...nuevaHabitacion,\n      [name]: value\n    });\n  };\n  const handleSubmitHabitacion = async e => {\n    e.preventDefault();\n    try {\n      await fetch(`http://localhost:8080/habitaciones`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          ...nuevaHabitacion,\n          id_hotel: selectedHotel\n        })\n      });\n      setSuccessMessage('Habitación creada exitosamente');\n      fetchHabitaciones(selectedHotel); // Recargar las habitaciones del hotel seleccionado\n    } catch (error) {\n      console.error('Error al crear la habitación:', error);\n      setErrorMessage('Error al crear la habitación');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"A\\xF1adir Habitaci\\xF3n a Hotel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"danger\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 24\n    }, this), successMessage && /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"success\",\n      children: successMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 26\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      children: /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"selectHotel\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Selecciona un Hotel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          as: \"select\",\n          onChange: handleSelectHotel,\n          value: selectedHotel,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Selecciona un hotel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), hoteles.map(hotel => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: hotel.id_hotel,\n            children: hotel.nombre\n          }, hotel.id_hotel, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_s(AddHabitacionPage, \"CdBrn5+Vb5U98rHGtRt3lLlum7E=\");\n_c = AddHabitacionPage;\nexport default AddHabitacionPage;\nvar _c;\n$RefreshReg$(_c, \"AddHabitacionPage\");","map":{"version":3,"names":["React","useState","useEffect","Container","Form","Button","Table","Alert","Row","Col","jsxDEV","_jsxDEV","AddHabitacionPage","_s","hoteles","setHoteles","habitaciones","setHabitaciones","selectedHotel","setSelectedHotel","nuevaHabitacion","setNuevaHabitacion","numero_habitacion","capacidad_personas","tipo_habitacion","precioxpersona","precioxnoche","valuacion","successMessage","setSuccessMessage","errorMessage","setErrorMessage","fetchHoteles","response","fetch","data","json","error","console","fetchHabitaciones","idHotel","ok","Error","handleSelectHotel","e","target","value","handleChangeNuevaHabitacion","name","handleSubmitHabitacion","preventDefault","method","headers","body","JSON","stringify","id_hotel","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","Group","controlId","Label","Control","as","onChange","map","hotel","nombre","_c","$RefreshReg$"],"sources":["/home/pmorales/Downloads/Proyecto-B2B/Hotel/frontend/sistema_hoteles/src/components/AddHabitacionPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Container, Form, Button, Table, Alert, Row, Col } from 'react-bootstrap';\n\nconst AddHabitacionPage = () => {\n  const [hoteles, setHoteles] = useState([]);\n  const [habitaciones, setHabitaciones] = useState([]);\n  const [selectedHotel, setSelectedHotel] = useState('');\n  const [nuevaHabitacion, setNuevaHabitacion] = useState({\n    numero_habitacion: '',\n    capacidad_personas: '',\n    tipo_habitacion: '',\n    precioxpersona: '',\n    precioxnoche: '',\n    valuacion: ''\n  });\n  const [successMessage, setSuccessMessage] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n\n  useEffect(() => {\n    fetchHoteles();\n  }, []);\n\n  const fetchHoteles = async () => {\n    try {\n      const response = await fetch('http://localhost:8080/hoteles');\n      const data = await response.json();\n      setHoteles(data);\n    } catch (error) {\n      console.error('Error al cargar los hoteles:', error);\n      setErrorMessage('Error al cargar los hoteles');\n    }\n  };\n\n  const fetchHabitaciones = async (idHotel) => {\n    try {\n      // Asegúrate de usar el parámetro correcto para filtrar por hotel. En este caso, asumimos que es 'hotelId'\n      const response = await fetch(`http://localhost:8080/habitaciones?hotelId=${idHotel}`);\n      if (!response.ok) throw new Error('No se pudieron cargar las habitaciones');\n      const data = await response.json();\n      setHabitaciones(data);\n    } catch (error) {\n      console.error('Error al cargar las habitaciones:', error);\n      setErrorMessage('Error al cargar las habitaciones');\n    }\n  };\n  \n\n  const handleSelectHotel = (e) => {\n    const idHotel = e.target.value;\n    setSelectedHotel(idHotel);\n    fetchHabitaciones(idHotel);\n  };\n\n  const handleChangeNuevaHabitacion = (e) => {\n    const { name, value } = e.target;\n    setNuevaHabitacion({\n      ...nuevaHabitacion,\n      [name]: value,\n    });\n  };\n\n  const handleSubmitHabitacion = async (e) => {\n    e.preventDefault();\n    try {\n      await fetch(`http://localhost:8080/habitaciones`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ ...nuevaHabitacion, id_hotel: selectedHotel }),\n      });\n      setSuccessMessage('Habitación creada exitosamente');\n      fetchHabitaciones(selectedHotel); // Recargar las habitaciones del hotel seleccionado\n    } catch (error) {\n      console.error('Error al crear la habitación:', error);\n      setErrorMessage('Error al crear la habitación');\n    }\n  };\n\n  return (\n    <Container>\n      <h1>Añadir Habitación a Hotel</h1>\n      {errorMessage && <Alert variant=\"danger\">{errorMessage}</Alert>}\n      {successMessage && <Alert variant=\"success\">{successMessage}</Alert>}\n      <Form>\n        <Form.Group controlId=\"selectHotel\">\n          <Form.Label>Selecciona un Hotel</Form.Label>\n          <Form.Control as=\"select\" onChange={handleSelectHotel} value={selectedHotel}>\n            <option>Selecciona un hotel</option>\n            {hoteles.map(hotel => (\n              <option key={hotel.id_hotel} value={hotel.id_hotel}>{hotel.nombre}</option>\n            ))}\n          </Form.Control>\n        </Form.Group>\n      </Form>\n      {/* A continuación, el código para mostrar y añadir habitaciones */}\n    </Container>\n  );\n};\n\nexport default AddHabitacionPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}