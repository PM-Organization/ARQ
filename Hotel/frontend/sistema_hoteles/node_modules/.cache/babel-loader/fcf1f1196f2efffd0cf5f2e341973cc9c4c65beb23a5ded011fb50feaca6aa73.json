{"ast":null,"code":"var _jsxFileName = \"/home/pmorales/Downloads/Proyecto-B2B/Hotel/frontend/sistema_hoteles/src/components/HomePage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Card, Button, Form, Alert, Image, Carousel } from 'react-bootstrap';\nimport { useNavigate } from 'react-router-dom';\nimport defaultRoomImage from './roomImage.jpg';\nimport Comentarios from './Comentarios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomePage = () => {\n  _s();\n  const [hotels, setHotels] = useState([]);\n  const [paises, setPaises] = useState([]);\n  const [capacidades, setCapacidades] = useState([]);\n  const [paisSeleccionado, setPaisSeleccionado] = useState('');\n  const [fechaIngreso, setFechaIngreso] = useState('');\n  const [fechaSalida, setFechaSalida] = useState('');\n  const [numeroPersonas, setNumeroPersonas] = useState(1);\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  const [hotelImages, setHotelImages] = useState({});\n  const [roomTypes, setRoomTypes] = useState({});\n  const tiposHabitacion = {\n    1: 'Doble',\n    2: 'Junior Suite',\n    3: 'Suite',\n    4: 'Gran Suite'\n  };\n  useEffect(() => {\n    fetchRoomTypes();\n    fetchPaises();\n    fetchCapacidades();\n    fetchInitialHotelsAndRooms();\n  }, []);\n  const fetchCapacidades = async () => {\n    try {\n      const response = await fetch('http://localhost:8080/habitaciones/capacidades');\n      if (!response.ok) throw new Error('No se pudieron cargar las capacidades de las habitaciones');\n      const capacidadesUnicas = await response.json();\n      setCapacidades(capacidadesUnicas.sort((a, b) => a - b));\n    } catch (error) {\n      console.error('Error al cargar capacidades:', error);\n      setError('Error al cargar las capacidades de las habitaciones.');\n    }\n  };\n\n  //IMAGENES\n\n  const fetchHotelImages = async idHotel => {\n    try {\n      const response = await fetch(`http://localhost:8080/hoteles/${idHotel}/imagenes`);\n      if (!response.ok) throw new Error('Error al cargar imágenes del hotel');\n      const images = await response.json();\n      setHotelImages(prevImages => ({\n        ...prevImages,\n        [idHotel]: images\n      }));\n    } catch (error) {\n      console.error('Error fetching hotel images:', error);\n    }\n  };\n  useEffect(() => {\n    hotels.forEach(hotel => {\n      fetchHotelImages(hotel.id_hotel);\n    });\n  }, [hotels]);\n  const fetchRoomTypes = async () => {\n    try {\n      const response = await fetch('http://localhost:8080/tipos_habitacion');\n      if (!response.ok) throw new Error('Error al cargar los tipos de habitación');\n      const data = await response.json();\n      setRoomTypes(data.reduce((map, roomType) => {\n        map[roomType.id_tipo] = roomType.imagenUrl || defaultRoomImage;\n        return map;\n      }, {}));\n    } catch (error) {\n      setError('Error al cargar los tipos de habitación: ' + error.message);\n    }\n  };\n  const fetchPaises = async () => {\n    try {\n      const response = await fetch('http://localhost:8080/hoteles/pais');\n      if (!response.ok) throw new Error('Error al cargar los países');\n      const data = await response.json();\n      setPaises(data);\n    } catch (error) {\n      setError('Error al cargar los países: ' + error.message);\n    }\n  };\n  const fetchInitialHotelsAndRooms = async () => {\n    try {\n      const hotelsResponse = await fetch('http://localhost:8080/hoteles');\n      if (!hotelsResponse.ok) throw new Error('Error al cargar hoteles');\n      const hotelsData = await hotelsResponse.json();\n      const roomTypesResponse = await fetch('http://localhost:8080/tipos_habitacion');\n      if (!roomTypesResponse.ok) throw new Error('Error al cargar tipos de habitación');\n      const roomTypesData = await roomTypesResponse.json();\n      const roomTypesMap = roomTypesData.reduce((acc, roomType) => {\n        acc[roomType.id_tipo] = roomType.imagenUrl || defaultRoomImage;\n        return acc;\n      }, {});\n      const hotelsWithRooms = await Promise.all(hotelsData.map(async hotel => {\n        const roomsResponse = await fetch(`http://localhost:8080/habitaciones?hotelId=${hotel.id_hotel}`); // Cambiado de hotel.id a hotel.id_hotel\n        if (!roomsResponse.ok) {\n          console.error('Error fetching rooms for hotel', hotel.id_hotel); // Cambiado de hotel.id a hotel.id_hotel\n          return {\n            ...hotel,\n            rooms: []\n          }; // Devuelve el hotel sin modificarlo si hay un error\n        }\n        const roomsData = await roomsResponse.json();\n        const roomsWithImages = roomsData.map(room => ({\n          ...room,\n          imagenUrl: roomTypesMap[room.tipo_habitacion] || defaultRoomImage\n        }));\n        return {\n          ...hotel,\n          rooms: roomsWithImages\n        };\n      }));\n      setHotels(hotelsWithRooms);\n    } catch (error) {\n      console.error('Error loading initial hotels and rooms:', error);\n      setError('Error al cargar hoteles y habitaciones iniciales: ' + error.message);\n    }\n  };\n  const fetchHotelsAndRoomsFiltered = async () => {\n    let queryParams = `?pais=${paisSeleccionado}&fechaIngreso=${fechaIngreso}&fechaSalida=${fechaSalida}&numeroPersonas=${numeroPersonas}`;\n    try {\n      const response = await fetch(`http://localhost:8080/habitaciones/buscar${queryParams}`);\n      if (!response.ok) throw new Error('Error al cargar hoteles y habitaciones filtradas');\n      const filteredHotels = await response.json();\n      setHotels(filteredHotels);\n    } catch (error) {\n      setError('Error al cargar hoteles y habitaciones filtradas: ' + error.message);\n    }\n  };\n  const handleSearch = e => {\n    e.preventDefault();\n    fetchHotelsAndRoomsFiltered();\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"my-5\",\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSearch,\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"pais\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Pa\\xEDs\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"select\",\n              value: paisSeleccionado,\n              onChange: e => setPaisSeleccionado(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Seleccione un pa\\xEDs\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 17\n              }, this), paises.map(pais => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: pais,\n                children: pais\n              }, pais, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"fechaIngreso\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Fecha de Ingreso\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"date\",\n              value: fechaIngreso,\n              onChange: e => setFechaIngreso(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"fechaSalida\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Fecha de Salida\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"date\",\n              value: fechaSalida,\n              onChange: e => setFechaSalida(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"capacidadPersonas\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Capacidad de Personas\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"select\",\n              value: numeroPersonas,\n              onChange: e => setNumeroPersonas(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Seleccione capacidad\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 17\n              }, this), capacidades.map((capacidad, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: capacidad,\n                children: [capacidad, \" personas\"]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            type: \"submit\",\n            children: \"Buscar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: hotels.length > 0 ? hotels.map((hotel, index) =>\n      /*#__PURE__*/\n      // Usamos una combinación del id del hotel y el índice para garantizar que la key sea única\n      _jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: 10,\n          className: \"mt-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Hotel: \", hotel.nombre]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [hotel.ciudad, \", \", hotel.pais]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Direcci\\xF3n: \", hotel.direccion]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 9\n          }, this), hotelImages[hotel.id_hotel] && hotelImages[hotel.id_hotel].length > 0 && /*#__PURE__*/_jsxDEV(Carousel, {\n            interval: null,\n            children: hotelImages[hotel.id_hotel].map((image, imageIndex) =>\n            /*#__PURE__*/\n            // Aquí es seguro usar el índice porque está dentro de un contexto que ya es único (el hotel específico)\n            _jsxDEV(Carousel.Item, {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"d-block w-100\",\n                src: image,\n                alt: `Imagen ${imageIndex + 1} del hotel ${hotel.nombre}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 17\n              }, this)\n            }, imageIndex, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 15\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 7\n        }, this), hotel.rooms && hotel.rooms.map((room, roomIndex) =>\n        /*#__PURE__*/\n        // Similarmente, combinamos id de habitación con un índice para las claves de las habitaciones\n        _jsxDEV(Col, {\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n              variant: \"top\",\n              src: room.imagenUrl || defaultRoomImage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                children: [\"Habitaci\\xF3n: \", tiposHabitacion[room.tipo_habitacion]]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: [\"N\\xFAmero de habitaci\\xF3n: \", room.numero_habitacion]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: [\"Capacidad m\\xE1xima: \", room.capacidad_personas, \" personas\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: [\"Precio por noche: $\", room.precioxnoche]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: [\"Valoraci\\xF3n: \", room.valuacion, \" estrellas\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"primary\",\n                onClick: () => navigate('/checkout', {\n                  state: {\n                    hotelDetails: {\n                      ...hotel\n                    },\n                    roomDetails: {\n                      ...room,\n                      idHabitacion: room.id_habitacion,\n                      roomType: tiposHabitacion[room.tipo_habitacion],\n                      roomPrice: room.precioxnoche,\n                      capacidadPersonas: room.capacidad_personas\n                    }\n                  }\n                }),\n                children: \"Reservar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Comentarios, {\n                idHabitacion: room.id_habitacion\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 11\n          }, this)\n        }, `${room.id_habitacion}-${roomIndex}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 9\n        }, this))]\n      }, `${hotel.id_hotel}-${index}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 5\n      }, this)) : /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-4\",\n          children: \"No se encontraron hoteles. Por favor, intenta nuevamente con diferentes criterios de b\\xFAsqueda.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 5\n  }, this);\n};\n_s(HomePage, \"V+aP6O1WlfpN5HNIfvy0rD0cnPc=\", false, function () {\n  return [useNavigate];\n});\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","useEffect","Container","Row","Col","Card","Button","Form","Alert","Image","Carousel","useNavigate","defaultRoomImage","Comentarios","jsxDEV","_jsxDEV","HomePage","_s","hotels","setHotels","paises","setPaises","capacidades","setCapacidades","paisSeleccionado","setPaisSeleccionado","fechaIngreso","setFechaIngreso","fechaSalida","setFechaSalida","numeroPersonas","setNumeroPersonas","error","setError","navigate","hotelImages","setHotelImages","roomTypes","setRoomTypes","tiposHabitacion","fetchRoomTypes","fetchPaises","fetchCapacidades","fetchInitialHotelsAndRooms","response","fetch","ok","Error","capacidadesUnicas","json","sort","a","b","console","fetchHotelImages","idHotel","images","prevImages","forEach","hotel","id_hotel","data","reduce","map","roomType","id_tipo","imagenUrl","message","hotelsResponse","hotelsData","roomTypesResponse","roomTypesData","roomTypesMap","acc","hotelsWithRooms","Promise","all","roomsResponse","rooms","roomsData","roomsWithImages","room","tipo_habitacion","fetchHotelsAndRoomsFiltered","queryParams","filteredHotels","handleSearch","e","preventDefault","className","children","onSubmit","Group","controlId","Label","fileName","_jsxFileName","lineNumber","columnNumber","Control","as","value","onChange","target","pais","type","capacidad","index","variant","length","Fragment","md","nombre","ciudad","direccion","interval","image","imageIndex","Item","src","alt","roomIndex","Img","Body","Title","Text","numero_habitacion","capacidad_personas","precioxnoche","valuacion","onClick","state","hotelDetails","roomDetails","idHabitacion","id_habitacion","roomPrice","capacidadPersonas","_c","$RefreshReg$"],"sources":["/home/pmorales/Downloads/Proyecto-B2B/Hotel/frontend/sistema_hoteles/src/components/HomePage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Card, Button, Form, Alert, Image, Carousel } from 'react-bootstrap';\nimport { useNavigate } from 'react-router-dom';\nimport defaultRoomImage from './roomImage.jpg';\nimport Comentarios from './Comentarios';\n\nconst HomePage = () => {\n  const [hotels, setHotels] = useState([]);\n  const [paises, setPaises] = useState([]);\n  const [capacidades, setCapacidades] = useState([]);\n  const [paisSeleccionado, setPaisSeleccionado] = useState('');\n  const [fechaIngreso, setFechaIngreso] = useState('');\n  const [fechaSalida, setFechaSalida] = useState('');\n  const [numeroPersonas, setNumeroPersonas] = useState(1);\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  const [hotelImages, setHotelImages] = useState({});\n  const [roomTypes, setRoomTypes] = useState({});\n\n\n  const tiposHabitacion = {\n    1: 'Doble',\n    2: 'Junior Suite',\n    3: 'Suite',\n    4: 'Gran Suite'\n  };\n\n\n  useEffect(() => {\n    fetchRoomTypes();\n    fetchPaises();\n    fetchCapacidades();\n    fetchInitialHotelsAndRooms();\n  }, []);\n\n\n\n\n  const fetchCapacidades = async () => {\n    try {\n      const response = await fetch('http://localhost:8080/habitaciones/capacidades');\n      if (!response.ok) throw new Error('No se pudieron cargar las capacidades de las habitaciones');\n      const capacidadesUnicas = await response.json();\n      setCapacidades(capacidadesUnicas.sort((a, b) => a - b));\n    } catch (error) {\n      console.error('Error al cargar capacidades:', error);\n      setError('Error al cargar las capacidades de las habitaciones.');\n    }\n  };\n\n\n\n\n  //IMAGENES\n\n  const fetchHotelImages = async (idHotel) => {\n    try {\n      const response = await fetch(`http://localhost:8080/hoteles/${idHotel}/imagenes`);\n      if (!response.ok) throw new Error('Error al cargar imágenes del hotel');\n      const images = await response.json();\n      setHotelImages(prevImages => ({ ...prevImages, [idHotel]: images }));\n    } catch (error) {\n      console.error('Error fetching hotel images:', error);\n    }\n  };\n\n  useEffect(() => {\n    hotels.forEach((hotel) => {\n      fetchHotelImages(hotel.id_hotel);\n    });\n  }, [hotels]);\n\n  \n\n  const fetchRoomTypes = async () => {\n    try {\n      const response = await fetch('http://localhost:8080/tipos_habitacion');\n      if (!response.ok) throw new Error('Error al cargar los tipos de habitación');\n      const data = await response.json();\n      setRoomTypes(data.reduce((map, roomType) => {\n        map[roomType.id_tipo] = roomType.imagenUrl || defaultRoomImage; \n        return map;\n      }, {}));\n    } catch (error) {\n      setError('Error al cargar los tipos de habitación: ' + error.message);\n    }\n  };\n  \n\n\n\n  const fetchPaises = async () => {\n    try {\n      const response = await fetch('http://localhost:8080/hoteles/pais');\n      if (!response.ok) throw new Error('Error al cargar los países');\n      const data = await response.json();\n      setPaises(data);\n    } catch (error) {\n      setError('Error al cargar los países: ' + error.message);\n    }\n  };\n\n  const fetchInitialHotelsAndRooms = async () => {\n    try {\n      const hotelsResponse = await fetch('http://localhost:8080/hoteles');\n      if (!hotelsResponse.ok) throw new Error('Error al cargar hoteles');\n      const hotelsData = await hotelsResponse.json();\n  \n      const roomTypesResponse = await fetch('http://localhost:8080/tipos_habitacion');\n      if (!roomTypesResponse.ok) throw new Error('Error al cargar tipos de habitación');\n      const roomTypesData = await roomTypesResponse.json();\n  \n      const roomTypesMap = roomTypesData.reduce((acc, roomType) => {\n        acc[roomType.id_tipo] = roomType.imagenUrl || defaultRoomImage;\n        return acc;\n      }, {});\n  \n      const hotelsWithRooms = await Promise.all(hotelsData.map(async (hotel) => {\n        const roomsResponse = await fetch(`http://localhost:8080/habitaciones?hotelId=${hotel.id_hotel}`); // Cambiado de hotel.id a hotel.id_hotel\n        if (!roomsResponse.ok) {\n          console.error('Error fetching rooms for hotel', hotel.id_hotel); // Cambiado de hotel.id a hotel.id_hotel\n          return { ...hotel, rooms: [] }; // Devuelve el hotel sin modificarlo si hay un error\n        }\n        const roomsData = await roomsResponse.json();\n        const roomsWithImages = roomsData.map(room => ({\n          ...room,\n          imagenUrl: roomTypesMap[room.tipo_habitacion] || defaultRoomImage\n        }));\n        return { ...hotel, rooms: roomsWithImages };\n      }));\n  \n      setHotels(hotelsWithRooms);\n    } catch (error) {\n      console.error('Error loading initial hotels and rooms:', error);\n      setError('Error al cargar hoteles y habitaciones iniciales: ' + error.message);\n    }\n  };\n  \n  \n  \n\n  const fetchHotelsAndRoomsFiltered = async () => {\n    let queryParams = `?pais=${paisSeleccionado}&fechaIngreso=${fechaIngreso}&fechaSalida=${fechaSalida}&numeroPersonas=${numeroPersonas}`;\n    try {\n      const response = await fetch(`http://localhost:8080/habitaciones/buscar${queryParams}`);\n      if (!response.ok) throw new Error('Error al cargar hoteles y habitaciones filtradas');\n      const filteredHotels = await response.json();\n      setHotels(filteredHotels);\n    } catch (error) {\n      setError('Error al cargar hoteles y habitaciones filtradas: ' + error.message);\n    }\n  };\n\n  const handleSearch = (e) => {\n    e.preventDefault();\n    fetchHotelsAndRoomsFiltered();\n  };\n\n  return (\n    <Container className=\"my-5\">\n      {/* Filtro de búsqueda */}\n      <Form onSubmit={handleSearch}>\n        <Row className=\"mb-4\">\n          <Col>\n            <Form.Group controlId=\"pais\">\n              <Form.Label>País</Form.Label>\n              <Form.Control as=\"select\" value={paisSeleccionado} onChange={e => setPaisSeleccionado(e.target.value)}>\n                <option value=\"\">Seleccione un país</option>\n                {paises.map(pais => (\n                  <option key={pais} value={pais}>{pais}</option>\n                ))}\n              </Form.Control>\n            </Form.Group>\n          </Col>\n          <Col>\n            <Form.Group controlId=\"fechaIngreso\">\n              <Form.Label>Fecha de Ingreso</Form.Label>\n              <Form.Control type=\"date\" value={fechaIngreso} onChange={e => setFechaIngreso(e.target.value)} />\n            </Form.Group>\n          </Col>\n          <Col>\n            <Form.Group controlId=\"fechaSalida\">\n              <Form.Label>Fecha de Salida</Form.Label>\n              <Form.Control type=\"date\" value={fechaSalida} onChange={e => setFechaSalida(e.target.value)} />\n            </Form.Group>\n          </Col>\n         <Col>\n            <Form.Group controlId=\"capacidadPersonas\">\n              <Form.Label>Capacidad de Personas</Form.Label>\n              <Form.Control as=\"select\" value={numeroPersonas} onChange={e => setNumeroPersonas(e.target.value)}>\n                <option value=\"\">Seleccione capacidad</option>\n                {capacidades.map((capacidad, index) => (\n                  <option key={index} value={capacidad}>{capacidad} personas</option>\n                ))}\n              </Form.Control>\n            </Form.Group>\n          </Col>\n          <Col>\n            <Button variant=\"primary\" type=\"submit\">Buscar</Button>\n          </Col>\n        </Row>\n      </Form>\n\n      <Row>\n      {hotels.length > 0 ? (\n  hotels.map((hotel, index) => (\n    // Usamos una combinación del id del hotel y el índice para garantizar que la key sea única\n    <React.Fragment key={`${hotel.id_hotel}-${index}`}>\n      <Col md={10} className=\"mt-4\">\n        <h3>Hotel: {hotel.nombre}</h3>\n        <p>{hotel.ciudad}, {hotel.pais}</p>\n        <p>Dirección: {hotel.direccion}</p>\n        {hotelImages[hotel.id_hotel] && hotelImages[hotel.id_hotel].length > 0 && (\n          <Carousel interval={null}>\n            {hotelImages[hotel.id_hotel].map((image, imageIndex) => (\n              // Aquí es seguro usar el índice porque está dentro de un contexto que ya es único (el hotel específico)\n              <Carousel.Item key={imageIndex}>\n                <img\n                  className=\"d-block w-100\"\n                  src={image}\n                  alt={`Imagen ${imageIndex + 1} del hotel ${hotel.nombre}`}\n                />\n              </Carousel.Item>\n            ))}\n          </Carousel>\n        )}\n      </Col>\n      {hotel.rooms && hotel.rooms.map((room, roomIndex) => (\n        // Similarmente, combinamos id de habitación con un índice para las claves de las habitaciones\n        <Col key={`${room.id_habitacion}-${roomIndex}`} md={6}>\n          <Card className=\"mb-3\">\n            <Card.Img variant=\"top\" src={room.imagenUrl || defaultRoomImage} />\n            <Card.Body>\n              <Card.Title>Habitación: {tiposHabitacion[room.tipo_habitacion]}</Card.Title>\n              <Card.Text>Número de habitación: {room.numero_habitacion}</Card.Text>\n              <Card.Text>Capacidad máxima: {room.capacidad_personas} personas</Card.Text>\n              <Card.Text>Precio por noche: ${room.precioxnoche}</Card.Text>\n              <Card.Text>Valoración: {room.valuacion} estrellas</Card.Text>\n              <Button variant=\"primary\" onClick={() => navigate('/checkout', {\n                state: {\n                  hotelDetails: { ...hotel },\n                  roomDetails: {\n                    ...room,\n                    idHabitacion: room.id_habitacion,\n                    roomType: tiposHabitacion[room.tipo_habitacion],\n                    roomPrice: room.precioxnoche,\n                    capacidadPersonas: room.capacidad_personas\n                  }\n                }\n              })}>\n                Reservar\n              </Button>\n              <Comentarios idHabitacion={room.id_habitacion} />\n            </Card.Body>\n          </Card>\n        </Col>\n      ))}\n    </React.Fragment>\n  ))\n) : (\n  <Col>\n    <p className=\"mt-4\">No se encontraron hoteles. Por favor, intenta nuevamente con diferentes criterios de búsqueda.</p>\n  </Col>\n)}\n\n      </Row>\n    </Container>\n  );\n};\n\nexport default HomePage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}