{"ast":null,"code":"var _jsxFileName = \"/home/pmorales/Downloads/Proyecto-B2B/Hotel/frontend/sistema_hoteles/src/components/AdministrarReservas.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Button, Card, Modal, Form, Table } from 'react-bootstrap';\nimport { useUser } from './UserContext';\nimport EditReservationPage from './EditReservationPage';\nimport jsPDF from 'jspdf';\nimport 'jspdf-autotable';\nimport emailjs from 'emailjs-com';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AdministrarReservas = () => {\n  _s();\n  const [reservations, setReservations] = useState([]);\n  const {\n    user\n  } = useUser();\n  const [showEditModal, setShowEditModal] = useState(false);\n  const [currentReservation, setCurrentReservation] = useState(null);\n  const [editedReservation, setEditedReservation] = useState(null);\n  const [showCommentModal, setShowCommentModal] = useState(false);\n  const [comment, setComment] = useState('');\n  const [showHistoryModal, setShowHistoryModal] = useState(false); // para la vista\n  const [userReservations, setUserReservations] = useState([]); // para la vista\n\n  useEffect(() => {\n    if (user) {\n      fetchReservations();\n    }\n  }, [user]);\n\n  // a numero\n  const translateTipoHabitacion = tipoHabitacion => {\n    const tipoHabitacionMap = {\n      1: \"Doble\",\n      2: \"Junior Suite\",\n      3: \"Suite\",\n      4: \"Gran Suite\"\n    };\n    return tipoHabitacionMap[tipoHabitacion] || \"Unknown\";\n  };\n  const calculateNights = (checkIn, checkOut) => {\n    const checkInDate = new Date(checkIn);\n    const checkOutDate = new Date(checkOut);\n    const diffTime = Math.abs(checkOutDate.getTime() - checkInDate.getTime());\n    return Math.ceil(diffTime / (1000 * 3600 * 24));\n  };\n  const handleEdit = reserva => {\n    console.log('Opening edit modal for reservation:', reserva.idReserva);\n    setCurrentReservation(reserva);\n    setShowEditModal(true);\n  };\n  const cancelarReserva = async idReserva => {\n    try {\n      const response = await fetch(`http://localhost:8080/reservas/${idReserva}/cancelar`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) {\n        throw new Error('No se pudo cancelar la reserva');\n      }\n      alert('Reserva cancelada con éxito');\n      fetchReservations(); //error tipográfico.\n    } catch (error) {\n      console.error('Error al cancelar la reserva:', error);\n      alert('Error al cancelar la reserva');\n    }\n  };\n  const actualizarReserva = async reservaActualizada => {\n    console.log('Updating reservation with:', reservaActualizada);\n    try {\n      const response = await fetch(`http://localhost:8080/reservas/${reservaActualizada.idReserva}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(reservaActualizada)\n      });\n      if (!response.ok) {\n        if (response.status === 409) {\n          // Conflicto , notifica al usuario\n          alert(\"Habitación no disponible.\");\n        } else {\n          // Otro tipo de error HTTP\n          throw new Error(`Reservation update failed: ${response.statusText}`);\n        }\n      } else {\n        console.log('Reservation updated successfully');\n        setShowEditModal(false);\n        await fetchReservations(); // Refresca lalista de reservaciones\n      }\n    } catch (error) {\n      console.error('Error updating reservation:', error);\n      alert(\"Ocurrió un error al actualizar la reserva. Por favor, intenta de nuevo.\");\n    }\n  };\n  const downloadReservationPdf = reserva => {\n    const doc = new jsPDF();\n    doc.text(\"Detalle de Reserva\", 14, 16);\n    doc.setFontSize(10);\n\n    // Información de la reserva\n    const reservationDetails = [{\n      title: \"Hotel\",\n      data: reserva.nombreHotel\n    }, {\n      title: \"Número de habitación\",\n      data: reserva.numeroHabitacion.toString()\n    }, {\n      title: \"Tipo de habitación\",\n      data: reserva.tipoHabitacion\n    }, {\n      title: \"Ubicación\",\n      data: `${reserva.ciudad}, ${reserva.pais} - ${reserva.direccion}`\n    }, {\n      title: \"Check-in\",\n      data: reserva.fechaIngreso\n    }, {\n      title: \"Check-out\",\n      data: reserva.fechaSalida\n    }, {\n      title: \"Número de noches\",\n      data: calculateNights(reserva.fechaIngreso, reserva.fechaSalida).toString()\n    }, {\n      title: \"Personas\",\n      data: reserva.capacidadPersonas.toString()\n    }, {\n      title: \"Total Reserva\",\n      data: `$${reserva.totalReserva}`\n    }, {\n      title: \"Estado\",\n      data: reserva.estadoReserva\n    }, {\n      title: \"Código de reserva\",\n      data: reserva.codigoReserva\n    }];\n    doc.autoTable({\n      head: [[\"Detalle\", \"Información\"]],\n      body: reservationDetails.map(item => [item.title, item.data]),\n      startY: 20\n    });\n    doc.save(`Reserva_${reserva.codigoReserva}.pdf`);\n  };\n  const openNotificarCambiosModal = reserva => {\n    setCurrentReservation(reserva);\n    setShowCommentModal(true);\n  };\n  const handleNotificarCambios = async reserva => {\n    const translatedRoomType = translateTipoHabitacion(reserva.tipoHabitacion.toString());\n    const templateParams = {\n      to_name: user.primer_nombre,\n      hotel_name: reserva.nombreHotel,\n      room_number: reserva.numeroHabitacion.toString() || \"No especificado\",\n      room_type: reserva.tipoHabitacion,\n      location: `${reserva.ciudad}, ${reserva.pais} - ${reserva.direccion}`,\n      check_in_date: reserva.fechaIngreso,\n      check_out_date: reserva.fechaSalida,\n      total_nights: calculateNights(reserva.fechaIngreso, reserva.fechaSalida).toString(),\n      total_people: reserva.capacidadPersonas.toString(),\n      total_price: `$${reserva.totalReserva.toFixed(2)}`,\n      reservation_status: reserva.estadoReserva,\n      reservation_code: reserva.codigoReserva.toString(),\n      to_email: user.email,\n      comment\n    };\n    try {\n      await emailjs.send('service_db-dw2', 'template_vhblb7c', templateParams, '83TAqc_7hHgnfdESC');\n      console.log('Email successfully sent!');\n    } catch (error) {\n      console.error('Error al enviar notificación de cambio:', error.text);\n    }\n    setShowCommentModal(false); // Cerrar modal\n    setComment(''); // Limpiar comentario\n  };\n  const fetchUserReservations = async reservationId => {\n    try {\n      const response = await fetch(`http://localhost:8080/reservas/historial/${reservationId}`);\n      if (!response.ok) {\n        throw new Error('No se pudo cargar el historial de reservas');\n      }\n      const historialReservas = await response.json();\n      setUserReservations(historialReservas);\n      setShowHistoryModal(true); // Muestra el modal con el historial de reservas\n    } catch (error) {\n      console.error('Error al cargar el historial de reservas:', error);\n    }\n  };\n  useEffect(() => {\n    if (user && user.id) {\n      fetchUserReservations(user.id);\n    }\n  }, [user]);\n  const formatToLocalDateString = dateString => {\n    try {\n      // Intenta parsear la fecha utilizando el constructor Date\n      const date = new Date(dateString);\n      // Verifica si la fecha es válida antes de intentar formatearla\n      if (!isNaN(date)) {\n        return date.toLocaleDateString();\n      }\n    } catch (error) {\n      console.error(\"Error al parsear la fecha:\", error);\n    }\n    // Si la fecha es inválida o no se puede parsear, retorna un valor predeterminado o una cadena vacía\n    return \"Fecha no disponible\";\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"booking-history-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-center\",\n      children: \"Historial de Reservas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this), reservations.length > 0 ? reservations.map(reserva => /*#__PURE__*/_jsxDEV(Card, {\n      className: \"mb-4 shadow\",\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        as: \"h5\",\n        className: \"font-weight-bold\",\n        children: [\"Reserva #\", reserva.codigoReserva, \" - \", reserva.correoElectronico]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          children: reserva.nombreHotel\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Card.Subtitle, {\n          className: \"mb-2 text-muted\",\n          children: [reserva.ciudad, \", \", reserva.pais, \" - \", reserva.direccion]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: [\"Tipo de habitaci\\xF3n: \", reserva.tipoHabitacion]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: [\"N\\xFAmero de habitaci\\xF3n: \", reserva.numeroHabitacion]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: [\"Check-in: \", reserva.fechaIngreso]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: [\"Check-out: \", reserva.fechaSalida]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: [\"N\\xFAmero de noches: \", calculateNights(reserva.fechaIngreso, reserva.fechaSalida)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: [\"Personas: \", reserva.capacidadPersonas]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: [\"Total Reserva: $\", reserva.totalReserva]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: [\"Estado: \", reserva.estadoReserva]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 15\n        }, this), reserva.estadoReserva !== \"Cancelada\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"warning\",\n            onClick: () => handleEdit(reserva),\n            children: \"Editar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"danger\",\n            onClick: () => cancelarReserva(reserva.idReserva),\n            children: \"Cancelar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"info\",\n          onClick: () => downloadReservationPdf(reserva),\n          children: \"Descargar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"warning\",\n          onClick: () => openNotificarCambiosModal(reserva),\n          children: \"Notificar cambios\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: () => fetchUserReservations(reserva.idReserva),\n          children: \"Ver Historial\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 13\n      }, this)]\n    }, reserva.idReserva, true, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-center\",\n      children: \"No se encontraron reservas.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 9\n    }, this), currentReservation && /*#__PURE__*/_jsxDEV(EditReservationPage, {\n      show: showEditModal,\n      handleClose: () => setShowEditModal(false),\n      reserva: currentReservation,\n      actualizarReserva: actualizarReserva\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showCommentModal,\n      onHide: () => setShowCommentModal(false),\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Notificacion de cambios\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Comentario\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"textarea\",\n            rows: \"3\",\n            value: comment,\n            onChange: e => setComment(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: () => setShowCommentModal(false),\n          children: \"Cerrar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: () => handleNotificarCambios(currentReservation),\n          children: \"Enviar Notificaci\\xF3n\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showHistoryModal,\n      onHide: () => setShowHistoryModal(false),\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Historial de Reservas del Usuario\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: userReservations.length > 0 ? /*#__PURE__*/_jsxDEV(Table, {\n          striped: true,\n          bordered: true,\n          hover: true,\n          size: \"sm\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"C\\xF3digo de Reserva\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Check-in\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Check-out\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Estado\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Total Reserva\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: userReservations.map((reservation, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: reservation.codigoReserva\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: formatToLocalDateString(reservation.fechaIngreso)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: formatToLocalDateString(reservation.fechaSalida)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: reservation.estadoReserva\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\"$\", reservation.totalReserva ? reservation.totalReserva.toFixed(2) : \"0.00\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 15\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 13\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 7\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No se encontraron reservas para este usuario.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: () => setShowHistoryModal(false),\n          children: \"Cerrar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 213,\n    columnNumber: 5\n  }, this);\n};\n_s(AdministrarReservas, \"QDejx1GZUlE3armF9iOx9c5NU4M=\", false, function () {\n  return [useUser];\n});\n_c = AdministrarReservas;\nexport default AdministrarReservas;\nvar _c;\n$RefreshReg$(_c, \"AdministrarReservas\");","map":{"version":3,"names":["React","useEffect","useState","Button","Card","Modal","Form","Table","useUser","EditReservationPage","jsPDF","emailjs","jsxDEV","_jsxDEV","Fragment","_Fragment","AdministrarReservas","_s","reservations","setReservations","user","showEditModal","setShowEditModal","currentReservation","setCurrentReservation","editedReservation","setEditedReservation","showCommentModal","setShowCommentModal","comment","setComment","showHistoryModal","setShowHistoryModal","userReservations","setUserReservations","fetchReservations","translateTipoHabitacion","tipoHabitacion","tipoHabitacionMap","calculateNights","checkIn","checkOut","checkInDate","Date","checkOutDate","diffTime","Math","abs","getTime","ceil","handleEdit","reserva","console","log","idReserva","cancelarReserva","response","fetch","method","headers","ok","Error","alert","error","actualizarReserva","reservaActualizada","body","JSON","stringify","status","statusText","downloadReservationPdf","doc","text","setFontSize","reservationDetails","title","data","nombreHotel","numeroHabitacion","toString","ciudad","pais","direccion","fechaIngreso","fechaSalida","capacidadPersonas","totalReserva","estadoReserva","codigoReserva","autoTable","head","map","item","startY","save","openNotificarCambiosModal","handleNotificarCambios","translatedRoomType","templateParams","to_name","primer_nombre","hotel_name","room_number","room_type","location","check_in_date","check_out_date","total_nights","total_people","total_price","toFixed","reservation_status","reservation_code","to_email","email","send","fetchUserReservations","reservationId","historialReservas","json","id","formatToLocalDateString","dateString","date","isNaN","toLocaleDateString","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","Header","as","correoElectronico","Body","Title","Subtitle","Text","variant","onClick","show","handleClose","onHide","closeButton","Group","Label","Control","rows","value","onChange","e","target","Footer","striped","bordered","hover","size","reservation","index","_c","$RefreshReg$"],"sources":["/home/pmorales/Downloads/Proyecto-B2B/Hotel/frontend/sistema_hoteles/src/components/AdministrarReservas.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Button, Card, Modal, Form, Table } from 'react-bootstrap';\nimport { useUser } from './UserContext';\nimport EditReservationPage from './EditReservationPage';\nimport jsPDF from 'jspdf';\nimport 'jspdf-autotable';\nimport emailjs from 'emailjs-com';\n\n\nconst AdministrarReservas = () => {\n  const [reservations, setReservations] = useState([]);\n  const { user } = useUser();\n  const [showEditModal, setShowEditModal] = useState(false);\n  const [currentReservation, setCurrentReservation] = useState(null);\n  const [editedReservation, setEditedReservation] = useState(null);\n  const [showCommentModal, setShowCommentModal] = useState(false);\n  const [comment, setComment] = useState('');\n  const [showHistoryModal, setShowHistoryModal] = useState(false); // para la vista\n  const [userReservations, setUserReservations] = useState([]);  // para la vista\n  \n\n\n\n  useEffect(() => {\n    if (user) {\n      fetchReservations();\n    }\n  }, [user]);\n\n\n\n  // a numero\n  const translateTipoHabitacion = (tipoHabitacion) => {\n    const tipoHabitacionMap = {\n      1: \"Doble\",\n      2: \"Junior Suite\",\n      3: \"Suite\",\n      4: \"Gran Suite\",\n    };\n    return tipoHabitacionMap[tipoHabitacion] || \"Unknown\";\n  };\n\n  const calculateNights = (checkIn, checkOut) => {\n    const checkInDate = new Date(checkIn);\n    const checkOutDate = new Date(checkOut);\n    const diffTime = Math.abs(checkOutDate.getTime() - checkInDate.getTime());\n    return Math.ceil(diffTime / (1000 * 3600 * 24));\n  };\n\n  const handleEdit = (reserva) => {\n    console.log('Opening edit modal for reservation:', reserva.idReserva);\n    setCurrentReservation(reserva);\n    setShowEditModal(true);\n  };\n  \n\n  const cancelarReserva = async (idReserva) => {\n    try {\n      const response = await fetch(`http://localhost:8080/reservas/${idReserva}/cancelar`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n      if (!response.ok) {\n        throw new Error('No se pudo cancelar la reserva');\n      }\n      alert('Reserva cancelada con éxito');\n      fetchReservations(); //error tipográfico.\n    } catch (error) {\n      console.error('Error al cancelar la reserva:', error);\n      alert('Error al cancelar la reserva');\n    }\n  };\n\n  const actualizarReserva = async (reservaActualizada) => {\n    console.log('Updating reservation with:', reservaActualizada);\n    try {\n      const response = await fetch(`http://localhost:8080/reservas/${reservaActualizada.idReserva}`, {\n        method: 'PUT',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(reservaActualizada),\n      });\n  \n      if (!response.ok) {\n        if (response.status === 409) {\n          // Conflicto , notifica al usuario\n          alert(\"Habitación no disponible.\");\n        } else {\n          // Otro tipo de error HTTP\n          throw new Error(`Reservation update failed: ${response.statusText}`);\n        }\n      } else {\n        console.log('Reservation updated successfully');\n        setShowEditModal(false);\n        await fetchReservations(); // Refresca lalista de reservaciones\n      }\n    } catch (error) {\n      console.error('Error updating reservation:', error);\n      alert(\"Ocurrió un error al actualizar la reserva. Por favor, intenta de nuevo.\");\n    }\n  };\n  \n\n\n  const downloadReservationPdf = (reserva) => {\n    const doc = new jsPDF();\n    doc.text(\"Detalle de Reserva\", 14, 16);\n    doc.setFontSize(10);\n\n    // Información de la reserva\n    const reservationDetails = [\n      { title: \"Hotel\", data: reserva.nombreHotel },\n      { title: \"Número de habitación\", data: reserva.numeroHabitacion.toString() }, \n      { title: \"Tipo de habitación\", data: reserva.tipoHabitacion },\n      { title: \"Ubicación\", data: `${reserva.ciudad}, ${reserva.pais} - ${reserva.direccion}` },\n      { title: \"Check-in\", data: reserva.fechaIngreso },\n      { title: \"Check-out\", data: reserva.fechaSalida },\n      { title: \"Número de noches\", data: calculateNights(reserva.fechaIngreso, reserva.fechaSalida).toString() },\n      { title: \"Personas\", data: reserva.capacidadPersonas.toString() },\n      { title: \"Total Reserva\", data: `$${reserva.totalReserva}` },\n      { title: \"Estado\", data: reserva.estadoReserva },\n      { title: \"Código de reserva\", data: reserva.codigoReserva },\n    ];\n\n    doc.autoTable({\n      head: [[\"Detalle\", \"Información\"]],\n      body: reservationDetails.map((item) => [item.title, item.data]),\n      startY: 20,\n    });\n\n    doc.save(`Reserva_${reserva.codigoReserva}.pdf`);\n  };\n  \n\n  const openNotificarCambiosModal = (reserva) => {\n    setCurrentReservation(reserva);\n    setShowCommentModal(true);\n  };\n\n\n  \n\n  const handleNotificarCambios = async (reserva) => {\n    const translatedRoomType = translateTipoHabitacion(reserva.tipoHabitacion.toString());\n\n    const templateParams = {\n      to_name: user.primer_nombre,\n      hotel_name: reserva.nombreHotel,\n      room_number: reserva.numeroHabitacion.toString() || \"No especificado\", \n      room_type: reserva.tipoHabitacion, \n      location: `${reserva.ciudad}, ${reserva.pais} - ${reserva.direccion}`,\n      check_in_date: reserva.fechaIngreso,\n      check_out_date: reserva.fechaSalida,\n      total_nights: calculateNights(reserva.fechaIngreso, reserva.fechaSalida).toString(),\n      total_people: reserva.capacidadPersonas.toString(),\n      total_price: `$${reserva.totalReserva.toFixed(2)}`,\n      reservation_status: reserva.estadoReserva,\n      reservation_code: reserva.codigoReserva.toString(), \n      to_email: user.email, \n      comment, \n    };\n\n    try {\n      await emailjs.send('service_db-dw2', 'template_vhblb7c', templateParams, '83TAqc_7hHgnfdESC');\n      console.log('Email successfully sent!');\n    } catch (error) {\n      console.error('Error al enviar notificación de cambio:', error.text);\n    }\n\n    setShowCommentModal(false); // Cerrar modal\n    setComment(''); // Limpiar comentario\n  };\n\n\nconst fetchUserReservations = async (reservationId) => {\n  try {\n    const response = await fetch(`http://localhost:8080/reservas/historial/${reservationId}`);\n    if (!response.ok) {\n      throw new Error('No se pudo cargar el historial de reservas');\n    }\n    const historialReservas = await response.json();\n    setUserReservations(historialReservas);\n    setShowHistoryModal(true);  // Muestra el modal con el historial de reservas\n  } catch (error) {\n    console.error('Error al cargar el historial de reservas:', error);\n  }\n};\n  useEffect(() => {\n    if (user && user.id) {\n      fetchUserReservations(user.id);\n    }\n  }, [user]); \n  \n  \n  const formatToLocalDateString = (dateString) => {\n    try {\n      // Intenta parsear la fecha utilizando el constructor Date\n      const date = new Date(dateString);\n      // Verifica si la fecha es válida antes de intentar formatearla\n      if (!isNaN(date)) {\n        return date.toLocaleDateString();\n      }\n    } catch (error) {\n      console.error(\"Error al parsear la fecha:\", error);\n    }\n    // Si la fecha es inválida o no se puede parsear, retorna un valor predeterminado o una cadena vacía\n    return \"Fecha no disponible\";\n  };\n\n\n  return (\n    <div className=\"booking-history-container\">\n      <h2 className=\"text-center\">Historial de Reservas</h2>\n      {reservations.length > 0 ? (\n        reservations.map((reserva) => (\n          <Card key={reserva.idReserva} className=\"mb-4 shadow\">\n            <Card.Header as=\"h5\" className=\"font-weight-bold\">\n              Reserva #{reserva.codigoReserva} - {reserva.correoElectronico}\n            </Card.Header>\n            <Card.Body>\n              <Card.Title>{reserva.nombreHotel}</Card.Title>\n              <Card.Subtitle className=\"mb-2 text-muted\">\n                {reserva.ciudad}, {reserva.pais} - {reserva.direccion}\n              </Card.Subtitle>\n              <Card.Text>Tipo de habitación: {reserva.tipoHabitacion}</Card.Text>\n              <Card.Text>Número de habitación: {reserva.numeroHabitacion}</Card.Text>\n              <Card.Text>Check-in: {reserva.fechaIngreso}</Card.Text>\n              <Card.Text>Check-out: {reserva.fechaSalida}</Card.Text>\n              <Card.Text>Número de noches: {calculateNights(reserva.fechaIngreso, reserva.fechaSalida)}</Card.Text>\n              <Card.Text>Personas: {reserva.capacidadPersonas}</Card.Text>\n              <Card.Text>Total Reserva: ${reserva.totalReserva}</Card.Text>\n              <Card.Text>Estado: {reserva.estadoReserva}</Card.Text>\n              {reserva.estadoReserva !== \"Cancelada\" && (\n                <>\n                  <Button variant=\"warning\" onClick={() => handleEdit(reserva)}>Editar</Button>\n                  <Button variant=\"danger\" onClick={() => cancelarReserva(reserva.idReserva)}>Cancelar</Button>\n                </>\n              )}\n              <Button variant=\"info\" onClick={() => downloadReservationPdf(reserva)}>Descargar</Button>\n              <Button variant=\"warning\" onClick={() => openNotificarCambiosModal(reserva)}>Notificar cambios</Button>\n              <Button variant=\"secondary\" onClick={() => fetchUserReservations(reserva.idReserva)}>Ver Historial</Button>\n\n\n            </Card.Body>\n          </Card>\n        \n        ))\n      ) : (\n        <p className=\"text-center\">No se encontraron reservas.</p>\n      )}\n      {currentReservation && (\n        <EditReservationPage\n          show={showEditModal}\n          handleClose={() => setShowEditModal(false)}\n          reserva={currentReservation}\n          actualizarReserva={actualizarReserva}\n        />\n        \n      )}\n            {/* Modal para el comentario */}\n            <Modal show={showCommentModal} onHide={() => setShowCommentModal(false)}>\n  <Modal.Header closeButton>\n    <Modal.Title>Notificacion de cambios</Modal.Title>\n  </Modal.Header>\n  <Modal.Body>\n    <Form.Group>\n      <Form.Label>Comentario</Form.Label>\n      <Form.Control as=\"textarea\" rows=\"3\" value={comment} onChange={(e) => setComment(e.target.value)} />\n    </Form.Group>\n  </Modal.Body>\n  <Modal.Footer>\n    <Button variant=\"secondary\" onClick={() => setShowCommentModal(false)}>Cerrar</Button>\n    <Button variant=\"primary\" onClick={() => handleNotificarCambios(currentReservation)}>Enviar Notificación</Button>\n  </Modal.Footer>\n</Modal>\n\n\n<Modal show={showHistoryModal} onHide={() => setShowHistoryModal(false)}>\n  <Modal.Header closeButton>\n    <Modal.Title>Historial de Reservas del Usuario</Modal.Title>\n  </Modal.Header>\n  <Modal.Body>\n    {userReservations.length > 0 ? (\n      <Table striped bordered hover size=\"sm\">\n        <thead>\n          <tr>\n            <th>Código de Reserva</th>\n            <th>Check-in</th>\n            <th>Check-out</th>\n            <th>Estado</th>\n            <th>Total Reserva</th>\n          </tr>\n        </thead>\n        <tbody>\n          {userReservations.map((reservation, index) => (\n            <tr key={index}>\n              <td>{reservation.codigoReserva}</td>\n              <td>{formatToLocalDateString(reservation.fechaIngreso)}</td>\n              <td>{formatToLocalDateString(reservation.fechaSalida)}</td>\n              <td>{reservation.estadoReserva}</td>\n              <td>${reservation.totalReserva ? reservation.totalReserva.toFixed(2) : \"0.00\"}</td>\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n    ) : (\n      <p>No se encontraron reservas para este usuario.</p>\n    )}\n  </Modal.Body>\n  <Modal.Footer>\n    <Button variant=\"secondary\" onClick={() => setShowHistoryModal(false)}>\n      Cerrar\n    </Button>\n  </Modal.Footer>\n</Modal>\n\n\n\n\n\n    </div>\n  );\n};\n\nexport default AdministrarReservas;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}