{"ast":null,"code":"var _jsxFileName = \"/home/pmorales/Downloads/Proyecto-B2B/Hotel/frontend/sistema_hoteles/src/components/HomePage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Card, Button, Form, Alert, Image, Carousel } from 'react-bootstrap';\nimport { useNavigate } from 'react-router-dom';\nimport Comentarios from './Comentarios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomePage = () => {\n  _s();\n  const [hotels, setHotels] = useState([]);\n  const [paises, setPaises] = useState([]);\n  const [paisSeleccionado, setPaisSeleccionado] = useState('');\n  const [fechaIngreso, setFechaIngreso] = useState('');\n  const [fechaSalida, setFechaSalida] = useState('');\n  const [numeroPersonas, setNumeroPersonas] = useState('');\n  const [habitaciones, setHabitaciones] = useState([]);\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  const [hotelImages, setHotelImages] = useState({});\n  const [roomTypes, setRoomTypes] = useState({});\n  const tiposHabitacion = {\n    1: 'Doble',\n    2: 'Junior Suite',\n    3: 'Suite',\n    4: 'Gran Suite'\n  };\n  useEffect(() => {\n    fetchRoomTypes();\n    fetchPaises();\n    fetchHotelsAndRooms();\n  }, []);\n  const fetchHotelImages = async idHotel => {\n    try {\n      const response = await fetch(`http://localhost:8080/hoteles/${idHotel}/imagenes`);\n      if (!response.ok) throw new Error('Error al cargar imágenes del hotel');\n      const images = await response.json();\n      setHotelImages(prevImages => ({\n        ...prevImages,\n        [idHotel]: images\n      }));\n    } catch (error) {\n      console.error('Error fetching hotel images:', error);\n    }\n  };\n  useEffect(() => {\n    hotels.forEach(hotel => {\n      fetchHotelImages(hotel.id_hotel);\n    });\n  }, [hotels]);\n  const fetchRoomTypes = async () => {\n    try {\n      const response = await fetch('http://localhost:8080/tipos_habitacion');\n      if (!response.ok) throw new Error('Error al cargar los tipos de habitación');\n      const data = await response.json();\n      setRoomTypes(data);\n    } catch (error) {\n      setError('Error al cargar los tipos de habitación: ' + error.message);\n    }\n  };\n  const fetchPaises = async () => {\n    try {\n      const response = await fetch('http://localhost:8080/hoteles/pais');\n      if (!response.ok) throw new Error('Error al cargar los países');\n      const data = await response.json();\n      setPaises(data);\n    } catch (error) {\n      setError('Error al cargar los países: ' + error.message);\n    }\n  };\n  const fetchHotelsAndRooms = async () => {\n    let url = paisSeleccionado ? `http://localhost:8080/hoteles/por-pais/${paisSeleccionado}` : `http://localhost:8080/hoteles`;\n    try {\n      const hotelsResponse = await fetch(url);\n      if (!hotelsResponse.ok) throw new Error('Error al cargar hoteles');\n      const hotelsData = await hotelsResponse.json();\n      setHotels(hotelsData);\n    } catch (error) {\n      setError('Error al cargar hoteles: ' + error.message);\n    }\n  };\n  const fetchHabitaciones = async e => {\n    e.preventDefault();\n    if (!fechaIngreso || !fechaSalida) {\n      setError('La fecha de ingreso y la fecha de salida son obligatorias.');\n      return;\n    }\n    let url = `http://localhost:8080/habitaciones/buscar?fechaIngreso=${fechaIngreso}&fechaSalida=${fechaSalida}`;\n    if (paisSeleccionado) url += `&pais=${paisSeleccionado}`;\n    if (numeroPersonas) url += `&numeroPersonas=${numeroPersonas}`;\n    try {\n      const response = await fetch(url);\n      const data = await response.json();\n      setHabitaciones(data);\n    } catch (error) {\n      setError('Error al buscar habitaciones disponibles: ' + error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"my-5\",\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        md: 12,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Buscar Habitaciones Disponibles\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 9\n        }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"danger\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: fetchHabitaciones,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"pais\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Pa\\xEDs\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"select\",\n              value: paisSeleccionado,\n              onChange: e => setPaisSeleccionado(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Seleccione un pa\\xEDs\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 15\n              }, this), paises.map((pais, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: pais,\n                children: pais\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 17\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"fechaIngreso\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Fecha de Ingreso\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"date\",\n              required: true,\n              value: fechaIngreso,\n              onChange: e => setFechaIngreso(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"fechaSalida\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Fecha de Salida\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"date\",\n              required: true,\n              value: fechaSalida,\n              onChange: e => setFechaSalida(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"numeroPersonas\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"N\\xFAmero de Personas\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"select\",\n              value: numeroPersonas,\n              onChange: e => setNumeroPersonas(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Cualquiera\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 15\n              }, this), [...Array(10).keys()].map(n => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: n + 1,\n                children: n + 1\n              }, n + 1, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 17\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            type: \"submit\",\n            children: \"Buscar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [hotels.length > 0 ? hotels.map(hotel => /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: 10,\n          className: \"mt-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Hotel: \", hotel.nombre]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [hotel.ciudad, \", \", hotel.pais]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Direcci\\xF3n: \", hotel.direccion]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 15\n          }, this), hotelImages[hotel.id_hotel] && hotelImages[hotel.id_hotel].length > 0 && /*#__PURE__*/_jsxDEV(Carousel, {\n            interval: null,\n            children: hotelImages[hotel.id_hotel].map((image, index) => /*#__PURE__*/_jsxDEV(Carousel.Item, {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"d-block w-100\",\n                src: image,\n                alt: `Imagen del hotel ${hotel.nombre}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 23\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }, this), hotel.rooms && hotel.rooms.map(room => /*#__PURE__*/_jsxDEV(Col, {\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n              variant: \"top\",\n              src: room.imagenUrl\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                children: [\"Habitaci\\xF3n: \", tiposHabitacion[room.tipo_habitacion]]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: [\"N\\xFAmero de habitaci\\xF3n: \", room.numero_habitacion]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: [\"Capacidad m\\xE1xima: \", room.capacidad_personas, \" personas\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: [\"Precio por noche: $\", room.precioxnoche]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: [\"Valoraci\\xF3n: \", room.valuacion, \" estrellas\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"primary\",\n                onClick: () => navigate('/checkout', {\n                  state: {\n                    hotelDetails: {\n                      ...hotel\n                    },\n                    roomDetails: {\n                      ...room,\n                      idHabitacion: room.id_habitacion,\n                      roomType: tiposHabitacion[room.tipo_habitacion],\n                      roomPrice: room.precioxnoche,\n                      capacidadPersonas: room.capacidad_personas\n                    }\n                  }\n                }),\n                children: \"Reservar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Comentarios, {\n                idHabitacion: room.id_habitacion\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 17\n          }, this)\n        }, room.id_habitacion, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 15\n        }, this))]\n      }, hotel.id_hotel, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, this)) : /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-4\",\n          children: \"No se encontraron hoteles. Por favor, intenta nuevamente con diferentes criterios de b\\xFAsqueda.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this), habitaciones.length > 0 ? habitaciones.map(habitacion => /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: 6,\n          className: \"mt-4\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n              variant: \"top\",\n              src: habitacion.imagenUrl\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                children: [\"Habitaci\\xF3n: \", tiposHabitacion[habitacion.tipo_habitacion]]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: [\"N\\xFAmero de habitaci\\xF3n: \", habitacion.numero_habitacion]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: [\"Capacidad m\\xE1xima: \", habitacion.capacidad_personas, \" personas\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: [\"Precio por noche: $\", habitacion.precioxnoche]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: [\"Valoraci\\xF3n: \", habitacion.valuacion, \" estrellas\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"primary\",\n                onClick: () => navigate('/checkout', {\n                  state: {\n                    roomDetails: {\n                      ...habitacion,\n                      idHabitacion: habitacion.id_habitacion,\n                      roomType: tiposHabitacion[habitacion.tipo_habitacion],\n                      roomPrice: habitacion.precioxnoche,\n                      capacidadPersonas: habitacion.capacidad_personas\n                    }\n                  }\n                }),\n                children: \"Reservar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 13\n        }, this)\n      }, habitacion.id_habitacion, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 11\n      }, this)) : /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-4\",\n          children: \"No se encontraron habitaciones disponibles. Intenta nuevamente con diferentes criterios de b\\xFAsqueda.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 3\n  }, this);\n};\n_s(HomePage, \"4plxij2+ME1mDnju2t5iJZ9MRSU=\", false, function () {\n  return [useNavigate];\n});\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","useEffect","Container","Row","Col","Card","Button","Form","Alert","Image","Carousel","useNavigate","Comentarios","jsxDEV","_jsxDEV","HomePage","_s","hotels","setHotels","paises","setPaises","paisSeleccionado","setPaisSeleccionado","fechaIngreso","setFechaIngreso","fechaSalida","setFechaSalida","numeroPersonas","setNumeroPersonas","habitaciones","setHabitaciones","error","setError","navigate","hotelImages","setHotelImages","roomTypes","setRoomTypes","tiposHabitacion","fetchRoomTypes","fetchPaises","fetchHotelsAndRooms","fetchHotelImages","idHotel","response","fetch","ok","Error","images","json","prevImages","console","forEach","hotel","id_hotel","data","message","url","hotelsResponse","hotelsData","fetchHabitaciones","e","preventDefault","className","children","md","fileName","_jsxFileName","lineNumber","columnNumber","variant","onSubmit","Group","controlId","Label","Control","as","value","onChange","target","map","pais","index","type","required","Array","keys","n","length","Fragment","nombre","ciudad","direccion","interval","image","Item","src","alt","rooms","room","Img","imagenUrl","Body","Title","tipo_habitacion","Text","numero_habitacion","capacidad_personas","precioxnoche","valuacion","onClick","state","hotelDetails","roomDetails","idHabitacion","id_habitacion","roomType","roomPrice","capacidadPersonas","habitacion","_c","$RefreshReg$"],"sources":["/home/pmorales/Downloads/Proyecto-B2B/Hotel/frontend/sistema_hoteles/src/components/HomePage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Card, Button, Form, Alert, Image, Carousel } from 'react-bootstrap';\nimport { useNavigate } from 'react-router-dom';\nimport Comentarios from './Comentarios';\n\nconst HomePage = () => {\n  const [hotels, setHotels] = useState([]);\n  const [paises, setPaises] = useState([]);\n  const [paisSeleccionado, setPaisSeleccionado] = useState('');\n  const [fechaIngreso, setFechaIngreso] = useState('');\n  const [fechaSalida, setFechaSalida] = useState('');\n  const [numeroPersonas, setNumeroPersonas] = useState('');\n  const [habitaciones, setHabitaciones] = useState([]);\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  const [hotelImages, setHotelImages] = useState({});\n  const [roomTypes, setRoomTypes] = useState({});\n\n  const tiposHabitacion = {\n    1: 'Doble',\n    2: 'Junior Suite',\n    3: 'Suite',\n    4: 'Gran Suite'\n  };\n\n  useEffect(() => {\n    fetchRoomTypes();\n    fetchPaises();\n    fetchHotelsAndRooms();\n  }, []);\n\n  const fetchHotelImages = async (idHotel) => {\n    try {\n      const response = await fetch(`http://localhost:8080/hoteles/${idHotel}/imagenes`);\n      if (!response.ok) throw new Error('Error al cargar imágenes del hotel');\n      const images = await response.json();\n      setHotelImages(prevImages => ({ ...prevImages, [idHotel]: images }));\n    } catch (error) {\n      console.error('Error fetching hotel images:', error);\n    }\n  };\n\n  useEffect(() => {\n    hotels.forEach((hotel) => {\n      fetchHotelImages(hotel.id_hotel);\n    });\n  }, [hotels]);\n\n  const fetchRoomTypes = async () => {\n    try {\n      const response = await fetch('http://localhost:8080/tipos_habitacion');\n      if (!response.ok) throw new Error('Error al cargar los tipos de habitación');\n      const data = await response.json();\n      setRoomTypes(data);\n    } catch (error) {\n      setError('Error al cargar los tipos de habitación: ' + error.message);\n    }\n  };\n\n  const fetchPaises = async () => {\n    try {\n      const response = await fetch('http://localhost:8080/hoteles/pais');\n      if (!response.ok) throw new Error('Error al cargar los países');\n      const data = await response.json();\n      setPaises(data);\n    } catch (error) {\n      setError('Error al cargar los países: ' + error.message);\n    }\n  };\n\n  const fetchHotelsAndRooms = async () => {\n    let url = paisSeleccionado ? `http://localhost:8080/hoteles/por-pais/${paisSeleccionado}` : `http://localhost:8080/hoteles`;\n    try {\n      const hotelsResponse = await fetch(url);\n      if (!hotelsResponse.ok) throw new Error('Error al cargar hoteles');\n      const hotelsData = await hotelsResponse.json();\n      setHotels(hotelsData);\n    } catch (error) {\n      setError('Error al cargar hoteles: ' + error.message);\n    }\n  };\n\n  const fetchHabitaciones = async (e) => {\n    e.preventDefault();\n    if (!fechaIngreso || !fechaSalida) {\n      setError('La fecha de ingreso y la fecha de salida son obligatorias.');\n      return;\n    }\n    let url = `http://localhost:8080/habitaciones/buscar?fechaIngreso=${fechaIngreso}&fechaSalida=${fechaSalida}`;\n    if (paisSeleccionado) url += `&pais=${paisSeleccionado}`;\n    if (numeroPersonas) url += `&numeroPersonas=${numeroPersonas}`;\n    try {\n      const response = await fetch(url);\n      const data = await response.json();\n      setHabitaciones(data);\n    } catch (error) {\n      setError('Error al buscar habitaciones disponibles: ' + error.message);\n    }\n  };\n\n\nreturn (\n  <Container className=\"my-5\">\n    <Row>\n      <Col md={12}>\n        <h2>Buscar Habitaciones Disponibles</h2>\n        {error && <Alert variant=\"danger\">{error}</Alert>}\n        <Form onSubmit={fetchHabitaciones}>\n          <Form.Group controlId=\"pais\">\n            <Form.Label>País</Form.Label>\n            <Form.Control as=\"select\" value={paisSeleccionado} onChange={e => setPaisSeleccionado(e.target.value)}>\n              <option value=\"\">Seleccione un país</option>\n              {paises.map((pais, index) => (\n                <option key={index} value={pais}>{pais}</option>\n              ))}\n            </Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId=\"fechaIngreso\">\n            <Form.Label>Fecha de Ingreso</Form.Label>\n            <Form.Control type=\"date\" required value={fechaIngreso} onChange={e => setFechaIngreso(e.target.value)} />\n          </Form.Group>\n\n          <Form.Group controlId=\"fechaSalida\">\n            <Form.Label>Fecha de Salida</Form.Label>\n            <Form.Control type=\"date\" required value={fechaSalida} onChange={e => setFechaSalida(e.target.value)} />\n          </Form.Group>\n\n          <Form.Group controlId=\"numeroPersonas\">\n            <Form.Label>Número de Personas</Form.Label>\n            <Form.Control as=\"select\" value={numeroPersonas} onChange={e => setNumeroPersonas(e.target.value)}>\n              <option value=\"\">Cualquiera</option>\n              {[...Array(10).keys()].map(n => (\n                <option key={n + 1} value={n + 1}>{n + 1}</option>\n              ))}\n            </Form.Control>\n          </Form.Group>\n\n          <Button variant=\"primary\" type=\"submit\">Buscar</Button>\n        </Form>\n      </Col>\n    </Row>\n    <Row>\n      {hotels.length > 0 ? (\n        hotels.map((hotel) => (\n          <React.Fragment key={hotel.id_hotel}>\n            <Col md={10} className=\"mt-4\">\n              <h3>Hotel: {hotel.nombre}</h3>\n              <p>{hotel.ciudad}, {hotel.pais}</p>\n              <p>Dirección: {hotel.direccion}</p>\n              {hotelImages[hotel.id_hotel] && hotelImages[hotel.id_hotel].length > 0 && (\n                <Carousel interval={null}>\n                  {hotelImages[hotel.id_hotel].map((image, index) => (\n                    <Carousel.Item key={index}>\n                      <img\n                        className=\"d-block w-100\"\n                        src={image}\n                        alt={`Imagen del hotel ${hotel.nombre}`}\n                      />\n                    </Carousel.Item>\n                  ))}\n                </Carousel>\n              )}\n            </Col>\n            {hotel.rooms && hotel.rooms.map((room) => (\n              <Col key={room.id_habitacion} md={6}>\n                <Card className=\"mb-3\">\n                  <Card.Img variant=\"top\" src={room.imagenUrl} />\n                  <Card.Body>\n                    <Card.Title>Habitación: {tiposHabitacion[room.tipo_habitacion]}</Card.Title>\n                    <Card.Text>Número de habitación: {room.numero_habitacion}</Card.Text>\n                    <Card.Text>Capacidad máxima: {room.capacidad_personas} personas</Card.Text>\n                    <Card.Text>Precio por noche: ${room.precioxnoche}</Card.Text>\n                    <Card.Text>Valoración: {room.valuacion} estrellas</Card.Text>\n                    <Button variant=\"primary\" onClick={() => navigate('/checkout', {\n                      state: {\n                        hotelDetails: { ...hotel },\n                        roomDetails: {\n                          ...room,\n                          idHabitacion: room.id_habitacion,\n                          roomType: tiposHabitacion[room.tipo_habitacion],\n                          roomPrice: room.precioxnoche,\n                          capacidadPersonas: room.capacidad_personas\n                        }\n                      }\n                    })}>\n                      Reservar\n                    </Button>\n                    <Comentarios idHabitacion={room.id_habitacion} />\n                  </Card.Body>\n                </Card>\n              </Col>\n            ))}\n          </React.Fragment>\n        ))\n      ) : (\n        <Col>\n          <p className=\"mt-4\">No se encontraron hoteles. Por favor, intenta nuevamente con diferentes criterios de búsqueda.</p>\n        </Col>\n      )}\n      {habitaciones.length > 0 ? (\n        habitaciones.map((habitacion) => (\n          <React.Fragment key={habitacion.id_habitacion}>\n            <Col md={6} className=\"mt-4\">\n              <Card className=\"mb-3\">\n                <Card.Img variant=\"top\" src={habitacion.imagenUrl} />\n                <Card.Body>\n                  <Card.Title>Habitación: {tiposHabitacion[habitacion.tipo_habitacion]}</Card.Title>\n                  <Card.Text>Número de habitación: {habitacion.numero_habitacion}</Card.Text>\n                  <Card.Text>Capacidad máxima: {habitacion.capacidad_personas} personas</Card.Text>\n                  <Card.Text>Precio por noche: ${habitacion.precioxnoche}</Card.Text>\n                  <Card.Text>Valoración: {habitacion.valuacion} estrellas</Card.Text>\n                  <Button variant=\"primary\" onClick={() => navigate('/checkout', {\n                    state: {\n                      roomDetails: {\n                        ...habitacion,\n                        idHabitacion: habitacion.id_habitacion,\n                        roomType: tiposHabitacion[habitacion.tipo_habitacion],\n                        roomPrice: habitacion.precioxnoche,\n                        capacidadPersonas: habitacion.capacidad_personas\n                      }\n                    }\n                  })}>\n                    Reservar\n                  </Button>\n                </Card.Body>\n              </Card>\n            </Col>\n          </React.Fragment>\n        ))\n      ) : (\n        <Col>\n          <p className=\"mt-4\">No se encontraron habitaciones disponibles. Intenta nuevamente con diferentes criterios de búsqueda.</p>\n        </Col>\n      )}\n    </Row>\n  </Container>\n);\n\n};\n\nexport default HomePage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}