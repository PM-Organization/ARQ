{"ast":null,"code":"var _jsxFileName = \"/home/pmorales/Downloads/Proyecto-B2B/Hotel/frontend/sistema_hoteles/src/components/HomePage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Card, Button } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { useNavigate } from 'react-router-dom';\nimport defaultRoomImage from './roomImage.jpg';\nimport HotelSearchForm from './HotelSearchForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomePage = () => {\n  _s();\n  const [hotels, setHotels] = useState([]);\n  const navigate = useNavigate();\n\n  // Objeto para mapear los tipos de habitación\n  const tiposHabitacion = {\n    1: 'Doble',\n    2: 'Junior Suite',\n    3: 'Suite',\n    4: 'Gran Suite'\n  };\n  useEffect(() => {\n    fetchHotelsAndRooms();\n  }, []);\n\n  // En HomePage.jsx\n\n  const fetchHotelsAndRooms = async (country = '') => {\n    try {\n      // Asumiendo que el backend acepta un parámetro de país directamente en el endpoint de listado de hoteles\n      const url = country ? `http://localhost:8080/hoteles?pais=${country}` : 'http://localhost:8080/hoteles';\n      const hotelsResponse = await fetch(url);\n      const hotelsData = await hotelsResponse.json();\n      const hotelsWithRooms = await Promise.all(hotelsData.map(async hotel => {\n        const roomsResponse = await fetch(`http://localhost:8080/habitaciones?hotelId=${hotel.id_hotel}`);\n        const roomsData = await roomsResponse.json();\n        return {\n          ...hotel,\n          rooms: roomsData.filter(room => room.capacidad_personas >= 1)\n        }; // Filtra por capacidad si es necesario\n      }));\n      setHotels(hotelsWithRooms);\n    } catch (error) {\n      console.error('Error fetching hotels and rooms:', error);\n    }\n  };\n  const handleSearch = selectedCountry => {\n    fetchHotelsAndRooms(selectedCountry);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"my-5\",\n    children: [/*#__PURE__*/_jsxDEV(HotelSearchForm, {\n      onSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), hotels.map(hotel => /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 12,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Hotel: \", hotel.nombre]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [hotel.ciudad, \", \", hotel.pais]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Direcci\\xF3n: \", hotel.direccion]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), hotel.rooms.map(room => /*#__PURE__*/_jsxDEV(Col, {\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: [\"Habitaci\\xF3n: \", tiposHabitacion[room.tipo_habitacion]]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [\"N\\xFAmero de habitaci\\xF3n: \", room.numero_habitacion]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [\"Capacidad m\\xE1xima: \", room.capacidad_personas, \" personas\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [\"Precio por noche: $\", room.precioxnoche]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [\"Valoraci\\xF3n: \", room.valuacion, \" estrellas\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Card.Img, {\n              variant: \"top\",\n              src: defaultRoomImage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              onClick: () => {\n                navigate('/checkout', {\n                  state: {\n                    hotelDetails: {\n                      ...hotel\n                    },\n                    roomDetails: {\n                      ...room,\n                      idHabitacion: room.id_habitacion,\n                      roomType: tiposHabitacion[room.tipo_habitacion],\n                      roomPrice: room.precioxnoche,\n                      capacidadPersonas: room.capacidad_personas\n                    }\n                  }\n                });\n              },\n              children: \"Reservar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }, this)\n      }, room.id_habitacion, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this))]\n    }, hotel.id_hotel, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(HomePage, \"WSPsUYQNEIlVfYp8NpkR4+DNmdI=\", false, function () {\n  return [useNavigate];\n});\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","useEffect","Container","Row","Col","Card","Button","useNavigate","defaultRoomImage","HotelSearchForm","jsxDEV","_jsxDEV","HomePage","_s","hotels","setHotels","navigate","tiposHabitacion","fetchHotelsAndRooms","country","url","hotelsResponse","fetch","hotelsData","json","hotelsWithRooms","Promise","all","map","hotel","roomsResponse","id_hotel","roomsData","rooms","filter","room","capacidad_personas","error","console","handleSearch","selectedCountry","className","children","onSearch","fileName","_jsxFileName","lineNumber","columnNumber","md","nombre","ciudad","pais","direccion","Body","Title","tipo_habitacion","Text","numero_habitacion","precioxnoche","valuacion","Img","variant","src","onClick","state","hotelDetails","roomDetails","idHabitacion","id_habitacion","roomType","roomPrice","capacidadPersonas","_c","$RefreshReg$"],"sources":["/home/pmorales/Downloads/Proyecto-B2B/Hotel/frontend/sistema_hoteles/src/components/HomePage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Card, Button } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { useNavigate } from 'react-router-dom';\nimport defaultRoomImage from './roomImage.jpg';\nimport HotelSearchForm from './HotelSearchForm'; \n\nconst HomePage = () => {\n  const [hotels, setHotels] = useState([]);\n  const navigate = useNavigate();\n\n  // Objeto para mapear los tipos de habitación\n  const tiposHabitacion = {\n    1: 'Doble',\n    2: 'Junior Suite',\n    3: 'Suite',\n    4: 'Gran Suite'\n  };\n\n  useEffect(() => {\n    fetchHotelsAndRooms();\n  }, []);\n\n// En HomePage.jsx\n\nconst fetchHotelsAndRooms = async (country = '') => {\n  try {\n    // Asumiendo que el backend acepta un parámetro de país directamente en el endpoint de listado de hoteles\n    const url = country ? `http://localhost:8080/hoteles?pais=${country}` : 'http://localhost:8080/hoteles';\n    const hotelsResponse = await fetch(url);\n    const hotelsData = await hotelsResponse.json();\n    const hotelsWithRooms = await Promise.all(hotelsData.map(async (hotel) => {\n      const roomsResponse = await fetch(`http://localhost:8080/habitaciones?hotelId=${hotel.id_hotel}`);\n      const roomsData = await roomsResponse.json();\n      return { ...hotel, rooms: roomsData.filter(room => room.capacidad_personas >= 1) }; // Filtra por capacidad si es necesario\n    }));\n    setHotels(hotelsWithRooms);\n  } catch (error) {\n    console.error('Error fetching hotels and rooms:', error);\n  }\n};\n\n\nconst handleSearch = (selectedCountry) => {\n  fetchHotelsAndRooms(selectedCountry);\n};\n\n  return (\n    <Container className=\"my-5\">\n      <HotelSearchForm onSearch={handleSearch} />\n      {hotels.map((hotel) => (\n        <Row key={hotel.id_hotel}>\n          <Col md={12}>\n            <h2>Hotel: {hotel.nombre}</h2>\n            <p>{hotel.ciudad}, {hotel.pais}</p>\n            <p>Dirección: {hotel.direccion}</p>\n          </Col>\n          {hotel.rooms.map((room) => (\n            <Col key={room.id_habitacion} md={4}>\n              <Card className=\"mb-3\">\n                <Card.Body>\n                  <Card.Title>Habitación: {tiposHabitacion[room.tipo_habitacion]}</Card.Title>\n                  <Card.Text>Número de habitación: {room.numero_habitacion}</Card.Text>\n                  <Card.Text>Capacidad máxima: {room.capacidad_personas} personas</Card.Text>\n                  <Card.Text>Precio por noche: ${room.precioxnoche}</Card.Text>\n                  <Card.Text>Valoración: {room.valuacion} estrellas</Card.Text>\n                  <Card.Img variant=\"top\" src={defaultRoomImage} />\n                  <Button variant=\"primary\" onClick={() => {\n                    navigate('/checkout', {\n                      state: {\n                        hotelDetails: { ...hotel },\n                        roomDetails: {\n                          ...room,\n                          idHabitacion: room.id_habitacion,\n                          roomType: tiposHabitacion[room.tipo_habitacion],\n                          roomPrice: room.precioxnoche,\n                          capacidadPersonas: room.capacidad_personas\n                        }\n                      }\n                    });\n                  }}>\n                    Reservar\n                  </Button>\n                </Card.Body>\n              </Card>\n            </Col>\n          ))}\n        </Row>\n      ))}\n    </Container>\n  );\n};\n\nexport default HomePage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}