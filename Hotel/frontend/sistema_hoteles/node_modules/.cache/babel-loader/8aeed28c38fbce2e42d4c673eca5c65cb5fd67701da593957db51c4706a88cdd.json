{"ast":null,"code":"var _jsxFileName = \"/home/pmorales/Downloads/Proyecto-B2B/Hotel/frontend/sistema_hoteles/src/components/HomePage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Card, Button, Form, Alert, Image, Carousel } from 'react-bootstrap';\nimport { useNavigate } from 'react-router-dom';\nimport defaultRoomImage from './roomImage.jpg';\nimport Comentarios from './Comentarios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomePage = () => {\n  _s();\n  const [hotels, setHotels] = useState([]);\n  const [paises, setPaises] = useState([]);\n  const [capacidades, setCapacidades] = useState([]);\n  const [paisSeleccionado, setPaisSeleccionado] = useState('');\n  const [fechaIngreso, setFechaIngreso] = useState('');\n  const [fechaSalida, setFechaSalida] = useState('');\n  const [numeroPersonas, setNumeroPersonas] = useState(1);\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  const [hotelImages, setHotelImages] = useState({});\n  const [roomTypes, setRoomTypes] = useState({});\n\n  // PAL SEGUNDO FILTRO:\n\n  const [priceRange, setPriceRange] = useState({\n    min: 0,\n    max: 1000\n  });\n  const [selectedRoomType, setSelectedRoomType] = useState('');\n  const [selectedRating, setSelectedRating] = useState(0);\n  const applyAdditionalFilters = () => {\n    const filteredHotels = hotels.map(hotel => {\n      const filteredRooms = hotel.rooms.filter(room => {\n        const priceCondition = room.precioxnoche >= priceRange.min && room.precioxnoche <= priceRange.max;\n        const typeCondition = selectedRoomType ? room.tipo_habitacion === selectedRoomType : true;\n        const ratingCondition = room.valuacion >= selectedRating;\n        return priceCondition && typeCondition && ratingCondition;\n      });\n      return {\n        ...hotel,\n        rooms: filteredRooms\n      };\n    }).filter(hotel => hotel.rooms.length > 0);\n    setHotels(filteredHotels);\n  };\n\n  // FIN SEGUNDO FILTRO\n\n  const tiposHabitacion = {\n    1: 'Doble',\n    2: 'Junior Suite',\n    3: 'Suite',\n    4: 'Gran Suite'\n  };\n  useEffect(() => {\n    fetchRoomTypes();\n    fetchPaises();\n    fetchCapacidades();\n    fetchInitialHotelsAndRooms();\n  }, []);\n  const fetchCapacidades = async () => {\n    try {\n      const response = await fetch('http://localhost:8080/habitaciones/capacidades');\n      if (!response.ok) throw new Error('No se pudieron cargar las capacidades de las habitaciones');\n      const capacidadesUnicas = await response.json();\n      setCapacidades(capacidadesUnicas.sort((a, b) => a - b));\n    } catch (error) {\n      console.error('Error al cargar capacidades:', error);\n      setError('Error al cargar las capacidades de las habitaciones.');\n    }\n  };\n\n  //IMAGENES\n\n  const fetchHotelImages = async idHotel => {\n    try {\n      const response = await fetch(`http://localhost:8080/hoteles/${idHotel}/imagenes`);\n      if (!response.ok) throw new Error('Error al cargar imágenes del hotel');\n      const images = await response.json();\n      setHotelImages(prevImages => ({\n        ...prevImages,\n        [idHotel]: images\n      }));\n    } catch (error) {\n      console.error('Error fetching hotel images:', error);\n    }\n  };\n  useEffect(() => {\n    hotels.forEach(hotel => {\n      fetchHotelImages(hotel.id_hotel);\n    });\n  }, [hotels]);\n  const fetchRoomTypes = async () => {\n    try {\n      const response = await fetch('http://localhost:8080/tipos_habitacion');\n      if (!response.ok) throw new Error('Error al cargar los tipos de habitación');\n      const data = await response.json();\n      setRoomTypes(data.reduce((map, roomType) => {\n        map[roomType.id_tipo] = roomType.imagenUrl || defaultRoomImage;\n        return map;\n      }, {}));\n    } catch (error) {\n      setError('Error al cargar los tipos de habitación: ' + error.message);\n    }\n  };\n  const fetchPaises = async () => {\n    try {\n      const response = await fetch('http://localhost:8080/hoteles/pais');\n      if (!response.ok) throw new Error('Error al cargar los países');\n      const data = await response.json();\n      setPaises(data);\n    } catch (error) {\n      setError('Error al cargar los países: ' + error.message);\n    }\n  };\n  const fetchInitialHotelsAndRooms = async () => {\n    try {\n      const hotelsResponse = await fetch('http://localhost:8080/hoteles');\n      if (!hotelsResponse.ok) throw new Error('Error al cargar hoteles');\n      const hotelsData = await hotelsResponse.json();\n      const roomTypesResponse = await fetch('http://localhost:8080/tipos_habitacion');\n      if (!roomTypesResponse.ok) throw new Error('Error al cargar tipos de habitación');\n      const roomTypesData = await roomTypesResponse.json();\n      const roomTypesMap = roomTypesData.reduce((acc, roomType) => {\n        acc[roomType.id_tipo] = roomType.imagenUrl || defaultRoomImage;\n        return acc;\n      }, {});\n      const hotelsWithRooms = await Promise.all(hotelsData.map(async hotel => {\n        const roomsResponse = await fetch(`http://localhost:8080/habitaciones?hotelId=${hotel.id_hotel}`); // Cambiado de hotel.id a hotel.id_hotel\n        if (!roomsResponse.ok) {\n          console.error('Error fetching rooms for hotel', hotel.id_hotel); // Cambiado de hotel.id a hotel.id_hotel\n          return {\n            ...hotel,\n            rooms: []\n          }; // Devuelve el hotel sin modificarlo si hay un error\n        }\n        const roomsData = await roomsResponse.json();\n        const roomsWithImages = roomsData.map(room => ({\n          ...room,\n          imagenUrl: roomTypesMap[room.tipo_habitacion] || defaultRoomImage\n        }));\n        return {\n          ...hotel,\n          rooms: roomsWithImages\n        };\n      }));\n      setHotels(hotelsWithRooms);\n    } catch (error) {\n      console.error('Error loading initial hotels and rooms:', error);\n      setError('Error al cargar hoteles y habitaciones iniciales: ' + error.message);\n    }\n  };\n  const fetchHotelsAndRoomsFiltered = async () => {\n    let queryParams = `?pais=${paisSeleccionado}&fechaIngreso=${fechaIngreso}&fechaSalida=${fechaSalida}&numeroPersonas=${numeroPersonas}`;\n    try {\n      const response = await fetch(`http://localhost:8080/habitaciones/buscar${queryParams}`);\n      if (!response.ok) throw new Error('Error al cargar hoteles y habitaciones filtradas');\n      const filteredRooms = await response.json();\n\n      // Transformamos las habitaciones filtradas en una estructura de hoteles con habitaciones\n      const hotelsMap = {};\n      for (const room of filteredRooms) {\n        if (!hotelsMap[room.id_hotel]) {\n          // Si el hotel no está en el mapa, lo buscamos en los hoteles cargados inicialmente\n          const hotelData = hotels.find(hotel => hotel.id_hotel === room.id_hotel);\n          hotelsMap[room.id_hotel] = {\n            ...hotelData,\n            rooms: []\n          };\n        }\n        hotelsMap[room.id_hotel].rooms.push({\n          ...room,\n          imagenUrl: roomTypes[room.tipo_habitacion] || defaultRoomImage\n        });\n      }\n      setHotels(Object.values(hotelsMap));\n    } catch (error) {\n      setError('Error al cargar hoteles y habitaciones filtradas: ' + error.message);\n    }\n  };\n  const handleSearch = e => {\n    e.preventDefault();\n    fetchHotelsAndRoomsFiltered();\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"my-5\",\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSearch,\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"pais\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Pa\\xEDs\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"select\",\n              value: paisSeleccionado,\n              onChange: e => setPaisSeleccionado(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Seleccione un pa\\xEDs\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 17\n              }, this), paises.map(pais => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: pais,\n                children: pais\n              }, pais, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"fechaIngreso\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Fecha de Ingreso\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"date\",\n              value: fechaIngreso,\n              onChange: e => setFechaIngreso(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"fechaSalida\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Fecha de Salida\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"date\",\n              value: fechaSalida,\n              onChange: e => setFechaSalida(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"capacidadPersonas\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Capacidad de Personas\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"select\",\n              value: numeroPersonas,\n              onChange: e => setNumeroPersonas(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Seleccione capacidad\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 17\n              }, this), capacidades.map((capacidad, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: capacidad,\n                children: [capacidad, \" personas\"]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            type: \"submit\",\n            children: \"Buscar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: hotels.length > 0 ? hotels.map((hotel, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: 10,\n          className: \"mt-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Hotel: \", hotel.nombre]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [hotel.ciudad, \", \", hotel.pais]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Direcci\\xF3n: \", hotel.direccion]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 9\n          }, this), hotelImages[hotel.id_hotel] && hotelImages[hotel.id_hotel].length > 0 && /*#__PURE__*/_jsxDEV(Carousel, {\n            interval: null,\n            children: hotelImages[hotel.id_hotel].map((image, imageIndex) => /*#__PURE__*/_jsxDEV(Carousel.Item, {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"d-block w-100\",\n                src: image,\n                alt: `Imagen ${imageIndex + 1} del hotel ${hotel.nombre}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 17\n              }, this)\n            }, imageIndex, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 15\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 7\n        }, this), hotel.rooms && hotel.rooms.map((room, roomIndex) => /*#__PURE__*/_jsxDEV(Col, {\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n              variant: \"top\",\n              src: room.imagenUrl || defaultRoomImage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                children: [\"Habitaci\\xF3n: \", tiposHabitacion[room.tipo_habitacion]]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: [\"N\\xFAmero de habitaci\\xF3n: \", room.numero_habitacion]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: [\"Capacidad m\\xE1xima: \", room.capacidad_personas, \" personas\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: [\"Precio por noche: $\", room.precioxnoche]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: [\"Valoraci\\xF3n: \", room.valuacion, \" estrellas\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"primary\",\n                onClick: () => navigate('/checkout', {\n                  state: {\n                    hotelDetails: {\n                      ...hotel\n                    },\n                    roomDetails: {\n                      ...room,\n                      idHabitacion: room.id_habitacion,\n                      roomType: tiposHabitacion[room.tipo_habitacion],\n                      roomPrice: room.precioxnoche,\n                      capacidadPersonas: room.capacidad_personas\n                    }\n                  }\n                }),\n                children: \"Reservar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Comentarios, {\n                idHabitacion: room.id_habitacion\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 11\n          }, this)\n        }, `${room.id_habitacion}-${roomIndex}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 9\n        }, this))]\n      }, `${hotel.id_hotel}-${index}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 5\n      }, this)) : /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-4\",\n          children: \"No se encontraron hoteles. Por favor, intenta nuevamente con diferentes criterios de b\\xFAsqueda.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 203,\n    columnNumber: 5\n  }, this);\n};\n_s(HomePage, \"feowjk4JMfPcK7bDQJd1gF9xetA=\", false, function () {\n  return [useNavigate];\n});\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","useEffect","Container","Row","Col","Card","Button","Form","Alert","Image","Carousel","useNavigate","defaultRoomImage","Comentarios","jsxDEV","_jsxDEV","HomePage","_s","hotels","setHotels","paises","setPaises","capacidades","setCapacidades","paisSeleccionado","setPaisSeleccionado","fechaIngreso","setFechaIngreso","fechaSalida","setFechaSalida","numeroPersonas","setNumeroPersonas","error","setError","navigate","hotelImages","setHotelImages","roomTypes","setRoomTypes","priceRange","setPriceRange","min","max","selectedRoomType","setSelectedRoomType","selectedRating","setSelectedRating","applyAdditionalFilters","filteredHotels","map","hotel","filteredRooms","rooms","filter","room","priceCondition","precioxnoche","typeCondition","tipo_habitacion","ratingCondition","valuacion","length","tiposHabitacion","fetchRoomTypes","fetchPaises","fetchCapacidades","fetchInitialHotelsAndRooms","response","fetch","ok","Error","capacidadesUnicas","json","sort","a","b","console","fetchHotelImages","idHotel","images","prevImages","forEach","id_hotel","data","reduce","roomType","id_tipo","imagenUrl","message","hotelsResponse","hotelsData","roomTypesResponse","roomTypesData","roomTypesMap","acc","hotelsWithRooms","Promise","all","roomsResponse","roomsData","roomsWithImages","fetchHotelsAndRoomsFiltered","queryParams","hotelsMap","hotelData","find","push","Object","values","handleSearch","e","preventDefault","className","children","onSubmit","Group","controlId","Label","fileName","_jsxFileName","lineNumber","columnNumber","Control","as","value","onChange","target","pais","type","capacidad","index","variant","Fragment","md","nombre","ciudad","direccion","interval","image","imageIndex","Item","src","alt","roomIndex","Img","Body","Title","Text","numero_habitacion","capacidad_personas","onClick","state","hotelDetails","roomDetails","idHabitacion","id_habitacion","roomPrice","capacidadPersonas","_c","$RefreshReg$"],"sources":["/home/pmorales/Downloads/Proyecto-B2B/Hotel/frontend/sistema_hoteles/src/components/HomePage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Card, Button, Form, Alert, Image, Carousel } from 'react-bootstrap';\nimport { useNavigate } from 'react-router-dom';\nimport defaultRoomImage from './roomImage.jpg';\nimport Comentarios from './Comentarios';\n\nconst HomePage = () => {\n  const [hotels, setHotels] = useState([]);\n  const [paises, setPaises] = useState([]);\n  const [capacidades, setCapacidades] = useState([]);\n  const [paisSeleccionado, setPaisSeleccionado] = useState('');\n  const [fechaIngreso, setFechaIngreso] = useState('');\n  const [fechaSalida, setFechaSalida] = useState('');\n  const [numeroPersonas, setNumeroPersonas] = useState(1);\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  const [hotelImages, setHotelImages] = useState({});\n  const [roomTypes, setRoomTypes] = useState({});\n\n\n// PAL SEGUNDO FILTRO:\n\nconst [priceRange, setPriceRange] = useState({ min: 0, max: 1000 });\nconst [selectedRoomType, setSelectedRoomType] = useState('');\nconst [selectedRating, setSelectedRating] = useState(0);\n\nconst applyAdditionalFilters = () => {\n  const filteredHotels = hotels.map(hotel => {\n    const filteredRooms = hotel.rooms.filter(room => {\n      const priceCondition = room.precioxnoche >= priceRange.min && room.precioxnoche <= priceRange.max;\n      const typeCondition = selectedRoomType ? room.tipo_habitacion === selectedRoomType : true;\n      const ratingCondition = room.valuacion >= selectedRating;\n      return priceCondition && typeCondition && ratingCondition;\n    });\n\n    return { ...hotel, rooms: filteredRooms };\n  }).filter(hotel => hotel.rooms.length > 0);\n\n  setHotels(filteredHotels);\n};\n\n\n// FIN SEGUNDO FILTRO\n\n  const tiposHabitacion = {\n    1: 'Doble',\n    2: 'Junior Suite',\n    3: 'Suite',\n    4: 'Gran Suite'\n  };\n\n\n  useEffect(() => {\n    fetchRoomTypes();\n    fetchPaises();\n    fetchCapacidades();\n    fetchInitialHotelsAndRooms();\n  }, []);\n\n\n\n\n  const fetchCapacidades = async () => {\n    try {\n      const response = await fetch('http://localhost:8080/habitaciones/capacidades');\n      if (!response.ok) throw new Error('No se pudieron cargar las capacidades de las habitaciones');\n      const capacidadesUnicas = await response.json();\n      setCapacidades(capacidadesUnicas.sort((a, b) => a - b));\n    } catch (error) {\n      console.error('Error al cargar capacidades:', error);\n      setError('Error al cargar las capacidades de las habitaciones.');\n    }\n  };\n\n\n\n\n  //IMAGENES\n\n  const fetchHotelImages = async (idHotel) => {\n    try {\n      const response = await fetch(`http://localhost:8080/hoteles/${idHotel}/imagenes`);\n      if (!response.ok) throw new Error('Error al cargar imágenes del hotel');\n      const images = await response.json();\n      setHotelImages(prevImages => ({ ...prevImages, [idHotel]: images }));\n    } catch (error) {\n      console.error('Error fetching hotel images:', error);\n    }\n  };\n\n  useEffect(() => {\n    hotels.forEach((hotel) => {\n      fetchHotelImages(hotel.id_hotel);\n    });\n  }, [hotels]);\n\n  \n\n  const fetchRoomTypes = async () => {\n    try {\n      const response = await fetch('http://localhost:8080/tipos_habitacion');\n      if (!response.ok) throw new Error('Error al cargar los tipos de habitación');\n      const data = await response.json();\n      setRoomTypes(data.reduce((map, roomType) => {\n        map[roomType.id_tipo] = roomType.imagenUrl || defaultRoomImage; \n        return map;\n      }, {}));\n    } catch (error) {\n      setError('Error al cargar los tipos de habitación: ' + error.message);\n    }\n  };\n  \n\n\n\n  const fetchPaises = async () => {\n    try {\n      const response = await fetch('http://localhost:8080/hoteles/pais');\n      if (!response.ok) throw new Error('Error al cargar los países');\n      const data = await response.json();\n      setPaises(data);\n    } catch (error) {\n      setError('Error al cargar los países: ' + error.message);\n    }\n  };\n\n  const fetchInitialHotelsAndRooms = async () => {\n    try {\n      const hotelsResponse = await fetch('http://localhost:8080/hoteles');\n      if (!hotelsResponse.ok) throw new Error('Error al cargar hoteles');\n      const hotelsData = await hotelsResponse.json();\n  \n      const roomTypesResponse = await fetch('http://localhost:8080/tipos_habitacion');\n      if (!roomTypesResponse.ok) throw new Error('Error al cargar tipos de habitación');\n      const roomTypesData = await roomTypesResponse.json();\n  \n      const roomTypesMap = roomTypesData.reduce((acc, roomType) => {\n        acc[roomType.id_tipo] = roomType.imagenUrl || defaultRoomImage;\n        return acc;\n      }, {});\n  \n      const hotelsWithRooms = await Promise.all(hotelsData.map(async (hotel) => {\n        const roomsResponse = await fetch(`http://localhost:8080/habitaciones?hotelId=${hotel.id_hotel}`); // Cambiado de hotel.id a hotel.id_hotel\n        if (!roomsResponse.ok) {\n          console.error('Error fetching rooms for hotel', hotel.id_hotel); // Cambiado de hotel.id a hotel.id_hotel\n          return { ...hotel, rooms: [] }; // Devuelve el hotel sin modificarlo si hay un error\n        }\n        const roomsData = await roomsResponse.json();\n        const roomsWithImages = roomsData.map(room => ({\n          ...room,\n          imagenUrl: roomTypesMap[room.tipo_habitacion] || defaultRoomImage\n        }));\n        return { ...hotel, rooms: roomsWithImages };\n      }));\n  \n      setHotels(hotelsWithRooms);\n    } catch (error) {\n      console.error('Error loading initial hotels and rooms:', error);\n      setError('Error al cargar hoteles y habitaciones iniciales: ' + error.message);\n    }\n  };\n  \n  \n  \n\n  const fetchHotelsAndRoomsFiltered = async () => {\n    let queryParams = `?pais=${paisSeleccionado}&fechaIngreso=${fechaIngreso}&fechaSalida=${fechaSalida}&numeroPersonas=${numeroPersonas}`;\n    try {\n      const response = await fetch(`http://localhost:8080/habitaciones/buscar${queryParams}`);\n      if (!response.ok) throw new Error('Error al cargar hoteles y habitaciones filtradas');\n      const filteredRooms = await response.json();\n  \n      // Transformamos las habitaciones filtradas en una estructura de hoteles con habitaciones\n      const hotelsMap = {};\n      for (const room of filteredRooms) {\n        if (!hotelsMap[room.id_hotel]) {\n          // Si el hotel no está en el mapa, lo buscamos en los hoteles cargados inicialmente\n          const hotelData = hotels.find(hotel => hotel.id_hotel === room.id_hotel);\n          hotelsMap[room.id_hotel] = {\n            ...hotelData,\n            rooms: []\n          };\n        }\n        hotelsMap[room.id_hotel].rooms.push({\n          ...room,\n          imagenUrl: roomTypes[room.tipo_habitacion] || defaultRoomImage\n        });\n      }\n  \n      setHotels(Object.values(hotelsMap));\n    } catch (error) {\n      setError('Error al cargar hoteles y habitaciones filtradas: ' + error.message);\n    }\n  };\n  \n\n  const handleSearch = (e) => {\n    e.preventDefault();\n    fetchHotelsAndRoomsFiltered();\n  };\n\n  return (\n    <Container className=\"my-5\">\n      {/* Filtro de búsqueda */}\n      <Form onSubmit={handleSearch}>\n        <Row className=\"mb-4\">\n          <Col>\n            <Form.Group controlId=\"pais\">\n              <Form.Label>País</Form.Label>\n              <Form.Control as=\"select\" value={paisSeleccionado} onChange={e => setPaisSeleccionado(e.target.value)}>\n                <option value=\"\">Seleccione un país</option>\n                {paises.map(pais => (\n                  <option key={pais} value={pais}>{pais}</option>\n                ))}\n              </Form.Control>\n            </Form.Group>\n          </Col>\n          <Col>\n            <Form.Group controlId=\"fechaIngreso\">\n              <Form.Label>Fecha de Ingreso</Form.Label>\n              <Form.Control type=\"date\" value={fechaIngreso} onChange={e => setFechaIngreso(e.target.value)} />\n            </Form.Group>\n          </Col>\n          <Col>\n            <Form.Group controlId=\"fechaSalida\">\n              <Form.Label>Fecha de Salida</Form.Label>\n              <Form.Control type=\"date\" value={fechaSalida} onChange={e => setFechaSalida(e.target.value)} />\n            </Form.Group>\n          </Col>\n         <Col>\n            <Form.Group controlId=\"capacidadPersonas\">\n              <Form.Label>Capacidad de Personas</Form.Label>\n              <Form.Control as=\"select\" value={numeroPersonas} onChange={e => setNumeroPersonas(e.target.value)}>\n                <option value=\"\">Seleccione capacidad</option>\n                {capacidades.map((capacidad, index) => (\n                  <option key={index} value={capacidad}>{capacidad} personas</option>\n                ))}\n              </Form.Control>\n            </Form.Group>\n          </Col>\n          <Col>\n            <Button variant=\"primary\" type=\"submit\">Buscar</Button>\n          </Col>\n        </Row>\n      </Form>\n\n      <Row>\n      {hotels.length > 0 ? (\n  hotels.map((hotel, index) => (\n    <React.Fragment key={`${hotel.id_hotel}-${index}`}>\n      <Col md={10} className=\"mt-4\">\n        <h3>Hotel: {hotel.nombre}</h3>\n        <p>{hotel.ciudad}, {hotel.pais}</p>\n        <p>Dirección: {hotel.direccion}</p>\n        {hotelImages[hotel.id_hotel] && hotelImages[hotel.id_hotel].length > 0 && (\n          <Carousel interval={null}>\n            {hotelImages[hotel.id_hotel].map((image, imageIndex) => (\n              <Carousel.Item key={imageIndex}>\n                <img\n                  className=\"d-block w-100\"\n                  src={image}\n                  alt={`Imagen ${imageIndex + 1} del hotel ${hotel.nombre}`}\n                />\n              </Carousel.Item>\n            ))}\n          </Carousel>\n        )}\n      </Col>\n      {hotel.rooms && hotel.rooms.map((room, roomIndex) => (\n        <Col key={`${room.id_habitacion}-${roomIndex}`} md={6}>\n          <Card className=\"mb-3\">\n            <Card.Img variant=\"top\" src={room.imagenUrl || defaultRoomImage} />\n            <Card.Body>\n              <Card.Title>Habitación: {tiposHabitacion[room.tipo_habitacion]}</Card.Title>\n              <Card.Text>Número de habitación: {room.numero_habitacion}</Card.Text>\n              <Card.Text>Capacidad máxima: {room.capacidad_personas} personas</Card.Text>\n              <Card.Text>Precio por noche: ${room.precioxnoche}</Card.Text>\n              <Card.Text>Valoración: {room.valuacion} estrellas</Card.Text>\n              <Button variant=\"primary\" onClick={() => navigate('/checkout', {\n                state: {\n                  hotelDetails: { ...hotel },\n                  roomDetails: {\n                    ...room,\n                    idHabitacion: room.id_habitacion,\n                    roomType: tiposHabitacion[room.tipo_habitacion],\n                    roomPrice: room.precioxnoche,\n                    capacidadPersonas: room.capacidad_personas\n                  }\n                }\n              })}>\n                Reservar\n              </Button>\n              <Comentarios idHabitacion={room.id_habitacion} />\n            </Card.Body>\n          </Card>\n        </Col>\n      ))}\n    </React.Fragment>\n  ))\n) : (\n  <Col>\n    <p className=\"mt-4\">No se encontraron hoteles. Por favor, intenta nuevamente con diferentes criterios de búsqueda.</p>\n  </Col>\n)}\n</Row>\n</Container>\n);\n};\n\nexport default HomePage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}