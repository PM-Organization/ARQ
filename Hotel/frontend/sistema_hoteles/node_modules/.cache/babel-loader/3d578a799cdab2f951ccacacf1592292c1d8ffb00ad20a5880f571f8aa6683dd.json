{"ast":null,"code":"var _jsxFileName = \"/home/pmorales/Downloads/Proyecto-B2B/Hotel/frontend/sistema_hoteles/src/components/HotelDetailsPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Card, Button } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { useNavigate } from 'react-router-dom';\nimport defaultRoomImage from './roomImage.jpg'; // Asegúrate de tener esta imagen como fallback\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HotelDetailsPage = () => {\n  _s();\n  const [hotels, setHotels] = useState([]);\n  const navigate = useNavigate();\n\n  // Objeto para mapear los tipos de habitación\n  const tiposHabitacion = {\n    1: 'Doble',\n    2: 'Junior Suite',\n    3: 'Suite',\n    4: 'Gran Suite'\n  };\n  useEffect(() => {\n    const fetchHotelsAndRooms = async () => {\n      try {\n        const hotelsResponse = await fetch(`http://localhost:8080/hoteles`);\n        const hotelsData = await hotelsResponse.json();\n        const roomTypesResponse = await fetch(`http://localhost:8080/tipos_habitacion`);\n        const roomTypesData = await roomTypesResponse.json();\n        const roomTypesMap = roomTypesData.reduce((acc, roomType) => {\n          acc[roomType.id_tipo] = roomType.imagenUrl || defaultRoomImage;\n          return acc;\n        }, {});\n        const hotelsWithRooms = await Promise.all(hotelsData.map(async hotel => {\n          const roomsResponse = await fetch(`http://localhost:8080/habitaciones?hotelId=${hotel.id_hotel}`);\n          const roomsData = await roomsResponse.json();\n          const roomsWithImages = roomsData.map(room => ({\n            ...room,\n            imagenUrl: roomTypesMap[room.tipo_habitacion]\n          }));\n          return {\n            ...hotel,\n            rooms: roomsWithImages\n          };\n        }));\n        setHotels(hotelsWithRooms);\n      } catch (error) {\n        console.error('Error fetching hotels and rooms:', error);\n      }\n    };\n    fetchHotelsAndRooms();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"my-5\",\n    children: hotels.map(hotel => /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: 12,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"Hotel: \", hotel.nombre]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [hotel.ciudad, \", \", hotel.pais]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Direcci\\xF3n: \", hotel.direccion]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: hotel.rooms.map(room => /*#__PURE__*/_jsxDEV(Col, {\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: \"mb-3\",\n            children: /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                children: [\"Habitaci\\xF3n: \", tiposHabitacion[room.tipo_habitacion]]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: [\"N\\xFAmero de habitaci\\xF3n: \", room.numero_habitacion]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: [\"Capacidad m\\xE1xima: \", room.capacidad_personas, \" personas\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: [\"Precio por noche: $\", room.precioxnoche]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: [\"Valoraci\\xF3n: \", room.valuacion, \" estrellas\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Card.Img, {\n                variant: \"top\",\n                src: room.imagenUrl\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"primary\",\n                onClick: () => {\n                  console.log(\"Navigating with hotelDetails:\", hotel);\n                  navigate('/checkout', {\n                    state: {\n                      hotelDetails: {\n                        ...hotel\n                      },\n                      roomDetails: {\n                        ...room,\n                        idHabitacion: room.id_habitacion,\n                        roomType: tiposHabitacion[room.tipo_habitacion],\n                        roomPrice: room.precioxnoche,\n                        capacidadPersonas: room.capacidad_personas\n                      }\n                    }\n                  });\n                },\n                children: \"Reservar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }, this)\n        }, room.id_habitacion, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)]\n    }, hotel.id_hotel, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(HotelDetailsPage, \"WSPsUYQNEIlVfYp8NpkR4+DNmdI=\", false, function () {\n  return [useNavigate];\n});\n_c = HotelDetailsPage;\nexport default HotelDetailsPage;\nvar _c;\n$RefreshReg$(_c, \"HotelDetailsPage\");","map":{"version":3,"names":["React","useState","useEffect","Container","Row","Col","Card","Button","useNavigate","defaultRoomImage","jsxDEV","_jsxDEV","HotelDetailsPage","_s","hotels","setHotels","navigate","tiposHabitacion","fetchHotelsAndRooms","hotelsResponse","fetch","hotelsData","json","roomTypesResponse","roomTypesData","roomTypesMap","reduce","acc","roomType","id_tipo","imagenUrl","hotelsWithRooms","Promise","all","map","hotel","roomsResponse","id_hotel","roomsData","roomsWithImages","room","tipo_habitacion","rooms","error","console","className","children","Fragment","md","nombre","fileName","_jsxFileName","lineNumber","columnNumber","ciudad","pais","direccion","Body","Title","Text","numero_habitacion","capacidad_personas","precioxnoche","valuacion","Img","variant","src","onClick","log","state","hotelDetails","roomDetails","idHabitacion","id_habitacion","roomPrice","capacidadPersonas","_c","$RefreshReg$"],"sources":["/home/pmorales/Downloads/Proyecto-B2B/Hotel/frontend/sistema_hoteles/src/components/HotelDetailsPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Card, Button } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { useNavigate } from 'react-router-dom';\nimport defaultRoomImage from './roomImage.jpg'; // Asegúrate de tener esta imagen como fallback\n\n\nconst HotelDetailsPage = () => {\n  const [hotels, setHotels] = useState([]);\n  const navigate = useNavigate();\n\n  // Objeto para mapear los tipos de habitación\n  const tiposHabitacion = {\n    1: 'Doble',\n    2: 'Junior Suite',\n    3: 'Suite',\n    4: 'Gran Suite'\n  };\n\n  useEffect(() => {\n    const fetchHotelsAndRooms = async () => {\n      try {\n        const hotelsResponse = await fetch(`http://localhost:8080/hoteles`);\n        const hotelsData = await hotelsResponse.json();\n        \n        const roomTypesResponse = await fetch(`http://localhost:8080/tipos_habitacion`);\n        const roomTypesData = await roomTypesResponse.json();\n        const roomTypesMap = roomTypesData.reduce((acc, roomType) => {\n          acc[roomType.id_tipo] = roomType.imagenUrl || defaultRoomImage;\n          return acc;\n        }, {});\n\n        const hotelsWithRooms = await Promise.all(hotelsData.map(async (hotel) => {\n          const roomsResponse = await fetch(`http://localhost:8080/habitaciones?hotelId=${hotel.id_hotel}`);\n          const roomsData = await roomsResponse.json();\n          const roomsWithImages = roomsData.map(room => ({\n            ...room,\n            imagenUrl: roomTypesMap[room.tipo_habitacion]\n          }));\n          return { ...hotel, rooms: roomsWithImages };\n        }));\n\n        setHotels(hotelsWithRooms);\n      } catch (error) {\n        console.error('Error fetching hotels and rooms:', error);\n      }\n    };\n\n    fetchHotelsAndRooms();\n  }, []);\n\n  return (\n    <Container className=\"my-5\">\n      {hotels.map((hotel) => (\n        <React.Fragment key={hotel.id_hotel}>\n          <Row>\n            <Col md={12}>\n              <h2>Hotel: {hotel.nombre}</h2>\n              <p>{hotel.ciudad}, {hotel.pais}</p>\n              <p>Dirección: {hotel.direccion}</p>\n            </Col>\n          </Row>\n          <Row>\n            {hotel.rooms.map((room) => (\n              <Col key={room.id_habitacion} md={4}>\n                <Card className=\"mb-3\">\n                  <Card.Body>\n                    <Card.Title>Habitación: {tiposHabitacion[room.tipo_habitacion]}</Card.Title>\n                    <Card.Text>Número de habitación: {room.numero_habitacion}</Card.Text>\n                    <Card.Text>Capacidad máxima: {room.capacidad_personas} personas</Card.Text>\n                    <Card.Text>Precio por noche: ${room.precioxnoche}</Card.Text>\n                    <Card.Text>Valoración: {room.valuacion} estrellas</Card.Text>\n                    <Card.Img variant=\"top\" src={room.imagenUrl} />\n                    <Button variant=\"primary\" onClick={() => {\n                      console.log(\"Navigating with hotelDetails:\", hotel);\n                      navigate('/checkout', {\n                        state: {\n                          hotelDetails: { ...hotel },\n                          roomDetails: {\n                            ...room,\n                            idHabitacion: room.id_habitacion,\n                            roomType: tiposHabitacion[room.tipo_habitacion],\n                            roomPrice: room.precioxnoche,\n                            capacidadPersonas: room.capacidad_personas\n                          }\n                        }\n                      });\n                    }}>\n                      Reservar\n                    </Button>\n                  </Card.Body>\n                </Card>\n              </Col>\n            ))}\n          </Row>\n        </React.Fragment>\n      ))}\n    </Container>\n  );\n};\n\nexport default HotelDetailsPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}