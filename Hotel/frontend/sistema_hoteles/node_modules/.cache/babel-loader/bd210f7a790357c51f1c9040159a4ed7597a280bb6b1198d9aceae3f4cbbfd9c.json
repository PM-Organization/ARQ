{"ast":null,"code":"var _jsxFileName = \"/home/pmorales/Downloads/Proyecto-B2B/Hotel/frontend/sistema_hoteles/src/components/HotelDetailsPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Card, Button } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { useNavigate } from 'react-router-dom';\nimport defaultRoomImage from './roomImage.jpg'; // Asegúrate de tener esta imagen como fallback\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HotelDetailsPage = () => {\n  _s();\n  const [hotels, setHotels] = useState([]);\n  const [paises, setPaises] = useState([]);\n  const [paisSeleccionado, setPaisSeleccionado] = useState('');\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  const [hotelImages, setHotelImages] = useState({});\n  const [roomTypes, setRoomTypes] = useState({});\n  const tiposHabitacion = {\n    1: 'Doble',\n    2: 'Junior Suite',\n    3: 'Suite',\n    4: 'Gran Suite'\n  };\n  useEffect(() => {\n    fetchRoomTypes();\n    fetchPaises();\n    fetchHotelsAndRooms(paisSeleccionado);\n  }, []);\n  const [filterCapacity, setFilterCapacity] = useState('');\n\n  // Función para filtrar habitaciones por capacidad de personas\n  const filterRoomsByCapacity = capacity => {\n    if (!capacity) return; // Si no se ha proporcionado capacidad, no se hace nada\n\n    // Filtra los hoteles cuyas habitaciones coincidan con la capacidad de personas\n    const filteredHotels = hotels.map(hotel => {\n      const filteredRooms = hotel.rooms.filter(room => room.capacidad_personas === parseInt(capacity));\n      return {\n        ...hotel,\n        rooms: filteredRooms\n      };\n    }).filter(hotel => hotel.rooms.length > 0); // Filtra hoteles sin habitaciones que coincidan\n\n    setHotels(filteredHotels);\n  };\n  const handleFilterRooms = e => {\n    e.preventDefault();\n    filterRoomsByCapacity(filterCapacity);\n  };\n\n  //IMAGENES\n\n  const fetchHotelImages = async idHotel => {\n    try {\n      const response = await fetch(`http://localhost:8080/hoteles/${idHotel}/imagenes`);\n      if (!response.ok) throw new Error('Error al cargar imágenes del hotel');\n      const images = await response.json();\n      setHotelImages(prevImages => ({\n        ...prevImages,\n        [idHotel]: images\n      }));\n    } catch (error) {\n      console.error('Error fetching hotel images:', error);\n    }\n  };\n  useEffect(() => {\n    hotels.forEach(hotel => {\n      fetchHotelImages(hotel.id_hotel);\n    });\n  }, [hotels]);\n  const fetchRoomTypes = async () => {\n    try {\n      const response = await fetch('http://localhost:8080/tipos_habitacion');\n      if (!response.ok) throw new Error('Error al cargar los tipos de habitación');\n      const data = await response.json();\n      setRoomTypes(data.reduce((map, roomType) => {\n        map[roomType.id_tipo] = roomType.imagenUrl || defaultRoomImage;\n        return map;\n      }, {}));\n    } catch (error) {\n      setError('Error al cargar los tipos de habitación: ' + error.message);\n    }\n  };\n  const fetchPaises = async () => {\n    try {\n      const response = await fetch('http://localhost:8080/hoteles/pais');\n      if (!response.ok) throw new Error('Error al cargar los países');\n      const data = await response.json();\n      setPaises(data);\n    } catch (error) {\n      setError('Error al cargar los países: ' + error.message);\n    }\n  };\n  const fetchHotelsAndRooms = async (pais = '') => {\n    let url = pais ? `http://localhost:8080/hoteles/por-pais/${pais}` : `http://localhost:8080/hoteles`;\n    try {\n      const hotelsResponse = await fetch(url);\n      if (!hotelsResponse.ok) throw new Error('Error al cargar hoteles');\n      const hotelsData = await hotelsResponse.json();\n      const roomTypesResponse = await fetch('http://localhost:8080/tipos_habitacion');\n      const roomTypesData = await roomTypesResponse.json();\n      const roomTypesMap = roomTypesData.reduce((acc, roomType) => {\n        acc[roomType.id_tipo] = roomType.imagenUrl || defaultRoomImage;\n        return acc;\n      }, {});\n      const hotelsWithRooms = await Promise.all(hotelsData.map(async hotel => {\n        const roomsResponse = await fetch(`http://localhost:8080/habitaciones?hotelId=${hotel.id_hotel}`);\n        const roomsData = await roomsResponse.json();\n        const roomsWithImages = roomsData.map(room => ({\n          ...room,\n          imagenUrl: roomTypesMap[room.tipo_habitacion]\n        }));\n        return {\n          ...hotel,\n          rooms: roomsWithImages\n        };\n      }));\n      setHotels(hotelsWithRooms);\n    } catch (error) {\n      setError('Error al cargar hoteles y habitaciones: ' + error.message);\n    }\n  };\n  const handleSearch = e => {\n    e.preventDefault();\n    fetchHotelsAndRooms(paisSeleccionado);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"my-5\",\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        md: 12,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Buscar Hoteles Disponibles\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"danger\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleSearch,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"pais\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Pa\\xEDs\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"select\",\n              value: paisSeleccionado,\n              onChange: e => setPaisSeleccionado(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Seleccione un pa\\xEDs\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 17\n              }, this), paises.map((pais, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: pais,\n                children: pais\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"capacidadPersonas\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Capacidad de Personas en Habitaci\\xF3n\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"number\",\n              placeholder: \"Ingrese la capacidad de personas\",\n              value: filterCapacity,\n              onChange: e => setFilterCapacity(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            type: \"submit\",\n            children: \"Buscar Hoteles\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            type: \"button\",\n            onClick: handleFilterRooms,\n            className: \"ml-2\",\n            children: \"Filtrar Habitaciones\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: hotels.length > 0 ? hotels.map(hotel => /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: 10,\n          className: \"mt-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Hotel: \", hotel.nombre]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [hotel.ciudad, \", \", hotel.pais]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Direcci\\xF3n: \", hotel.direccion]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 9\n          }, this), hotelImages[hotel.id_hotel] && hotelImages[hotel.id_hotel].length > 0 && /*#__PURE__*/_jsxDEV(Carousel, {\n            interval: null,\n            children: hotelImages[hotel.id_hotel].map((image, index) => /*#__PURE__*/_jsxDEV(Carousel.Item, {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"d-block w-100\",\n                src: image,\n                alt: `Imagen ${index + 1} del hotel ${hotel.nombre}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 17\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 15\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 7\n        }, this), hotel.rooms && hotel.rooms.map(room => /*#__PURE__*/_jsxDEV(Col, {\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n              variant: \"top\",\n              src: room.imagenUrl || defaultRoomImage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                children: [\"Habitaci\\xF3n: \", tiposHabitacion[room.tipo_habitacion]]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: [\"N\\xFAmero de habitaci\\xF3n: \", room.numero_habitacion]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: [\"Capacidad m\\xE1xima: \", room.capacidad_personas, \" personas\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: [\"Precio por noche: $\", room.precioxnoche]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: [\"Valoraci\\xF3n: \", room.valuacion, \" estrellas\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"primary\",\n                onClick: () => {\n                  console.log(\"Navigating with hotelDetails:\", hotel);\n                  navigate('/checkout', {\n                    state: {\n                      hotelDetails: {\n                        ...hotel\n                      },\n                      roomDetails: {\n                        ...room,\n                        idHabitacion: room.id_habitacion,\n                        roomType: tiposHabitacion[room.tipo_habitacion],\n                        roomPrice: room.precioxnoche,\n                        capacidadPersonas: room.capacidad_personas\n                      }\n                    }\n                  });\n                },\n                children: \"Reservar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Comentarios, {\n                idHabitacion: room.id_habitacion\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 19\n          }, this)\n        }, room.id_habitacion, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 17\n        }, this))]\n      }, hotel.id_hotel, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 5\n      }, this)) : /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-4\",\n          children: \"No se encontraron hoteles. Por favor, intenta nuevamente con diferentes criterios de b\\xFAsqueda.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 5\n  }, this);\n};\n_s(HotelDetailsPage, \"tErjqYlcdjr/lnttK+jbFMk4WXU=\", false, function () {\n  return [useNavigate];\n});\n_c = HotelDetailsPage;\nexport default HotelDetailsPage;\nvar _c;\n$RefreshReg$(_c, \"HotelDetailsPage\");","map":{"version":3,"names":["React","useState","useEffect","Container","Row","Col","Card","Button","useNavigate","defaultRoomImage","jsxDEV","_jsxDEV","HotelDetailsPage","_s","hotels","setHotels","paises","setPaises","paisSeleccionado","setPaisSeleccionado","error","setError","navigate","hotelImages","setHotelImages","roomTypes","setRoomTypes","tiposHabitacion","fetchRoomTypes","fetchPaises","fetchHotelsAndRooms","filterCapacity","setFilterCapacity","filterRoomsByCapacity","capacity","filteredHotels","map","hotel","filteredRooms","rooms","filter","room","capacidad_personas","parseInt","length","handleFilterRooms","e","preventDefault","fetchHotelImages","idHotel","response","fetch","ok","Error","images","json","prevImages","console","forEach","id_hotel","data","reduce","roomType","id_tipo","imagenUrl","message","pais","url","hotelsResponse","hotelsData","roomTypesResponse","roomTypesData","roomTypesMap","acc","hotelsWithRooms","Promise","all","roomsResponse","roomsData","roomsWithImages","tipo_habitacion","handleSearch","className","children","md","fileName","_jsxFileName","lineNumber","columnNumber","Alert","variant","Form","onSubmit","Group","controlId","Label","Control","as","value","onChange","target","index","type","placeholder","onClick","Fragment","nombre","ciudad","direccion","Carousel","interval","image","Item","src","alt","Img","Body","Title","Text","numero_habitacion","precioxnoche","valuacion","log","state","hotelDetails","roomDetails","idHabitacion","id_habitacion","roomPrice","capacidadPersonas","Comentarios","_c","$RefreshReg$"],"sources":["/home/pmorales/Downloads/Proyecto-B2B/Hotel/frontend/sistema_hoteles/src/components/HotelDetailsPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Card, Button } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { useNavigate } from 'react-router-dom';\nimport defaultRoomImage from './roomImage.jpg'; // Asegúrate de tener esta imagen como fallback\n\n\nconst HotelDetailsPage = () => {\n  const [hotels, setHotels] = useState([]);\n  const [paises, setPaises] = useState([]);\n  const [paisSeleccionado, setPaisSeleccionado] = useState('');\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  const [hotelImages, setHotelImages] = useState({}); \n  const [roomTypes, setRoomTypes] = useState({});\n\n\n\n  const tiposHabitacion = {\n    1: 'Doble',\n    2: 'Junior Suite',\n    3: 'Suite',\n    4: 'Gran Suite'\n  };\n\n\n  useEffect(() => {\n    fetchRoomTypes();\n    fetchPaises();\n    fetchHotelsAndRooms(paisSeleccionado);\n  }, []);\n\n\n  const [filterCapacity, setFilterCapacity] = useState('');\n\n  // Función para filtrar habitaciones por capacidad de personas\n  const filterRoomsByCapacity = (capacity) => {\n    if (!capacity) return; // Si no se ha proporcionado capacidad, no se hace nada\n\n    // Filtra los hoteles cuyas habitaciones coincidan con la capacidad de personas\n    const filteredHotels = hotels.map(hotel => {\n      const filteredRooms = hotel.rooms.filter(room => room.capacidad_personas === parseInt(capacity));\n      return { ...hotel, rooms: filteredRooms };\n    }).filter(hotel => hotel.rooms.length > 0); // Filtra hoteles sin habitaciones que coincidan\n\n    setHotels(filteredHotels);\n  };\n\n  const handleFilterRooms = (e) => {\n    e.preventDefault();\n    filterRoomsByCapacity(filterCapacity);\n  };\n\n\n\n\n  //IMAGENES\n\n  const fetchHotelImages = async (idHotel) => {\n    try {\n      const response = await fetch(`http://localhost:8080/hoteles/${idHotel}/imagenes`);\n      if (!response.ok) throw new Error('Error al cargar imágenes del hotel');\n      const images = await response.json();\n      setHotelImages(prevImages => ({ ...prevImages, [idHotel]: images }));\n    } catch (error) {\n      console.error('Error fetching hotel images:', error);\n    }\n  };\n\n  useEffect(() => {\n    hotels.forEach((hotel) => {\n      fetchHotelImages(hotel.id_hotel);\n    });\n  }, [hotels]);\n\n  \n\n  const fetchRoomTypes = async () => {\n    try {\n      const response = await fetch('http://localhost:8080/tipos_habitacion');\n      if (!response.ok) throw new Error('Error al cargar los tipos de habitación');\n      const data = await response.json();\n      setRoomTypes(data.reduce((map, roomType) => {\n        map[roomType.id_tipo] = roomType.imagenUrl || defaultRoomImage; \n        return map;\n      }, {}));\n    } catch (error) {\n      setError('Error al cargar los tipos de habitación: ' + error.message);\n    }\n  };\n  \n\n\n\n  const fetchPaises = async () => {\n    try {\n      const response = await fetch('http://localhost:8080/hoteles/pais');\n      if (!response.ok) throw new Error('Error al cargar los países');\n      const data = await response.json();\n      setPaises(data);\n    } catch (error) {\n      setError('Error al cargar los países: ' + error.message);\n    }\n  };\n\n  const fetchHotelsAndRooms = async (pais = '') => {\n    let url = pais ? `http://localhost:8080/hoteles/por-pais/${pais}` : `http://localhost:8080/hoteles`;\n    try {\n      const hotelsResponse = await fetch(url);\n      if (!hotelsResponse.ok) throw new Error('Error al cargar hoteles');\n      const hotelsData = await hotelsResponse.json();\n  \n      const roomTypesResponse = await fetch('http://localhost:8080/tipos_habitacion');\n      const roomTypesData = await roomTypesResponse.json();\n      const roomTypesMap = roomTypesData.reduce((acc, roomType) => {\n        acc[roomType.id_tipo] = roomType.imagenUrl || defaultRoomImage;\n        return acc;\n      }, {});\n  \n      const hotelsWithRooms = await Promise.all(hotelsData.map(async (hotel) => {\n        const roomsResponse = await fetch(`http://localhost:8080/habitaciones?hotelId=${hotel.id_hotel}`);\n        const roomsData = await roomsResponse.json();\n        const roomsWithImages = roomsData.map(room => ({\n          ...room,\n          imagenUrl: roomTypesMap[room.tipo_habitacion]\n        }));\n        return { ...hotel, rooms: roomsWithImages };\n      }));\n  \n      setHotels(hotelsWithRooms);\n    } catch (error) {\n      setError('Error al cargar hoteles y habitaciones: ' + error.message);\n    }\n  };\n  \n  \n  \n  \n  const handleSearch = (e) => {\n    e.preventDefault();\n    fetchHotelsAndRooms(paisSeleccionado);\n  };\n  \n\n  return (\n    <Container className=\"my-5\">\n      <Row>\n        <Col md={12}>\n          <h2>Buscar Hoteles Disponibles</h2>\n          {error && <Alert variant=\"danger\">{error}</Alert>}\n          <Form onSubmit={handleSearch}>\n            <Form.Group controlId=\"pais\">\n              <Form.Label>País</Form.Label>\n              <Form.Control as=\"select\" value={paisSeleccionado} onChange={(e) => setPaisSeleccionado(e.target.value)}>\n                <option value=\"\">Seleccione un país</option>\n                {paises.map((pais, index) => (\n                  <option key={index} value={pais}>{pais}</option>\n                ))}\n              </Form.Control>\n            </Form.Group>\n  \n            <Form.Group controlId=\"capacidadPersonas\">\n              <Form.Label>Capacidad de Personas en Habitación</Form.Label>\n              <Form.Control \n                type=\"number\" \n                placeholder=\"Ingrese la capacidad de personas\" \n                value={filterCapacity} \n                onChange={(e) => setFilterCapacity(e.target.value)}\n              />\n            </Form.Group>\n  \n            <Button variant=\"primary\" type=\"submit\">Buscar Hoteles</Button>\n            <Button variant=\"secondary\" type=\"button\" onClick={handleFilterRooms} className=\"ml-2\">\n              Filtrar Habitaciones\n            </Button>\n          </Form>\n        </Col>\n      </Row>\n      <Row>\n      {hotels.length > 0 ? (\n  hotels.map((hotel) => (\n    <React.Fragment key={hotel.id_hotel}>\n      <Col md={10} className=\"mt-4\">\n        <h3>Hotel: {hotel.nombre}</h3>\n        <p>{hotel.ciudad}, {hotel.pais}</p>\n        <p>Dirección: {hotel.direccion}</p>\n        {hotelImages[hotel.id_hotel] && hotelImages[hotel.id_hotel].length > 0 && (\n          <Carousel interval={null}>\n            {hotelImages[hotel.id_hotel].map((image, index) => (\n              <Carousel.Item key={index}>\n                <img\n                  className=\"d-block w-100\"\n                  src={image}\n                  alt={`Imagen ${index + 1} del hotel ${hotel.nombre}`}\n                />\n              </Carousel.Item>\n            ))}\n          </Carousel>\n        )}\n\n      </Col>\n              {hotel.rooms && hotel.rooms.map((room) => (\n                <Col key={room.id_habitacion} md={6}>\n                  <Card className=\"mb-3\">\n                  <Card.Img variant=\"top\" src={room.imagenUrl || defaultRoomImage} />\n                    <Card.Body>\n                    <Card.Title>Habitación: {tiposHabitacion[room.tipo_habitacion]}</Card.Title>\n                      <Card.Text>Número de habitación: {room.numero_habitacion}</Card.Text>\n                      <Card.Text>Capacidad máxima: {room.capacidad_personas} personas</Card.Text>\n                      <Card.Text>Precio por noche: ${room.precioxnoche}</Card.Text>\n                      <Card.Text>Valoración: {room.valuacion} estrellas</Card.Text>\n                      <Button variant=\"primary\" onClick={() => {\n                      console.log(\"Navigating with hotelDetails:\", hotel);\n                      navigate('/checkout', {\n                        state: {\n                          hotelDetails: { ...hotel },\n                          roomDetails: {\n                            ...room,\n                            idHabitacion: room.id_habitacion,\n                            roomType: tiposHabitacion[room.tipo_habitacion],\n                            roomPrice: room.precioxnoche,\n                            capacidadPersonas: room.capacidad_personas\n                          }\n                        }\n                      });\n                    }}>\n                      Reservar\n                    </Button>\n\n                    <Comentarios idHabitacion={room.id_habitacion} />\n\n\n                    </Card.Body>\n                  </Card>\n                </Col>\n              ))}\n            </React.Fragment>\n          ))\n        ) : (\n          <Col>\n            <p className=\"mt-4\">No se encontraron hoteles. Por favor, intenta nuevamente con diferentes criterios de búsqueda.</p>\n          </Col>\n        )}\n      </Row>\n    </Container>\n  );\n};\n\nexport default HotelDetailsPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}