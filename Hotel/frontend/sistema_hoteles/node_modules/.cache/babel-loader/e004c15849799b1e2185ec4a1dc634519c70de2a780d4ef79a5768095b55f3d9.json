{"ast":null,"code":"var _jsxFileName = \"/home/pmorales/Downloads/Proyecto-B2B/Hotel/frontend/sistema_hoteles/src/components/HomePage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Card, Button, Form, Alert, Image, Carousel } from 'react-bootstrap';\nimport { useNavigate } from 'react-router-dom';\nimport defaultRoomImage from './roomImage.jpg';\nimport Comentarios from './Comentarios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomePage = () => {\n  _s();\n  const [hotels, setHotels] = useState([]);\n  const [paises, setPaises] = useState([]);\n  const [paisSeleccionado, setPaisSeleccionado] = useState('');\n  const [fechaIngreso, setFechaIngreso] = useState('');\n  const [fechaSalida, setFechaSalida] = useState('');\n  const [numeroPersonas, setNumeroPersonas] = useState(1);\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  const [hotelImages, setHotelImages] = useState({});\n  const [roomTypes, setRoomTypes] = useState({});\n  const tiposHabitacion = {\n    1: 'Doble',\n    2: 'Junior Suite',\n    3: 'Suite',\n    4: 'Gran Suite'\n  };\n  useEffect(() => {\n    fetchRoomTypes();\n    fetchPaises();\n    fetchHotelsAndRooms(paisSeleccionado);\n  }, []);\n\n  //IMAGENES\n\n  const fetchHotelImages = async idHotel => {\n    try {\n      const response = await fetch(`http://localhost:8080/hoteles/${idHotel}/imagenes`);\n      if (!response.ok) throw new Error('Error al cargar imágenes del hotel');\n      const images = await response.json();\n      setHotelImages(prevImages => ({\n        ...prevImages,\n        [idHotel]: images\n      }));\n    } catch (error) {\n      console.error('Error fetching hotel images:', error);\n    }\n  };\n  useEffect(() => {\n    hotels.forEach(hotel => {\n      fetchHotelImages(hotel.id_hotel);\n    });\n  }, [hotels]);\n  const fetchRoomTypes = async () => {\n    try {\n      const response = await fetch('http://localhost:8080/tipos_habitacion');\n      if (!response.ok) throw new Error('Error al cargar los tipos de habitación');\n      const data = await response.json();\n      setRoomTypes(data.reduce((map, roomType) => {\n        map[roomType.id_tipo] = roomType.imagenUrl || defaultRoomImage;\n        return map;\n      }, {}));\n    } catch (error) {\n      setError('Error al cargar los tipos de habitación: ' + error.message);\n    }\n  };\n  const fetchPaises = async () => {\n    try {\n      const response = await fetch('http://localhost:8080/hoteles/pais');\n      if (!response.ok) throw new Error('Error al cargar los países');\n      const data = await response.json();\n      setPaises(data);\n    } catch (error) {\n      setError('Error al cargar los países: ' + error.message);\n    }\n  };\n  const fetchHotelsAndRooms = async (pais = '', fechaIngreso = '', fechaSalida = '', numeroPersonas = 1) => {\n    let url = `http://localhost:8080/habitaciones/buscar?`;\n    const params = new URLSearchParams({\n      pais: pais,\n      fechaIngreso: fechaIngreso,\n      fechaSalida: fechaSalida,\n      numeroPersonas: numeroPersonas\n    }).toString();\n    url += params;\n    try {\n      const response = await fetch(url);\n      if (!response.ok) throw new Error('Error al cargar hoteles y habitaciones según filtros de búsqueda');\n      const roomsData = await response.json();\n      const organizedHotels = organizeRoomsByHotel(roomsData);\n      setHotels(organizedHotels);\n    } catch (error) {\n      console.error('Error fetching filtered hotels and rooms:', error);\n      setError('Error al cargar hoteles y habitaciones con los filtros aplicados: ' + error.message);\n    }\n  };\n  const handleSearch = e => {\n    e.preventDefault();\n    fetchHotelsAndRooms(paisSeleccionado, fechaIngreso, fechaSalida, numeroPersonas);\n  };\n  const organizeRoomsByHotel = roomsData => {\n    // Agrupar las habitaciones por ID de hotel.\n    const hotelGroups = roomsData.reduce((acc, room) => {\n      // Asumiendo que cada habitación tiene un 'id_hotel' y datos del hotel asociados.\n      if (!acc[room.id_hotel]) {\n        acc[room.id_hotel] = {\n          id_hotel: room.id_hotel,\n          nombre: room.nombre_hotel,\n          // Asegúrate de que estos campos existen en tus datos\n          ciudad: room.ciudad,\n          pais: room.pais,\n          direccion: room.direccion,\n          rooms: []\n        };\n      }\n      acc[room.id_hotel].rooms.push(room);\n      return acc;\n    }, {});\n\n    // Convertir el objeto de grupos en un array de hoteles.\n    return Object.values(hotelGroups);\n  };\n\n  // Continuación del componente HotelDetailsPage...\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"my-5\",\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        md: 12,\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleSearch,\n          children: [/*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"formPais\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Pa\\xEDs\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  as: \"select\",\n                  value: paisSeleccionado,\n                  onChange: e => setPaisSeleccionado(e.target.value),\n                  children: paises.map(pais => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: pais,\n                    children: pais\n                  }, pais, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 156,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"formFechaIngreso\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Fecha de Ingreso\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"date\",\n                  value: fechaIngreso,\n                  onChange: e => setFechaIngreso(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"formFechaSalida\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Fecha de Salida\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"date\",\n                  value: fechaSalida,\n                  onChange: e => setFechaSalida(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"formNumeroPersonas\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"N\\xFAmero de Personas\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"number\",\n                  value: numeroPersonas,\n                  onChange: e => setNumeroPersonas(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 176,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            type: \"submit\",\n            children: \"Buscar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: hotels.length > 0 ? hotels.map(hotel => /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: 10,\n          className: \"mt-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Hotel: \", hotel.nombre]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [hotel.ciudad, \", \", hotel.pais]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Direcci\\xF3n: \", hotel.direccion]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 9\n          }, this), hotelImages[hotel.id_hotel] && hotelImages[hotel.id_hotel].length > 0 && /*#__PURE__*/_jsxDEV(Carousel, {\n            interval: null,\n            children: hotelImages[hotel.id_hotel].map((image, index) => /*#__PURE__*/_jsxDEV(Carousel.Item, {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"d-block w-100\",\n                src: image,\n                alt: `Imagen ${index + 1} del hotel ${hotel.nombre}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 17\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 15\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 7\n        }, this), hotel.rooms && hotel.rooms.map(room => /*#__PURE__*/_jsxDEV(Col, {\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n              variant: \"top\",\n              src: room.imagenUrl || defaultRoomImage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                children: [\"Habitaci\\xF3n: \", tiposHabitacion[room.tipo_habitacion]]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: [\"N\\xFAmero de habitaci\\xF3n: \", room.numero_habitacion]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: [\"Capacidad m\\xE1xima: \", room.capacidad_personas, \" personas\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: [\"Precio por noche: $\", room.precioxnoche]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: [\"Valoraci\\xF3n: \", room.valuacion, \" estrellas\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"primary\",\n                onClick: () => {\n                  console.log(\"Navigating with hotelDetails:\", hotel);\n                  navigate('/checkout', {\n                    state: {\n                      hotelDetails: {\n                        ...hotel\n                      },\n                      roomDetails: {\n                        ...room,\n                        idHabitacion: room.id_habitacion,\n                        roomType: tiposHabitacion[room.tipo_habitacion],\n                        roomPrice: room.precioxnoche,\n                        capacidadPersonas: room.capacidad_personas\n                      }\n                    }\n                  });\n                },\n                children: \"Reservar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Comentarios, {\n                idHabitacion: room.id_habitacion\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 19\n          }, this)\n        }, room.id_habitacion, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 17\n        }, this))]\n      }, hotel.id_hotel, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 5\n      }, this)) : /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-4\",\n          children: \"No se encontraron hoteles. Por favor, intenta nuevamente con diferentes criterios de b\\xFAsqueda.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 5\n  }, this);\n};\n_s(HomePage, \"4M01MezPRIwAkSEJ8Gnlr5Cy6Ys=\", false, function () {\n  return [useNavigate];\n});\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","useEffect","Container","Row","Col","Card","Button","Form","Alert","Image","Carousel","useNavigate","defaultRoomImage","Comentarios","jsxDEV","_jsxDEV","HomePage","_s","hotels","setHotels","paises","setPaises","paisSeleccionado","setPaisSeleccionado","fechaIngreso","setFechaIngreso","fechaSalida","setFechaSalida","numeroPersonas","setNumeroPersonas","error","setError","navigate","hotelImages","setHotelImages","roomTypes","setRoomTypes","tiposHabitacion","fetchRoomTypes","fetchPaises","fetchHotelsAndRooms","fetchHotelImages","idHotel","response","fetch","ok","Error","images","json","prevImages","console","forEach","hotel","id_hotel","data","reduce","map","roomType","id_tipo","imagenUrl","message","pais","url","params","URLSearchParams","toString","roomsData","organizedHotels","organizeRoomsByHotel","handleSearch","e","preventDefault","hotelGroups","acc","room","nombre","nombre_hotel","ciudad","direccion","rooms","push","Object","values","className","children","md","onSubmit","Group","controlId","Label","fileName","_jsxFileName","lineNumber","columnNumber","Control","as","value","onChange","target","type","variant","length","Fragment","interval","image","index","Item","src","alt","Img","Body","Title","tipo_habitacion","Text","numero_habitacion","capacidad_personas","precioxnoche","valuacion","onClick","log","state","hotelDetails","roomDetails","idHabitacion","id_habitacion","roomPrice","capacidadPersonas","_c","$RefreshReg$"],"sources":["/home/pmorales/Downloads/Proyecto-B2B/Hotel/frontend/sistema_hoteles/src/components/HomePage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Card, Button, Form, Alert, Image, Carousel } from 'react-bootstrap';\nimport { useNavigate } from 'react-router-dom';\nimport defaultRoomImage from './roomImage.jpg';\nimport Comentarios from './Comentarios';\n\nconst HomePage = () => {\n  const [hotels, setHotels] = useState([]);\n  const [paises, setPaises] = useState([]);\n  const [paisSeleccionado, setPaisSeleccionado] = useState('');\n  const [fechaIngreso, setFechaIngreso] = useState('');\n  const [fechaSalida, setFechaSalida] = useState('');\n  const [numeroPersonas, setNumeroPersonas] = useState(1);\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  const [hotelImages, setHotelImages] = useState({});\n  const [roomTypes, setRoomTypes] = useState({});\n\n\n\n\n  const tiposHabitacion = {\n    1: 'Doble',\n    2: 'Junior Suite',\n    3: 'Suite',\n    4: 'Gran Suite'\n  };\n\n\n  useEffect(() => {\n    fetchRoomTypes();\n    fetchPaises();\n    fetchHotelsAndRooms(paisSeleccionado);\n  }, []);\n\n\n\n\n\n  //IMAGENES\n\n  const fetchHotelImages = async (idHotel) => {\n    try {\n      const response = await fetch(`http://localhost:8080/hoteles/${idHotel}/imagenes`);\n      if (!response.ok) throw new Error('Error al cargar imágenes del hotel');\n      const images = await response.json();\n      setHotelImages(prevImages => ({ ...prevImages, [idHotel]: images }));\n    } catch (error) {\n      console.error('Error fetching hotel images:', error);\n    }\n  };\n\n  useEffect(() => {\n    hotels.forEach((hotel) => {\n      fetchHotelImages(hotel.id_hotel);\n    });\n  }, [hotels]);\n\n  \n\n  const fetchRoomTypes = async () => {\n    try {\n      const response = await fetch('http://localhost:8080/tipos_habitacion');\n      if (!response.ok) throw new Error('Error al cargar los tipos de habitación');\n      const data = await response.json();\n      setRoomTypes(data.reduce((map, roomType) => {\n        map[roomType.id_tipo] = roomType.imagenUrl || defaultRoomImage; \n        return map;\n      }, {}));\n    } catch (error) {\n      setError('Error al cargar los tipos de habitación: ' + error.message);\n    }\n  };\n  \n\n\n\n  const fetchPaises = async () => {\n    try {\n      const response = await fetch('http://localhost:8080/hoteles/pais');\n      if (!response.ok) throw new Error('Error al cargar los países');\n      const data = await response.json();\n      setPaises(data);\n    } catch (error) {\n      setError('Error al cargar los países: ' + error.message);\n    }\n  };\n\n  const fetchHotelsAndRooms = async (pais = '', fechaIngreso = '', fechaSalida = '', numeroPersonas = 1) => {\n    let url = `http://localhost:8080/habitaciones/buscar?`;\n    const params = new URLSearchParams({\n      pais: pais,\n      fechaIngreso: fechaIngreso,\n      fechaSalida: fechaSalida,\n      numeroPersonas: numeroPersonas\n    }).toString();\n    url += params;\n  \n    try {\n      const response = await fetch(url);\n      if (!response.ok) throw new Error('Error al cargar hoteles y habitaciones según filtros de búsqueda');\n      const roomsData = await response.json();\n      const organizedHotels = organizeRoomsByHotel(roomsData);\n      setHotels(organizedHotels);\n    } catch (error) {\n      console.error('Error fetching filtered hotels and rooms:', error);\n      setError('Error al cargar hoteles y habitaciones con los filtros aplicados: ' + error.message);\n    }\n  };\n\n  const handleSearch = (e) => {\n    e.preventDefault();\n    fetchHotelsAndRooms(paisSeleccionado, fechaIngreso, fechaSalida, numeroPersonas);\n  };\n\n\n\n  const organizeRoomsByHotel = (roomsData) => {\n    // Agrupar las habitaciones por ID de hotel.\n    const hotelGroups = roomsData.reduce((acc, room) => {\n      // Asumiendo que cada habitación tiene un 'id_hotel' y datos del hotel asociados.\n      if (!acc[room.id_hotel]) {\n        acc[room.id_hotel] = {\n          id_hotel: room.id_hotel,\n          nombre: room.nombre_hotel, // Asegúrate de que estos campos existen en tus datos\n          ciudad: room.ciudad,\n          pais: room.pais,\n          direccion: room.direccion,\n          rooms: []\n        };\n      }\n      acc[room.id_hotel].rooms.push(room);\n      return acc;\n    }, {});\n  \n    // Convertir el objeto de grupos en un array de hoteles.\n    return Object.values(hotelGroups);\n  };\n  \n  // Continuación del componente HotelDetailsPage...\n\n  \n\n  return (\n    <Container className=\"my-5\">\n      <Row>\n        <Col md={12}>\n          {/* Formulario para los filtros de búsqueda */}\n          <Form onSubmit={handleSearch}>\n            <Row>\n              <Col>\n                <Form.Group controlId=\"formPais\">\n                  <Form.Label>País</Form.Label>\n                  <Form.Control as=\"select\" value={paisSeleccionado} onChange={(e) => setPaisSeleccionado(e.target.value)}>\n                    {paises.map((pais) => (\n                      <option key={pais} value={pais}>{pais}</option>\n                    ))}\n                  </Form.Control>\n                </Form.Group>\n              </Col>\n              <Col>\n                <Form.Group controlId=\"formFechaIngreso\">\n                  <Form.Label>Fecha de Ingreso</Form.Label>\n                  <Form.Control type=\"date\" value={fechaIngreso} onChange={(e) => setFechaIngreso(e.target.value)} />\n                </Form.Group>\n              </Col>\n              <Col>\n                <Form.Group controlId=\"formFechaSalida\">\n                  <Form.Label>Fecha de Salida</Form.Label>\n                  <Form.Control type=\"date\" value={fechaSalida} onChange={(e) => setFechaSalida(e.target.value)} />\n                </Form.Group>\n              </Col>\n              <Col>\n                <Form.Group controlId=\"formNumeroPersonas\">\n                  <Form.Label>Número de Personas</Form.Label>\n                  <Form.Control type=\"number\" value={numeroPersonas} onChange={(e) => setNumeroPersonas(e.target.value)} />\n                </Form.Group>\n              </Col>\n            </Row>\n            <Button variant=\"primary\" type=\"submit\">\n              Buscar\n            </Button>\n          </Form>\n        </Col>\n      </Row>\n      <Row>\n      {hotels.length > 0 ? (\n  hotels.map((hotel) => (\n    <React.Fragment key={hotel.id_hotel}>\n      <Col md={10} className=\"mt-4\">\n        <h3>Hotel: {hotel.nombre}</h3>\n        <p>{hotel.ciudad}, {hotel.pais}</p>\n        <p>Dirección: {hotel.direccion}</p>\n        {hotelImages[hotel.id_hotel] && hotelImages[hotel.id_hotel].length > 0 && (\n          <Carousel interval={null}>\n            {hotelImages[hotel.id_hotel].map((image, index) => (\n              <Carousel.Item key={index}>\n                <img\n                  className=\"d-block w-100\"\n                  src={image}\n                  alt={`Imagen ${index + 1} del hotel ${hotel.nombre}`}\n                />\n              </Carousel.Item>\n            ))}\n          </Carousel>\n        )}\n\n      </Col>\n              {hotel.rooms && hotel.rooms.map((room) => (\n                <Col key={room.id_habitacion} md={6}>\n                  <Card className=\"mb-3\">\n                  <Card.Img variant=\"top\" src={room.imagenUrl || defaultRoomImage} />\n                    <Card.Body>\n                    <Card.Title>Habitación: {tiposHabitacion[room.tipo_habitacion]}</Card.Title>\n                      <Card.Text>Número de habitación: {room.numero_habitacion}</Card.Text>\n                      <Card.Text>Capacidad máxima: {room.capacidad_personas} personas</Card.Text>\n                      <Card.Text>Precio por noche: ${room.precioxnoche}</Card.Text>\n                      <Card.Text>Valoración: {room.valuacion} estrellas</Card.Text>\n                      <Button variant=\"primary\" onClick={() => {\n                      console.log(\"Navigating with hotelDetails:\", hotel);\n                      navigate('/checkout', {\n                        state: {\n                          hotelDetails: { ...hotel },\n                          roomDetails: {\n                            ...room,\n                            idHabitacion: room.id_habitacion,\n                            roomType: tiposHabitacion[room.tipo_habitacion],\n                            roomPrice: room.precioxnoche,\n                            capacidadPersonas: room.capacidad_personas\n                          }\n                        }\n                      });\n                    }}>\n                      Reservar\n                    </Button>\n\n                    <Comentarios idHabitacion={room.id_habitacion} />\n\n\n                    </Card.Body>\n                  </Card>\n                </Col>\n              ))}\n            </React.Fragment>\n          ))\n        ) : (\n          <Col>\n            <p className=\"mt-4\">No se encontraron hoteles. Por favor, intenta nuevamente con diferentes criterios de búsqueda.</p>\n          </Col>\n        )}\n      </Row>\n    </Container>\n  );\n};\n\nexport default HomePage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}