{"ast":null,"code":"var _jsxFileName = \"/home/pmorales/Downloads/Proyecto-B2B/Hotel/frontend/sistema_hoteles/src/components/AdministrarReservas.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Button, Card } from 'react-bootstrap';\nimport { useUser } from './UserContext';\nimport EditReservationAdmin from './EditReservation';\nimport jsPDF from 'jspdf';\nimport 'jspdf-autotable';\nimport emailjs from 'emailjs-com';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AdministrarReservas = () => {\n  _s();\n  const [reservations, setReservations] = useState([]);\n  const {\n    user\n  } = useUser();\n  const [showEditModal, setShowEditModal] = useState(false);\n  const [currentReservation, setCurrentReservation] = useState(null);\n  const [showNotifyButton, setShowNotifyButton] = useState(false);\n  useEffect(() => {\n    if (user) {\n      fetchReservations();\n    }\n  }, [user]);\n  const fetchReservations = async () => {\n    console.log('Fetching reservations for user:', user.id);\n    try {\n      const response = await fetch(`http://localhost:8080/reservas/detalle/todas`);\n      if (response.ok) {\n        const data = await response.json();\n        console.log('Reservations fetched successfully:', data);\n        setReservations(data.map(reserva => ({\n          ...reserva,\n          tipoHabitacion: translateTipoHabitacion(reserva.tipoHabitacion),\n          idHotel: reserva.idHotel,\n          // Asegúrate de que estás incluyendo esta línea\n          idHabitacion: reserva.idHabitacion\n        })));\n      } else {\n        console.error(\"Failed to fetch reservations.\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching reservations:\", error);\n    }\n  };\n  const handleEdit = reserva => {\n    setCurrentReservation(reserva);\n    setShowEditModal(true);\n  };\n  const handleEditClose = () => {\n    setShowEditModal(false);\n    setEditedReservation(currentReservation);\n  };\n\n  // a numero\n  const translateTipoHabitacion = tipoHabitacion => {\n    const tipoHabitacionMap = {\n      1: \"Doble\",\n      2: \"Junior Suite\",\n      3: \"Suite\",\n      4: \"Gran Suite\"\n    };\n    return tipoHabitacionMap[tipoHabitacion] || \"Unknown\";\n  };\n  const calculateNights = (checkIn, checkOut) => {\n    const checkInDate = new Date(checkIn);\n    const checkOutDate = new Date(checkOut);\n    const diffTime = Math.abs(checkOutDate.getTime() - checkInDate.getTime());\n    return Math.ceil(diffTime / (1000 * 3600 * 24));\n  };\n  const cancelarReserva = async idReserva => {\n    try {\n      const response = await fetch(`http://localhost:8080/reservas/${idReserva}/cancelar`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) {\n        throw new Error('No se pudo cancelar la reserva');\n      }\n      alert('Reserva cancelada con éxito');\n      fetchReservations(); //error tipográfico.\n    } catch (error) {\n      console.error('Error al cancelar la reserva:', error);\n      alert('Error al cancelar la reserva');\n    }\n  };\n  const actualizarReserva = async reservaActualizada => {\n    console.log('Updating reservation with:', reservaActualizada);\n    try {\n      const response = await fetch(`http://localhost:8080/reservas/${reservaActualizada.idReserva}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(reservaActualizada)\n      });\n      if (!response.ok) {\n        if (response.status === 409) {\n          // Conflicto , notifica al usuario\n          alert(\"Habitación no disponible.\");\n        } else {\n          // Otro tipo de error HTTP\n          throw new Error(`Reservation update failed: ${response.statusText}`);\n        }\n      } else {\n        console.log('Reservation updated successfully');\n        // Solo mostramos el botón de notificar cambios si la actualización fue exitosa\n        setShowNotifyButton(true);\n        setShowEditModal(false);\n        await fetchReservations(); // Refresh the list of reservations\n      }\n    } catch (error) {\n      console.error('Error updating reservation:', error);\n      alert(\"Ocurrió un error al actualizar la reserva. Por favor, intenta de nuevo.\");\n      // También en este caso, ocultamos el botón ya que hubo un error\n      setShowNotifyButton(true); // Muestra el botón \"Notificar Cambios\" después de una actualización exitosa\n      setCurrentReservation(reservaActualizada); // Guarda los detalles de la reserva actualizada para usar en la notificación\n    }\n    ;\n    const downloadReservationPdf = reserva => {\n      const doc = new jsPDF();\n      doc.text(\"Detalle de Reserva\", 14, 16);\n      doc.setFontSize(10);\n\n      // Información de la reserva\n      const reservationDetails = [{\n        title: \"Hotel\",\n        data: reserva.nombreHotel\n      }, {\n        title: \"Número de habitación\",\n        data: reserva.numeroHabitacion.toString()\n      }, {\n        title: \"Tipo de habitación\",\n        data: reserva.tipoHabitacion\n      }, {\n        title: \"Ubicación\",\n        data: `${reserva.ciudad}, ${reserva.pais} - ${reserva.direccion}`\n      }, {\n        title: \"Check-in\",\n        data: reserva.fechaIngreso\n      }, {\n        title: \"Check-out\",\n        data: reserva.fechaSalida\n      }, {\n        title: \"Número de noches\",\n        data: calculateNights(reserva.fechaIngreso, reserva.fechaSalida).toString()\n      }, {\n        title: \"Personas\",\n        data: reserva.capacidadPersonas.toString()\n      }, {\n        title: \"Total Reserva\",\n        data: `$${reserva.totalReserva}`\n      }, {\n        title: \"Estado\",\n        data: reserva.estadoReserva\n      }, {\n        title: \"Código de reserva\",\n        data: reserva.codigoReserva\n      }];\n      doc.autoTable({\n        head: [[\"Detalle\", \"Información\"]],\n        body: reservationDetails.map(item => [item.title, item.data]),\n        startY: 20\n      });\n      doc.save(`Reserva_${reserva.codigoReserva}.pdf`);\n    };\n    const handleNotification = async () => {\n      if (!currentReservation) return;\n      const templateParams = {\n        to_name: user.primer_nombre,\n        // Asumiendo que tienes esta información disponible\n        hotel_name: currentReservation.hotelName,\n        room_number: currentReservation.roomNumber.toString(),\n        room_type: translateTipoHabitacion(currentReservation.tipoHabitacion),\n        location: `${currentReservation.ciudad}, ${currentReservation.pais} - ${currentReservation.direccion}`,\n        check_in_date: currentReservation.fechaIngreso,\n        check_out_date: currentReservation.fechaSalida,\n        total_nights: calculateNights(currentReservation.fechaIngreso, currentReservation.fechaSalida).toString(),\n        total_people: currentReservation.personasReserva.toString(),\n        total_price: `$${currentReservation.totalReserva.toFixed(2)}`,\n        reservation_status: currentReservation.estadoReserva,\n        reservation_code: currentReservation.codigoReserva.toString(),\n        to_email: user.email // Asumiendo que esta es la dirección de correo electrónico del usuario\n      };\n      try {\n        await emailjs.send('service_db-dw2', 'template_vhblb7c', templateParams, '83TAqc_7hHgnfdESC');\n        console.log('Notificación de cambio enviada!');\n        setShowNotifyButton(false); // Esconde el botón después de enviar el correo\n      } catch (error) {\n        console.error('Error al enviar notificación de cambio:', error.text);\n      }\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"booking-history-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-center\",\n        children: \"Historial de Reservas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 7\n      }, this), reservations.length > 0 ? reservations.map(reserva => /*#__PURE__*/_jsxDEV(Card, {\n        className: \"mb-4 shadow\",\n        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n          as: \"h5\",\n          className: \"font-weight-bold\",\n          children: [\"Reserva #\", reserva.codigoReserva, \" - \", reserva.correoElectronico]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n            children: reserva.nombreHotel\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Card.Subtitle, {\n            className: \"mb-2 text-muted\",\n            children: [reserva.ciudad, \", \", reserva.pais, \" - \", reserva.direccion]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: [\"Tipo de habitaci\\xF3n: \", reserva.tipoHabitacion]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: [\"N\\xFAmero de habitaci\\xF3n: \", reserva.numeroHabitacion]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: [\"Check-in: \", reserva.fechaIngreso]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: [\"Check-out: \", reserva.fechaSalida]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: [\"N\\xFAmero de noches: \", calculateNights(reserva.fechaIngreso, reserva.fechaSalida)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: [\"Personas: \", reserva.capacidadPersonas]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: [\"Total Reserva: $\", reserva.totalReserva]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: [\"Estado: \", reserva.estadoReserva]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 15\n          }, this), reserva.estadoReserva !== \"Cancelada\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"warning\",\n              onClick: () => handleEdit(reserva),\n              children: \"Editar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"danger\",\n              onClick: () => cancelarReserva(reserva.idReserva),\n              children: \"Cancelar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"info\",\n            onClick: () => downloadReservationPdf(reserva),\n            children: \"Descargar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 13\n        }, this)]\n      }, reserva.idReserva, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 11\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-center\",\n        children: \"No se encontraron reservas.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 10\n      }, this), showNotifyButton && /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"info\",\n        onClick: handleNotification,\n        children: \"Notificar Cambios\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 10\n      }, this), currentReservation && /*#__PURE__*/_jsxDEV(EditReservationAdmin, {\n        show: showEditModal,\n        handleClose: handleEditClose,\n        reserva: currentReservation,\n        actualizarReserva: actualizarReserva\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 5\n    }, this);\n  };\n};\n_s(AdministrarReservas, \"J+JTzwqg0o+rsml/Ih0/f/k4S2U=\", false, function () {\n  return [useUser];\n});\n_c = AdministrarReservas;\nexport default AdministrarReservas;\nvar _c;\n$RefreshReg$(_c, \"AdministrarReservas\");","map":{"version":3,"names":["React","useEffect","useState","Button","Card","useUser","EditReservationAdmin","jsPDF","emailjs","jsxDEV","_jsxDEV","Fragment","_Fragment","AdministrarReservas","_s","reservations","setReservations","user","showEditModal","setShowEditModal","currentReservation","setCurrentReservation","showNotifyButton","setShowNotifyButton","fetchReservations","console","log","id","response","fetch","ok","data","json","map","reserva","tipoHabitacion","translateTipoHabitacion","idHotel","idHabitacion","error","handleEdit","handleEditClose","setEditedReservation","tipoHabitacionMap","calculateNights","checkIn","checkOut","checkInDate","Date","checkOutDate","diffTime","Math","abs","getTime","ceil","cancelarReserva","idReserva","method","headers","Error","alert","actualizarReserva","reservaActualizada","body","JSON","stringify","status","statusText","downloadReservationPdf","doc","text","setFontSize","reservationDetails","title","nombreHotel","numeroHabitacion","toString","ciudad","pais","direccion","fechaIngreso","fechaSalida","capacidadPersonas","totalReserva","estadoReserva","codigoReserva","autoTable","head","item","startY","save","handleNotification","templateParams","to_name","primer_nombre","hotel_name","hotelName","room_number","roomNumber","room_type","location","check_in_date","check_out_date","total_nights","total_people","personasReserva","total_price","toFixed","reservation_status","reservation_code","to_email","email","send","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","Header","as","correoElectronico","Body","Title","Subtitle","Text","variant","onClick","show","handleClose","_c","$RefreshReg$"],"sources":["/home/pmorales/Downloads/Proyecto-B2B/Hotel/frontend/sistema_hoteles/src/components/AdministrarReservas.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Button, Card } from 'react-bootstrap';\nimport { useUser } from './UserContext';\nimport EditReservationAdmin from './EditReservation';\nimport jsPDF from 'jspdf';\nimport 'jspdf-autotable';\nimport emailjs from 'emailjs-com';\n\nconst AdministrarReservas = () => {\n    const [reservations, setReservations] = useState([]);\n    const { user } = useUser();\n    const [showEditModal, setShowEditModal] = useState(false);\n    const [currentReservation, setCurrentReservation] = useState(null);\n    const [showNotifyButton, setShowNotifyButton] = useState(false);\n\n\n  useEffect(() => {\n    if (user) {\n      fetchReservations();\n    }\n  }, [user]);\n\n\n\n  const fetchReservations = async () => {\n    console.log('Fetching reservations for user:', user.id);\n    try {\n      const response = await fetch(`http://localhost:8080/reservas/detalle/todas`);\n      if (response.ok) {\n        const data = await response.json();\n        console.log('Reservations fetched successfully:', data);\n        setReservations(data.map(reserva => ({\n          ...reserva,\n          tipoHabitacion: translateTipoHabitacion(reserva.tipoHabitacion),\n          idHotel: reserva.idHotel, // Asegúrate de que estás incluyendo esta línea\n          idHabitacion: reserva.idHabitacion\n        })));\n      } else {\n        console.error(\"Failed to fetch reservations.\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching reservations:\", error);\n    }\n  };\n\n\n  const handleEdit = (reserva) => {\n    setCurrentReservation(reserva);\n    setShowEditModal(true);\n  };\n\n  const handleEditClose = () => {\n    setShowEditModal(false);\n    setEditedReservation(currentReservation);\n  };\n  \n\n  // a numero\n  const translateTipoHabitacion = (tipoHabitacion) => {\n    const tipoHabitacionMap = {\n      1: \"Doble\",\n      2: \"Junior Suite\",\n      3: \"Suite\",\n      4: \"Gran Suite\",\n    };\n    return tipoHabitacionMap[tipoHabitacion] || \"Unknown\";\n  };\n\n  const calculateNights = (checkIn, checkOut) => {\n    const checkInDate = new Date(checkIn);\n    const checkOutDate = new Date(checkOut);\n    const diffTime = Math.abs(checkOutDate.getTime() - checkInDate.getTime());\n    return Math.ceil(diffTime / (1000 * 3600 * 24));\n  };\n\n\n\n  const cancelarReserva = async (idReserva) => {\n    try {\n      const response = await fetch(`http://localhost:8080/reservas/${idReserva}/cancelar`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n      if (!response.ok) {\n        throw new Error('No se pudo cancelar la reserva');\n      }\n      alert('Reserva cancelada con éxito');\n      fetchReservations(); //error tipográfico.\n    } catch (error) {\n      console.error('Error al cancelar la reserva:', error);\n      alert('Error al cancelar la reserva');\n    }\n  };\n\n  const actualizarReserva = async (reservaActualizada) => {\n    console.log('Updating reservation with:', reservaActualizada);\n    try {\n      const response = await fetch(`http://localhost:8080/reservas/${reservaActualizada.idReserva}`, {\n        method: 'PUT',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(reservaActualizada),\n      });\n  \n      if (!response.ok) {\n        if (response.status === 409) {\n          // Conflicto , notifica al usuario\n          alert(\"Habitación no disponible.\");\n        } else {\n          // Otro tipo de error HTTP\n          throw new Error(`Reservation update failed: ${response.statusText}`);\n        }\n      } else {\n        console.log('Reservation updated successfully');\n        // Solo mostramos el botón de notificar cambios si la actualización fue exitosa\n        setShowNotifyButton(true);\n        setShowEditModal(false);\n        await fetchReservations(); // Refresh the list of reservations\n      }\n    } catch (error) {\n      console.error('Error updating reservation:', error);\n      alert(\"Ocurrió un error al actualizar la reserva. Por favor, intenta de nuevo.\");\n      // También en este caso, ocultamos el botón ya que hubo un error\n      setShowNotifyButton(true); // Muestra el botón \"Notificar Cambios\" después de una actualización exitosa\n      setCurrentReservation(reservaActualizada); // Guarda los detalles de la reserva actualizada para usar en la notificación\n    };\n  \n\n\n  const downloadReservationPdf = (reserva) => {\n    const doc = new jsPDF();\n    doc.text(\"Detalle de Reserva\", 14, 16);\n    doc.setFontSize(10);\n\n    // Información de la reserva\n    const reservationDetails = [\n      { title: \"Hotel\", data: reserva.nombreHotel },\n      { title: \"Número de habitación\", data: reserva.numeroHabitacion.toString() }, \n      { title: \"Tipo de habitación\", data: reserva.tipoHabitacion },\n      { title: \"Ubicación\", data: `${reserva.ciudad}, ${reserva.pais} - ${reserva.direccion}` },\n      { title: \"Check-in\", data: reserva.fechaIngreso },\n      { title: \"Check-out\", data: reserva.fechaSalida },\n      { title: \"Número de noches\", data: calculateNights(reserva.fechaIngreso, reserva.fechaSalida).toString() },\n      { title: \"Personas\", data: reserva.capacidadPersonas.toString() },\n      { title: \"Total Reserva\", data: `$${reserva.totalReserva}` },\n      { title: \"Estado\", data: reserva.estadoReserva },\n      { title: \"Código de reserva\", data: reserva.codigoReserva },\n    ];\n\n    doc.autoTable({\n      head: [[\"Detalle\", \"Información\"]],\n      body: reservationDetails.map((item) => [item.title, item.data]),\n      startY: 20,\n    });\n\n    doc.save(`Reserva_${reserva.codigoReserva}.pdf`);\n  };\n\n\n\n\n  const handleNotification = async () => {\n    if (!currentReservation) return;\n  \n    const templateParams = {\n      to_name: user.primer_nombre, // Asumiendo que tienes esta información disponible\n      hotel_name: currentReservation.hotelName,\n      room_number: currentReservation.roomNumber.toString(),\n      room_type: translateTipoHabitacion(currentReservation.tipoHabitacion),\n      location: `${currentReservation.ciudad}, ${currentReservation.pais} - ${currentReservation.direccion}`,\n      check_in_date: currentReservation.fechaIngreso,\n      check_out_date: currentReservation.fechaSalida,\n      total_nights: calculateNights(currentReservation.fechaIngreso, currentReservation.fechaSalida).toString(),\n      total_people: currentReservation.personasReserva.toString(),\n      total_price: `$${currentReservation.totalReserva.toFixed(2)}`,\n      reservation_status: currentReservation.estadoReserva,\n      reservation_code: currentReservation.codigoReserva.toString(),\n      to_email: user.email, // Asumiendo que esta es la dirección de correo electrónico del usuario\n    };\n  \n    try {\n      await emailjs.send('service_db-dw2', 'template_vhblb7c', templateParams, '83TAqc_7hHgnfdESC');\n      console.log('Notificación de cambio enviada!');\n      setShowNotifyButton(false); // Esconde el botón después de enviar el correo\n    } catch (error) {\n      console.error('Error al enviar notificación de cambio:', error.text);\n    }\n  };\n  \n  \n\n\n\n  return (\n    <div className=\"booking-history-container\">\n      <h2 className=\"text-center\">Historial de Reservas</h2>\n      {reservations.length > 0 ? (\n        reservations.map((reserva) => (\n          <Card key={reserva.idReserva} className=\"mb-4 shadow\">\n            <Card.Header as=\"h5\" className=\"font-weight-bold\">\n              Reserva #{reserva.codigoReserva} - {reserva.correoElectronico}\n            </Card.Header>\n            <Card.Body>\n              <Card.Title>{reserva.nombreHotel}</Card.Title>\n              <Card.Subtitle className=\"mb-2 text-muted\">\n                {reserva.ciudad}, {reserva.pais} - {reserva.direccion}\n              </Card.Subtitle>\n              <Card.Text>Tipo de habitación: {reserva.tipoHabitacion}</Card.Text>\n              <Card.Text>Número de habitación: {reserva.numeroHabitacion}</Card.Text>\n              <Card.Text>Check-in: {reserva.fechaIngreso}</Card.Text>\n              <Card.Text>Check-out: {reserva.fechaSalida}</Card.Text>\n              <Card.Text>Número de noches: {calculateNights(reserva.fechaIngreso, reserva.fechaSalida)}</Card.Text>\n              <Card.Text>Personas: {reserva.capacidadPersonas}</Card.Text>\n              <Card.Text>Total Reserva: ${reserva.totalReserva}</Card.Text>\n              <Card.Text>Estado: {reserva.estadoReserva}</Card.Text>\n              {reserva.estadoReserva !== \"Cancelada\" && (\n                <>\n                  <Button variant=\"warning\" onClick={() => handleEdit(reserva)}>Editar</Button>\n                  <Button variant=\"danger\" onClick={() => cancelarReserva(reserva.idReserva)}>Cancelar</Button>\n                </>\n              )}\n              <Button variant=\"info\" onClick={() => downloadReservationPdf(reserva)}>Descargar</Button>\n            </Card.Body>\n            </Card>\n       ))\n       ) : (\n         <p className=\"text-center\">No se encontraron reservas.</p>\n       )}\n       {showNotifyButton && (\n         <Button variant=\"info\" onClick={handleNotification}>Notificar Cambios</Button>\n       )}\n       {currentReservation && (\n         <EditReservationAdmin\n           show={showEditModal}\n           handleClose={handleEditClose}\n           reserva={currentReservation}\n           actualizarReserva={actualizarReserva}\n         />\n       )}\n     </div>\n   );\n };\n}\n export default AdministrarReservas;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,MAAM,EAAEC,IAAI,QAAQ,iBAAiB;AAC9C,SAASC,OAAO,QAAQ,eAAe;AACvC,OAAOC,oBAAoB,MAAM,mBAAmB;AACpD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,iBAAiB;AACxB,OAAOC,OAAO,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAElC,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM;IAAEe;EAAK,CAAC,GAAGZ,OAAO,CAAC,CAAC;EAC1B,MAAM,CAACa,aAAa,EAAEC,gBAAgB,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAACkB,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EAClE,MAAM,CAACoB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGrB,QAAQ,CAAC,KAAK,CAAC;EAGjED,SAAS,CAAC,MAAM;IACd,IAAIgB,IAAI,EAAE;MACRO,iBAAiB,CAAC,CAAC;IACrB;EACF,CAAC,EAAE,CAACP,IAAI,CAAC,CAAC;EAIV,MAAMO,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpCC,OAAO,CAACC,GAAG,CAAC,iCAAiC,EAAET,IAAI,CAACU,EAAE,CAAC;IACvD,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,8CAA6C,CAAC;MAC5E,IAAID,QAAQ,CAACE,EAAE,EAAE;QACf,MAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;QAClCP,OAAO,CAACC,GAAG,CAAC,oCAAoC,EAAEK,IAAI,CAAC;QACvDf,eAAe,CAACe,IAAI,CAACE,GAAG,CAACC,OAAO,KAAK;UACnC,GAAGA,OAAO;UACVC,cAAc,EAAEC,uBAAuB,CAACF,OAAO,CAACC,cAAc,CAAC;UAC/DE,OAAO,EAAEH,OAAO,CAACG,OAAO;UAAE;UAC1BC,YAAY,EAAEJ,OAAO,CAACI;QACxB,CAAC,CAAC,CAAC,CAAC;MACN,CAAC,MAAM;QACLb,OAAO,CAACc,KAAK,CAAC,+BAA+B,CAAC;MAChD;IACF,CAAC,CAAC,OAAOA,KAAK,EAAE;MACdd,OAAO,CAACc,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACtD;EACF,CAAC;EAGD,MAAMC,UAAU,GAAIN,OAAO,IAAK;IAC9Bb,qBAAqB,CAACa,OAAO,CAAC;IAC9Bf,gBAAgB,CAAC,IAAI,CAAC;EACxB,CAAC;EAED,MAAMsB,eAAe,GAAGA,CAAA,KAAM;IAC5BtB,gBAAgB,CAAC,KAAK,CAAC;IACvBuB,oBAAoB,CAACtB,kBAAkB,CAAC;EAC1C,CAAC;;EAGD;EACA,MAAMgB,uBAAuB,GAAID,cAAc,IAAK;IAClD,MAAMQ,iBAAiB,GAAG;MACxB,CAAC,EAAE,OAAO;MACV,CAAC,EAAE,cAAc;MACjB,CAAC,EAAE,OAAO;MACV,CAAC,EAAE;IACL,CAAC;IACD,OAAOA,iBAAiB,CAACR,cAAc,CAAC,IAAI,SAAS;EACvD,CAAC;EAED,MAAMS,eAAe,GAAGA,CAACC,OAAO,EAAEC,QAAQ,KAAK;IAC7C,MAAMC,WAAW,GAAG,IAAIC,IAAI,CAACH,OAAO,CAAC;IACrC,MAAMI,YAAY,GAAG,IAAID,IAAI,CAACF,QAAQ,CAAC;IACvC,MAAMI,QAAQ,GAAGC,IAAI,CAACC,GAAG,CAACH,YAAY,CAACI,OAAO,CAAC,CAAC,GAAGN,WAAW,CAACM,OAAO,CAAC,CAAC,CAAC;IACzE,OAAOF,IAAI,CAACG,IAAI,CAACJ,QAAQ,IAAI,IAAI,GAAG,IAAI,GAAG,EAAE,CAAC,CAAC;EACjD,CAAC;EAID,MAAMK,eAAe,GAAG,MAAOC,SAAS,IAAK;IAC3C,IAAI;MACF,MAAM5B,QAAQ,GAAG,MAAMC,KAAK,CAAE,kCAAiC2B,SAAU,WAAU,EAAE;QACnFC,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MACF,IAAI,CAAC9B,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAI6B,KAAK,CAAC,gCAAgC,CAAC;MACnD;MACAC,KAAK,CAAC,6BAA6B,CAAC;MACpCpC,iBAAiB,CAAC,CAAC,CAAC,CAAC;IACvB,CAAC,CAAC,OAAOe,KAAK,EAAE;MACdd,OAAO,CAACc,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACrDqB,KAAK,CAAC,8BAA8B,CAAC;IACvC;EACF,CAAC;EAED,MAAMC,iBAAiB,GAAG,MAAOC,kBAAkB,IAAK;IACtDrC,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEoC,kBAAkB,CAAC;IAC7D,IAAI;MACF,MAAMlC,QAAQ,GAAG,MAAMC,KAAK,CAAE,kCAAiCiC,kBAAkB,CAACN,SAAU,EAAC,EAAE;QAC7FC,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CK,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACH,kBAAkB;MACzC,CAAC,CAAC;MAEF,IAAI,CAAClC,QAAQ,CAACE,EAAE,EAAE;QAChB,IAAIF,QAAQ,CAACsC,MAAM,KAAK,GAAG,EAAE;UAC3B;UACAN,KAAK,CAAC,2BAA2B,CAAC;QACpC,CAAC,MAAM;UACL;UACA,MAAM,IAAID,KAAK,CAAE,8BAA6B/B,QAAQ,CAACuC,UAAW,EAAC,CAAC;QACtE;MACF,CAAC,MAAM;QACL1C,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC;QAC/C;QACAH,mBAAmB,CAAC,IAAI,CAAC;QACzBJ,gBAAgB,CAAC,KAAK,CAAC;QACvB,MAAMK,iBAAiB,CAAC,CAAC,CAAC,CAAC;MAC7B;IACF,CAAC,CAAC,OAAOe,KAAK,EAAE;MACdd,OAAO,CAACc,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACnDqB,KAAK,CAAC,yEAAyE,CAAC;MAChF;MACArC,mBAAmB,CAAC,IAAI,CAAC,CAAC,CAAC;MAC3BF,qBAAqB,CAACyC,kBAAkB,CAAC,CAAC,CAAC;IAC7C;IAAC;IAIH,MAAMM,sBAAsB,GAAIlC,OAAO,IAAK;MAC1C,MAAMmC,GAAG,GAAG,IAAI9D,KAAK,CAAC,CAAC;MACvB8D,GAAG,CAACC,IAAI,CAAC,oBAAoB,EAAE,EAAE,EAAE,EAAE,CAAC;MACtCD,GAAG,CAACE,WAAW,CAAC,EAAE,CAAC;;MAEnB;MACA,MAAMC,kBAAkB,GAAG,CACzB;QAAEC,KAAK,EAAE,OAAO;QAAE1C,IAAI,EAAEG,OAAO,CAACwC;MAAY,CAAC,EAC7C;QAAED,KAAK,EAAE,sBAAsB;QAAE1C,IAAI,EAAEG,OAAO,CAACyC,gBAAgB,CAACC,QAAQ,CAAC;MAAE,CAAC,EAC5E;QAAEH,KAAK,EAAE,oBAAoB;QAAE1C,IAAI,EAAEG,OAAO,CAACC;MAAe,CAAC,EAC7D;QAAEsC,KAAK,EAAE,WAAW;QAAE1C,IAAI,EAAG,GAAEG,OAAO,CAAC2C,MAAO,KAAI3C,OAAO,CAAC4C,IAAK,MAAK5C,OAAO,CAAC6C,SAAU;MAAE,CAAC,EACzF;QAAEN,KAAK,EAAE,UAAU;QAAE1C,IAAI,EAAEG,OAAO,CAAC8C;MAAa,CAAC,EACjD;QAAEP,KAAK,EAAE,WAAW;QAAE1C,IAAI,EAAEG,OAAO,CAAC+C;MAAY,CAAC,EACjD;QAAER,KAAK,EAAE,kBAAkB;QAAE1C,IAAI,EAAEa,eAAe,CAACV,OAAO,CAAC8C,YAAY,EAAE9C,OAAO,CAAC+C,WAAW,CAAC,CAACL,QAAQ,CAAC;MAAE,CAAC,EAC1G;QAAEH,KAAK,EAAE,UAAU;QAAE1C,IAAI,EAAEG,OAAO,CAACgD,iBAAiB,CAACN,QAAQ,CAAC;MAAE,CAAC,EACjE;QAAEH,KAAK,EAAE,eAAe;QAAE1C,IAAI,EAAG,IAAGG,OAAO,CAACiD,YAAa;MAAE,CAAC,EAC5D;QAAEV,KAAK,EAAE,QAAQ;QAAE1C,IAAI,EAAEG,OAAO,CAACkD;MAAc,CAAC,EAChD;QAAEX,KAAK,EAAE,mBAAmB;QAAE1C,IAAI,EAAEG,OAAO,CAACmD;MAAc,CAAC,CAC5D;MAEDhB,GAAG,CAACiB,SAAS,CAAC;QACZC,IAAI,EAAE,CAAC,CAAC,SAAS,EAAE,aAAa,CAAC,CAAC;QAClCxB,IAAI,EAAES,kBAAkB,CAACvC,GAAG,CAAEuD,IAAI,IAAK,CAACA,IAAI,CAACf,KAAK,EAAEe,IAAI,CAACzD,IAAI,CAAC,CAAC;QAC/D0D,MAAM,EAAE;MACV,CAAC,CAAC;MAEFpB,GAAG,CAACqB,IAAI,CAAE,WAAUxD,OAAO,CAACmD,aAAc,MAAK,CAAC;IAClD,CAAC;IAKD,MAAMM,kBAAkB,GAAG,MAAAA,CAAA,KAAY;MACrC,IAAI,CAACvE,kBAAkB,EAAE;MAEzB,MAAMwE,cAAc,GAAG;QACrBC,OAAO,EAAE5E,IAAI,CAAC6E,aAAa;QAAE;QAC7BC,UAAU,EAAE3E,kBAAkB,CAAC4E,SAAS;QACxCC,WAAW,EAAE7E,kBAAkB,CAAC8E,UAAU,CAACtB,QAAQ,CAAC,CAAC;QACrDuB,SAAS,EAAE/D,uBAAuB,CAAChB,kBAAkB,CAACe,cAAc,CAAC;QACrEiE,QAAQ,EAAG,GAAEhF,kBAAkB,CAACyD,MAAO,KAAIzD,kBAAkB,CAAC0D,IAAK,MAAK1D,kBAAkB,CAAC2D,SAAU,EAAC;QACtGsB,aAAa,EAAEjF,kBAAkB,CAAC4D,YAAY;QAC9CsB,cAAc,EAAElF,kBAAkB,CAAC6D,WAAW;QAC9CsB,YAAY,EAAE3D,eAAe,CAACxB,kBAAkB,CAAC4D,YAAY,EAAE5D,kBAAkB,CAAC6D,WAAW,CAAC,CAACL,QAAQ,CAAC,CAAC;QACzG4B,YAAY,EAAEpF,kBAAkB,CAACqF,eAAe,CAAC7B,QAAQ,CAAC,CAAC;QAC3D8B,WAAW,EAAG,IAAGtF,kBAAkB,CAAC+D,YAAY,CAACwB,OAAO,CAAC,CAAC,CAAE,EAAC;QAC7DC,kBAAkB,EAAExF,kBAAkB,CAACgE,aAAa;QACpDyB,gBAAgB,EAAEzF,kBAAkB,CAACiE,aAAa,CAACT,QAAQ,CAAC,CAAC;QAC7DkC,QAAQ,EAAE7F,IAAI,CAAC8F,KAAK,CAAE;MACxB,CAAC;MAED,IAAI;QACF,MAAMvG,OAAO,CAACwG,IAAI,CAAC,gBAAgB,EAAE,kBAAkB,EAAEpB,cAAc,EAAE,mBAAmB,CAAC;QAC7FnE,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC;QAC9CH,mBAAmB,CAAC,KAAK,CAAC,CAAC,CAAC;MAC9B,CAAC,CAAC,OAAOgB,KAAK,EAAE;QACdd,OAAO,CAACc,KAAK,CAAC,yCAAyC,EAAEA,KAAK,CAAC+B,IAAI,CAAC;MACtE;IACF,CAAC;IAMD,oBACE5D,OAAA;MAAKuG,SAAS,EAAC,2BAA2B;MAAAC,QAAA,gBACxCxG,OAAA;QAAIuG,SAAS,EAAC,aAAa;QAAAC,QAAA,EAAC;MAAqB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACrDvG,YAAY,CAACwG,MAAM,GAAG,CAAC,GACtBxG,YAAY,CAACkB,GAAG,CAAEC,OAAO,iBACvBxB,OAAA,CAACN,IAAI;QAAyB6G,SAAS,EAAC,aAAa;QAAAC,QAAA,gBACnDxG,OAAA,CAACN,IAAI,CAACoH,MAAM;UAACC,EAAE,EAAC,IAAI;UAACR,SAAS,EAAC,kBAAkB;UAAAC,QAAA,GAAC,WACvC,EAAChF,OAAO,CAACmD,aAAa,EAAC,KAAG,EAACnD,OAAO,CAACwF,iBAAiB;QAAA;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClD,CAAC,eACd5G,OAAA,CAACN,IAAI,CAACuH,IAAI;UAAAT,QAAA,gBACRxG,OAAA,CAACN,IAAI,CAACwH,KAAK;YAAAV,QAAA,EAAEhF,OAAO,CAACwC;UAAW;YAAAyC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAa,CAAC,eAC9C5G,OAAA,CAACN,IAAI,CAACyH,QAAQ;YAACZ,SAAS,EAAC,iBAAiB;YAAAC,QAAA,GACvChF,OAAO,CAAC2C,MAAM,EAAC,IAAE,EAAC3C,OAAO,CAAC4C,IAAI,EAAC,KAAG,EAAC5C,OAAO,CAAC6C,SAAS;UAAA;YAAAoC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxC,CAAC,eAChB5G,OAAA,CAACN,IAAI,CAAC0H,IAAI;YAAAZ,QAAA,GAAC,yBAAoB,EAAChF,OAAO,CAACC,cAAc;UAAA;YAAAgF,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eACnE5G,OAAA,CAACN,IAAI,CAAC0H,IAAI;YAAAZ,QAAA,GAAC,8BAAsB,EAAChF,OAAO,CAACyC,gBAAgB;UAAA;YAAAwC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eACvE5G,OAAA,CAACN,IAAI,CAAC0H,IAAI;YAAAZ,QAAA,GAAC,YAAU,EAAChF,OAAO,CAAC8C,YAAY;UAAA;YAAAmC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eACvD5G,OAAA,CAACN,IAAI,CAAC0H,IAAI;YAAAZ,QAAA,GAAC,aAAW,EAAChF,OAAO,CAAC+C,WAAW;UAAA;YAAAkC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eACvD5G,OAAA,CAACN,IAAI,CAAC0H,IAAI;YAAAZ,QAAA,GAAC,uBAAkB,EAACtE,eAAe,CAACV,OAAO,CAAC8C,YAAY,EAAE9C,OAAO,CAAC+C,WAAW,CAAC;UAAA;YAAAkC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eACrG5G,OAAA,CAACN,IAAI,CAAC0H,IAAI;YAAAZ,QAAA,GAAC,YAAU,EAAChF,OAAO,CAACgD,iBAAiB;UAAA;YAAAiC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eAC5D5G,OAAA,CAACN,IAAI,CAAC0H,IAAI;YAAAZ,QAAA,GAAC,kBAAgB,EAAChF,OAAO,CAACiD,YAAY;UAAA;YAAAgC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eAC7D5G,OAAA,CAACN,IAAI,CAAC0H,IAAI;YAAAZ,QAAA,GAAC,UAAQ,EAAChF,OAAO,CAACkD,aAAa;UAAA;YAAA+B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,EACrDpF,OAAO,CAACkD,aAAa,KAAK,WAAW,iBACpC1E,OAAA,CAAAE,SAAA;YAAAsG,QAAA,gBACExG,OAAA,CAACP,MAAM;cAAC4H,OAAO,EAAC,SAAS;cAACC,OAAO,EAAEA,CAAA,KAAMxF,UAAU,CAACN,OAAO,CAAE;cAAAgF,QAAA,EAAC;YAAM;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eAC7E5G,OAAA,CAACP,MAAM;cAAC4H,OAAO,EAAC,QAAQ;cAACC,OAAO,EAAEA,CAAA,KAAMzE,eAAe,CAACrB,OAAO,CAACsB,SAAS,CAAE;cAAA0D,QAAA,EAAC;YAAQ;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA,eAC7F,CACH,eACD5G,OAAA,CAACP,MAAM;YAAC4H,OAAO,EAAC,MAAM;YAACC,OAAO,EAAEA,CAAA,KAAM5D,sBAAsB,CAAClC,OAAO,CAAE;YAAAgF,QAAA,EAAC;UAAS;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChF,CAAC;MAAA,GAxBHpF,OAAO,CAACsB,SAAS;QAAA2D,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAyBpB,CACV,CAAC,gBAEA5G,OAAA;QAAGuG,SAAS,EAAC,aAAa;QAAAC,QAAA,EAAC;MAA2B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAC1D,EACAhG,gBAAgB,iBACfZ,OAAA,CAACP,MAAM;QAAC4H,OAAO,EAAC,MAAM;QAACC,OAAO,EAAErC,kBAAmB;QAAAuB,QAAA,EAAC;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAC9E,EACAlG,kBAAkB,iBACjBV,OAAA,CAACJ,oBAAoB;QACnB2H,IAAI,EAAE/G,aAAc;QACpBgH,WAAW,EAAEzF,eAAgB;QAC7BP,OAAO,EAAEd,kBAAmB;QAC5ByC,iBAAiB,EAAEA;MAAkB;QAAAsD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtC,CACF;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAEV,CAAC;AACF,CAAC;AAAAxG,EAAA,CA3OKD,mBAAmB;EAAA,QAEJR,OAAO;AAAA;AAAA8H,EAAA,GAFtBtH,mBAAmB;AA4OxB,eAAeA,mBAAmB;AAAC,IAAAsH,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}