{"ast":null,"code":"var _jsxFileName = \"/home/pmorales/Downloads/Proyecto-B2B/Hotel/frontend/sistema_hoteles/src/components/AdministrarReservas.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Button, Card, Modal, Form } from 'react-bootstrap';\nimport { useUser } from './UserContext';\nimport EditReservationPage from './EditReservationPage';\nimport jsPDF from 'jspdf';\nimport 'jspdf-autotable';\nimport emailjs from 'emailjs-com';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AdministrarReservas = () => {\n  _s();\n  const [reservations, setReservations] = useState([]);\n  const {\n    user\n  } = useUser();\n  const [showEditModal, setShowEditModal] = useState(false);\n  const [currentReservation, setCurrentReservation] = useState(null);\n  const [editedReservation, setEditedReservation] = useState(null);\n  const [showCommentModal, setShowCommentModal] = useState(false);\n  const [comment, setComment] = useState('');\n  useEffect(() => {\n    if (user) {\n      fetchReservations();\n    }\n  }, [user]);\n  const fetchReservations = async () => {\n    console.log('Fetching reservations for user:', user.id);\n    try {\n      const response = await fetch(`http://localhost:8080/reservas/detalle/todas`);\n      if (response.ok) {\n        const data = await response.json();\n        console.log('Reservations fetched successfully:', data);\n        setReservations(data.map(reserva => ({\n          ...reserva,\n          tipoHabitacion: translateTipoHabitacion(reserva.tipoHabitacion),\n          idHotel: reserva.idHotel,\n          idHabitacion: reserva.idHabitacion\n        })));\n      } else {\n        console.error(\"Failed to fetch reservations.\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching reservations:\", error);\n    }\n  };\n\n  // a numero\n  const translateTipoHabitacion = tipoHabitacion => {\n    const tipoHabitacionMap = {\n      1: \"Doble\",\n      2: \"Junior Suite\",\n      3: \"Suite\",\n      4: \"Gran Suite\"\n    };\n    return tipoHabitacionMap[tipoHabitacion] || \"Unknown\";\n  };\n  const calculateNights = (checkIn, checkOut) => {\n    const checkInDate = new Date(checkIn);\n    const checkOutDate = new Date(checkOut);\n    const diffTime = Math.abs(checkOutDate.getTime() - checkInDate.getTime());\n    return Math.ceil(diffTime / (1000 * 3600 * 24));\n  };\n  const handleEdit = reserva => {\n    console.log('Opening edit modal for reservation:', reserva.idReserva);\n    setCurrentReservation(reserva);\n    setShowEditModal(true);\n  };\n  const cancelarReserva = async idReserva => {\n    try {\n      const response = await fetch(`http://localhost:8080/reservas/${idReserva}/cancelar`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) {\n        throw new Error('No se pudo cancelar la reserva');\n      }\n      alert('Reserva cancelada con éxito');\n      fetchReservations(); //error tipográfico.\n    } catch (error) {\n      console.error('Error al cancelar la reserva:', error);\n      alert('Error al cancelar la reserva');\n    }\n  };\n  const actualizarReserva = async reservaActualizada => {\n    console.log('Updating reservation with:', reservaActualizada);\n    try {\n      const response = await fetch(`http://localhost:8080/reservas/${reservaActualizada.idReserva}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(reservaActualizada)\n      });\n      if (!response.ok) {\n        if (response.status === 409) {\n          // Conflicto , notifica al usuario\n          alert(\"Habitación no disponible.\");\n        } else {\n          // Otro tipo de error HTTP\n          throw new Error(`Reservation update failed: ${response.statusText}`);\n        }\n      } else {\n        console.log('Reservation updated successfully');\n        setShowEditModal(false);\n        await fetchReservations(); // Refresca lalista de reservaciones\n      }\n    } catch (error) {\n      console.error('Error updating reservation:', error);\n      alert(\"Ocurrió un error al actualizar la reserva. Por favor, intenta de nuevo.\");\n    }\n  };\n  const downloadReservationPdf = reserva => {\n    const doc = new jsPDF();\n    doc.text(\"Detalle de Reserva\", 14, 16);\n    doc.setFontSize(10);\n\n    // Información de la reserva\n    const reservationDetails = [{\n      title: \"Hotel\",\n      data: reserva.nombreHotel\n    }, {\n      title: \"Número de habitación\",\n      data: reserva.numeroHabitacion.toString()\n    }, {\n      title: \"Tipo de habitación\",\n      data: reserva.tipoHabitacion\n    }, {\n      title: \"Ubicación\",\n      data: `${reserva.ciudad}, ${reserva.pais} - ${reserva.direccion}`\n    }, {\n      title: \"Check-in\",\n      data: reserva.fechaIngreso\n    }, {\n      title: \"Check-out\",\n      data: reserva.fechaSalida\n    }, {\n      title: \"Número de noches\",\n      data: calculateNights(reserva.fechaIngreso, reserva.fechaSalida).toString()\n    }, {\n      title: \"Personas\",\n      data: reserva.capacidadPersonas.toString()\n    }, {\n      title: \"Total Reserva\",\n      data: `$${reserva.totalReserva}`\n    }, {\n      title: \"Estado\",\n      data: reserva.estadoReserva\n    }, {\n      title: \"Código de reserva\",\n      data: reserva.codigoReserva\n    }];\n    doc.autoTable({\n      head: [[\"Detalle\", \"Información\"]],\n      body: reservationDetails.map(item => [item.title, item.data]),\n      startY: 20\n    });\n    doc.save(`Reserva_${reserva.codigoReserva}.pdf`);\n  };\n  const openNotificarCambiosModal = reserva => {\n    setCurrentReservation(reserva);\n    setShowCommentModal(true);\n  };\n  const handleNotificarCambios = async reserva => {\n    const translatedRoomType = translateTipoHabitacion(reserva.tipoHabitacion.toString());\n    const templateParams = {\n      to_name: user.primer_nombre,\n      hotel_name: reserva.nombreHotel,\n      room_number: reserva.numeroHabitacion.toString() || \"No especificado\",\n      room_type: reserva.tipoHabitacion,\n      location: `${reserva.ciudad}, ${reserva.pais} - ${reserva.direccion}`,\n      check_in_date: reserva.fechaIngreso,\n      check_out_date: reserva.fechaSalida,\n      total_nights: calculateNights(reserva.fechaIngreso, reserva.fechaSalida).toString(),\n      total_people: reserva.capacidadPersonas.toString(),\n      total_price: `$${reserva.totalReserva.toFixed(2)}`,\n      reservation_status: reserva.estadoReserva,\n      reservation_code: reserva.codigoReserva.toString(),\n      to_email: user.email,\n      comment\n    };\n    try {\n      const result = await emailjs.send('service_db-dw2', 'template_vhblb7c', templateParams, '83TAqc_7hHgnfdESC');\n      console.log('Email successfully sent!', result.text);\n    } catch (error) {\n      console.error('Error al enviar notificación de cambio:', error.text);\n    }\n    setShowCommentModal(false);\n    setComment('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"booking-history-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-center\",\n      children: \"Historial de Reservas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this), reservations.length > 0 ? reservations.map(reserva => /*#__PURE__*/_jsxDEV(Card, {\n      className: \"mb-4 shadow\",\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        as: \"h5\",\n        className: \"font-weight-bold\",\n        children: [\"Reserva #\", reserva.codigoReserva, \" - \", reserva.correoElectronico]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          children: reserva.nombreHotel\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Card.Subtitle, {\n          className: \"mb-2 text-muted\",\n          children: [reserva.ciudad, \", \", reserva.pais, \" - \", reserva.direccion]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: [\"Tipo de habitaci\\xF3n: \", reserva.tipoHabitacion]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: [\"N\\xFAmero de habitaci\\xF3n: \", reserva.numeroHabitacion]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: [\"Check-in: \", reserva.fechaIngreso]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: [\"Check-out: \", reserva.fechaSalida]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: [\"N\\xFAmero de noches: \", calculateNights(reserva.fechaIngreso, reserva.fechaSalida)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: [\"Personas: \", reserva.capacidadPersonas]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: [\"Total Reserva: $\", reserva.totalReserva]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: [\"Estado: \", reserva.estadoReserva]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 15\n        }, this), reserva.estadoReserva !== \"Cancelada\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"warning\",\n            onClick: () => handleEdit(reserva),\n            children: \"Editar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"danger\",\n            onClick: () => cancelarReserva(reserva.idReserva),\n            children: \"Cancelar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"info\",\n          onClick: () => downloadReservationPdf(reserva),\n          children: \"Descargar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"warning\",\n          onClick: () => handleNotificarCambios(reserva),\n          children: \"Notificar cambios\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 13\n      }, this)]\n    }, reserva.idReserva, true, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-center\",\n      children: \"No se encontraron reservas.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 9\n    }, this), currentReservation && /*#__PURE__*/_jsxDEV(EditReservationPage, {\n      show: showEditModal,\n      handleClose: () => setShowEditModal(false),\n      reserva: currentReservation,\n      actualizarReserva: actualizarReserva\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: commentModalShow,\n      onHide: () => setCommentModalShow(false),\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Incluir Comentario\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Comentario\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"textarea\",\n            rows: \"3\",\n            value: comment,\n            onChange: e => setComment(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: () => setCommentModalShow(false),\n          children: \"Cerrar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleNotificarCambios,\n          children: \"Enviar Notificaci\\xF3n\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 191,\n    columnNumber: 5\n  }, this);\n};\n_s(AdministrarReservas, \"uHwwfmg17LsZBkJrytqRK3E7m20=\", false, function () {\n  return [useUser];\n});\n_c = AdministrarReservas;\nexport default AdministrarReservas;\nvar _c;\n$RefreshReg$(_c, \"AdministrarReservas\");","map":{"version":3,"names":["React","useEffect","useState","Button","Card","Modal","Form","useUser","EditReservationPage","jsPDF","emailjs","jsxDEV","_jsxDEV","Fragment","_Fragment","AdministrarReservas","_s","reservations","setReservations","user","showEditModal","setShowEditModal","currentReservation","setCurrentReservation","editedReservation","setEditedReservation","showCommentModal","setShowCommentModal","comment","setComment","fetchReservations","console","log","id","response","fetch","ok","data","json","map","reserva","tipoHabitacion","translateTipoHabitacion","idHotel","idHabitacion","error","tipoHabitacionMap","calculateNights","checkIn","checkOut","checkInDate","Date","checkOutDate","diffTime","Math","abs","getTime","ceil","handleEdit","idReserva","cancelarReserva","method","headers","Error","alert","actualizarReserva","reservaActualizada","body","JSON","stringify","status","statusText","downloadReservationPdf","doc","text","setFontSize","reservationDetails","title","nombreHotel","numeroHabitacion","toString","ciudad","pais","direccion","fechaIngreso","fechaSalida","capacidadPersonas","totalReserva","estadoReserva","codigoReserva","autoTable","head","item","startY","save","openNotificarCambiosModal","handleNotificarCambios","translatedRoomType","templateParams","to_name","primer_nombre","hotel_name","room_number","room_type","location","check_in_date","check_out_date","total_nights","total_people","total_price","toFixed","reservation_status","reservation_code","to_email","email","result","send","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","Header","as","correoElectronico","Body","Title","Subtitle","Text","variant","onClick","show","handleClose","commentModalShow","onHide","setCommentModalShow","closeButton","Group","Label","Control","rows","value","onChange","e","target","Footer","_c","$RefreshReg$"],"sources":["/home/pmorales/Downloads/Proyecto-B2B/Hotel/frontend/sistema_hoteles/src/components/AdministrarReservas.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Button, Card, Modal, Form } from 'react-bootstrap';\nimport { useUser } from './UserContext';\nimport EditReservationPage from './EditReservationPage';\nimport jsPDF from 'jspdf';\nimport 'jspdf-autotable';\nimport emailjs from 'emailjs-com';\n\n\nconst AdministrarReservas = () => {\n  const [reservations, setReservations] = useState([]);\n  const { user } = useUser();\n  const [showEditModal, setShowEditModal] = useState(false);\n  const [currentReservation, setCurrentReservation] = useState(null);\n  const [editedReservation, setEditedReservation] = useState(null);\n  const [showCommentModal, setShowCommentModal] = useState(false);\n  const [comment, setComment] = useState('');\n\n\n  useEffect(() => {\n    if (user) {\n      fetchReservations();\n    }\n  }, [user]);\n\n  const fetchReservations = async () => {\n    console.log('Fetching reservations for user:', user.id);\n    try {\n      const response = await fetch(`http://localhost:8080/reservas/detalle/todas`);\n      if (response.ok) {\n        const data = await response.json();\n        console.log('Reservations fetched successfully:', data);\n        setReservations(data.map(reserva => ({\n          ...reserva,\n          tipoHabitacion: translateTipoHabitacion(reserva.tipoHabitacion),\n          idHotel: reserva.idHotel, \n          idHabitacion: reserva.idHabitacion\n        })));\n      } else {\n        console.error(\"Failed to fetch reservations.\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching reservations:\", error);\n    }\n  };\n\n  // a numero\n  const translateTipoHabitacion = (tipoHabitacion) => {\n    const tipoHabitacionMap = {\n      1: \"Doble\",\n      2: \"Junior Suite\",\n      3: \"Suite\",\n      4: \"Gran Suite\",\n    };\n    return tipoHabitacionMap[tipoHabitacion] || \"Unknown\";\n  };\n\n  const calculateNights = (checkIn, checkOut) => {\n    const checkInDate = new Date(checkIn);\n    const checkOutDate = new Date(checkOut);\n    const diffTime = Math.abs(checkOutDate.getTime() - checkInDate.getTime());\n    return Math.ceil(diffTime / (1000 * 3600 * 24));\n  };\n\n  const handleEdit = (reserva) => {\n    console.log('Opening edit modal for reservation:', reserva.idReserva);\n    setCurrentReservation(reserva);\n    setShowEditModal(true);\n  };\n\n  const cancelarReserva = async (idReserva) => {\n    try {\n      const response = await fetch(`http://localhost:8080/reservas/${idReserva}/cancelar`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n      if (!response.ok) {\n        throw new Error('No se pudo cancelar la reserva');\n      }\n      alert('Reserva cancelada con éxito');\n      fetchReservations(); //error tipográfico.\n    } catch (error) {\n      console.error('Error al cancelar la reserva:', error);\n      alert('Error al cancelar la reserva');\n    }\n  };\n\n  const actualizarReserva = async (reservaActualizada) => {\n    console.log('Updating reservation with:', reservaActualizada);\n    try {\n      const response = await fetch(`http://localhost:8080/reservas/${reservaActualizada.idReserva}`, {\n        method: 'PUT',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(reservaActualizada),\n      });\n  \n      if (!response.ok) {\n        if (response.status === 409) {\n          // Conflicto , notifica al usuario\n          alert(\"Habitación no disponible.\");\n        } else {\n          // Otro tipo de error HTTP\n          throw new Error(`Reservation update failed: ${response.statusText}`);\n        }\n      } else {\n        console.log('Reservation updated successfully');\n        setShowEditModal(false);\n        await fetchReservations(); // Refresca lalista de reservaciones\n      }\n    } catch (error) {\n      console.error('Error updating reservation:', error);\n      alert(\"Ocurrió un error al actualizar la reserva. Por favor, intenta de nuevo.\");\n    }\n  };\n  \n\n\n  const downloadReservationPdf = (reserva) => {\n    const doc = new jsPDF();\n    doc.text(\"Detalle de Reserva\", 14, 16);\n    doc.setFontSize(10);\n\n    // Información de la reserva\n    const reservationDetails = [\n      { title: \"Hotel\", data: reserva.nombreHotel },\n      { title: \"Número de habitación\", data: reserva.numeroHabitacion.toString() }, \n      { title: \"Tipo de habitación\", data: reserva.tipoHabitacion },\n      { title: \"Ubicación\", data: `${reserva.ciudad}, ${reserva.pais} - ${reserva.direccion}` },\n      { title: \"Check-in\", data: reserva.fechaIngreso },\n      { title: \"Check-out\", data: reserva.fechaSalida },\n      { title: \"Número de noches\", data: calculateNights(reserva.fechaIngreso, reserva.fechaSalida).toString() },\n      { title: \"Personas\", data: reserva.capacidadPersonas.toString() },\n      { title: \"Total Reserva\", data: `$${reserva.totalReserva}` },\n      { title: \"Estado\", data: reserva.estadoReserva },\n      { title: \"Código de reserva\", data: reserva.codigoReserva },\n    ];\n\n    doc.autoTable({\n      head: [[\"Detalle\", \"Información\"]],\n      body: reservationDetails.map((item) => [item.title, item.data]),\n      startY: 20,\n    });\n\n    doc.save(`Reserva_${reserva.codigoReserva}.pdf`);\n  };\n  \n\n  const openNotificarCambiosModal = (reserva) => {\n    setCurrentReservation(reserva);\n    setShowCommentModal(true);\n  };\n\n\n  const handleNotificarCambios = async (reserva) => {\n    const translatedRoomType = translateTipoHabitacion(reserva.tipoHabitacion.toString());\n\n    const templateParams = {\n      to_name: user.primer_nombre,\n      hotel_name: reserva.nombreHotel,\n      room_number: reserva.numeroHabitacion.toString() || \"No especificado\", \n      room_type: reserva.tipoHabitacion, \n      location: `${reserva.ciudad}, ${reserva.pais} - ${reserva.direccion}`,\n      check_in_date: reserva.fechaIngreso,\n      check_out_date: reserva.fechaSalida,\n      total_nights: calculateNights(reserva.fechaIngreso, reserva.fechaSalida).toString(),\n      total_people: reserva.capacidadPersonas.toString(),\n      total_price: `$${reserva.totalReserva.toFixed(2)}`,\n      reservation_status: reserva.estadoReserva,\n      reservation_code: reserva.codigoReserva.toString(), \n      to_email: user.email, \n      comment, \n    };\n\n    try {\n      const result = await emailjs.send('service_db-dw2', 'template_vhblb7c', templateParams, '83TAqc_7hHgnfdESC');\n      console.log('Email successfully sent!', result.text);\n      \n    } catch (error) {\n      console.error('Error al enviar notificación de cambio:', error.text);\n    }\n    setShowCommentModal(false); \n    setComment(''); \n  };\n\n\n\n\n  return (\n    <div className=\"booking-history-container\">\n      <h2 className=\"text-center\">Historial de Reservas</h2>\n      {reservations.length > 0 ? (\n        reservations.map((reserva) => (\n          <Card key={reserva.idReserva} className=\"mb-4 shadow\">\n            <Card.Header as=\"h5\" className=\"font-weight-bold\">\n              Reserva #{reserva.codigoReserva} - {reserva.correoElectronico}\n            </Card.Header>\n            <Card.Body>\n              <Card.Title>{reserva.nombreHotel}</Card.Title>\n              <Card.Subtitle className=\"mb-2 text-muted\">\n                {reserva.ciudad}, {reserva.pais} - {reserva.direccion}\n              </Card.Subtitle>\n              <Card.Text>Tipo de habitación: {reserva.tipoHabitacion}</Card.Text>\n              <Card.Text>Número de habitación: {reserva.numeroHabitacion}</Card.Text>\n              <Card.Text>Check-in: {reserva.fechaIngreso}</Card.Text>\n              <Card.Text>Check-out: {reserva.fechaSalida}</Card.Text>\n              <Card.Text>Número de noches: {calculateNights(reserva.fechaIngreso, reserva.fechaSalida)}</Card.Text>\n              <Card.Text>Personas: {reserva.capacidadPersonas}</Card.Text>\n              <Card.Text>Total Reserva: ${reserva.totalReserva}</Card.Text>\n              <Card.Text>Estado: {reserva.estadoReserva}</Card.Text>\n              {reserva.estadoReserva !== \"Cancelada\" && (\n                <>\n                  <Button variant=\"warning\" onClick={() => handleEdit(reserva)}>Editar</Button>\n                  <Button variant=\"danger\" onClick={() => cancelarReserva(reserva.idReserva)}>Cancelar</Button>\n                </>\n              )}\n              <Button variant=\"info\" onClick={() => downloadReservationPdf(reserva)}>Descargar</Button>\n              <Button variant=\"warning\" onClick={() => handleNotificarCambios(reserva)}>Notificar cambios</Button>\n\n            </Card.Body>\n          </Card>\n        \n        ))\n      ) : (\n        <p className=\"text-center\">No se encontraron reservas.</p>\n      )}\n      {currentReservation && (\n        <EditReservationPage\n          show={showEditModal}\n          handleClose={() => setShowEditModal(false)}\n          reserva={currentReservation}\n          actualizarReserva={actualizarReserva}\n        />\n        \n      )}\n            {/* Modal para el comentario */}\n            <Modal show={commentModalShow} onHide={() => setCommentModalShow(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>Incluir Comentario</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form.Group>\n            <Form.Label>Comentario</Form.Label>\n            <Form.Control as=\"textarea\" rows=\"3\" value={comment} onChange={(e) => setComment(e.target.value)} />\n          </Form.Group>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={() => setCommentModalShow(false)}>Cerrar</Button>\n          <Button variant=\"primary\" onClick={handleNotificarCambios}>Enviar Notificación</Button>\n        </Modal.Footer>\n      </Modal>\n    </div>\n  );\n};\n\nexport default AdministrarReservas;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,MAAM,EAAEC,IAAI,EAAEC,KAAK,EAAEC,IAAI,QAAQ,iBAAiB;AAC3D,SAASC,OAAO,QAAQ,eAAe;AACvC,OAAOC,mBAAmB,MAAM,uBAAuB;AACvD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,iBAAiB;AACxB,OAAOC,OAAO,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAGlC,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChC,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM;IAAEiB;EAAK,CAAC,GAAGZ,OAAO,CAAC,CAAC;EAC1B,MAAM,CAACa,aAAa,EAAEC,gBAAgB,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAACoB,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGrB,QAAQ,CAAC,IAAI,CAAC;EAClE,MAAM,CAACsB,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGvB,QAAQ,CAAC,IAAI,CAAC;EAChE,MAAM,CAACwB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGzB,QAAQ,CAAC,KAAK,CAAC;EAC/D,MAAM,CAAC0B,OAAO,EAAEC,UAAU,CAAC,GAAG3B,QAAQ,CAAC,EAAE,CAAC;EAG1CD,SAAS,CAAC,MAAM;IACd,IAAIkB,IAAI,EAAE;MACRW,iBAAiB,CAAC,CAAC;IACrB;EACF,CAAC,EAAE,CAACX,IAAI,CAAC,CAAC;EAEV,MAAMW,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpCC,OAAO,CAACC,GAAG,CAAC,iCAAiC,EAAEb,IAAI,CAACc,EAAE,CAAC;IACvD,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,8CAA6C,CAAC;MAC5E,IAAID,QAAQ,CAACE,EAAE,EAAE;QACf,MAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;QAClCP,OAAO,CAACC,GAAG,CAAC,oCAAoC,EAAEK,IAAI,CAAC;QACvDnB,eAAe,CAACmB,IAAI,CAACE,GAAG,CAACC,OAAO,KAAK;UACnC,GAAGA,OAAO;UACVC,cAAc,EAAEC,uBAAuB,CAACF,OAAO,CAACC,cAAc,CAAC;UAC/DE,OAAO,EAAEH,OAAO,CAACG,OAAO;UACxBC,YAAY,EAAEJ,OAAO,CAACI;QACxB,CAAC,CAAC,CAAC,CAAC;MACN,CAAC,MAAM;QACLb,OAAO,CAACc,KAAK,CAAC,+BAA+B,CAAC;MAChD;IACF,CAAC,CAAC,OAAOA,KAAK,EAAE;MACdd,OAAO,CAACc,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACtD;EACF,CAAC;;EAED;EACA,MAAMH,uBAAuB,GAAID,cAAc,IAAK;IAClD,MAAMK,iBAAiB,GAAG;MACxB,CAAC,EAAE,OAAO;MACV,CAAC,EAAE,cAAc;MACjB,CAAC,EAAE,OAAO;MACV,CAAC,EAAE;IACL,CAAC;IACD,OAAOA,iBAAiB,CAACL,cAAc,CAAC,IAAI,SAAS;EACvD,CAAC;EAED,MAAMM,eAAe,GAAGA,CAACC,OAAO,EAAEC,QAAQ,KAAK;IAC7C,MAAMC,WAAW,GAAG,IAAIC,IAAI,CAACH,OAAO,CAAC;IACrC,MAAMI,YAAY,GAAG,IAAID,IAAI,CAACF,QAAQ,CAAC;IACvC,MAAMI,QAAQ,GAAGC,IAAI,CAACC,GAAG,CAACH,YAAY,CAACI,OAAO,CAAC,CAAC,GAAGN,WAAW,CAACM,OAAO,CAAC,CAAC,CAAC;IACzE,OAAOF,IAAI,CAACG,IAAI,CAACJ,QAAQ,IAAI,IAAI,GAAG,IAAI,GAAG,EAAE,CAAC,CAAC;EACjD,CAAC;EAED,MAAMK,UAAU,GAAIlB,OAAO,IAAK;IAC9BT,OAAO,CAACC,GAAG,CAAC,qCAAqC,EAAEQ,OAAO,CAACmB,SAAS,CAAC;IACrEpC,qBAAqB,CAACiB,OAAO,CAAC;IAC9BnB,gBAAgB,CAAC,IAAI,CAAC;EACxB,CAAC;EAED,MAAMuC,eAAe,GAAG,MAAOD,SAAS,IAAK;IAC3C,IAAI;MACF,MAAMzB,QAAQ,GAAG,MAAMC,KAAK,CAAE,kCAAiCwB,SAAU,WAAU,EAAE;QACnFE,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MACF,IAAI,CAAC5B,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAI2B,KAAK,CAAC,gCAAgC,CAAC;MACnD;MACAC,KAAK,CAAC,6BAA6B,CAAC;MACpClC,iBAAiB,CAAC,CAAC,CAAC,CAAC;IACvB,CAAC,CAAC,OAAOe,KAAK,EAAE;MACdd,OAAO,CAACc,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACrDmB,KAAK,CAAC,8BAA8B,CAAC;IACvC;EACF,CAAC;EAED,MAAMC,iBAAiB,GAAG,MAAOC,kBAAkB,IAAK;IACtDnC,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEkC,kBAAkB,CAAC;IAC7D,IAAI;MACF,MAAMhC,QAAQ,GAAG,MAAMC,KAAK,CAAE,kCAAiC+B,kBAAkB,CAACP,SAAU,EAAC,EAAE;QAC7FE,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CK,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACH,kBAAkB;MACzC,CAAC,CAAC;MAEF,IAAI,CAAChC,QAAQ,CAACE,EAAE,EAAE;QAChB,IAAIF,QAAQ,CAACoC,MAAM,KAAK,GAAG,EAAE;UAC3B;UACAN,KAAK,CAAC,2BAA2B,CAAC;QACpC,CAAC,MAAM;UACL;UACA,MAAM,IAAID,KAAK,CAAE,8BAA6B7B,QAAQ,CAACqC,UAAW,EAAC,CAAC;QACtE;MACF,CAAC,MAAM;QACLxC,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC;QAC/CX,gBAAgB,CAAC,KAAK,CAAC;QACvB,MAAMS,iBAAiB,CAAC,CAAC,CAAC,CAAC;MAC7B;IACF,CAAC,CAAC,OAAOe,KAAK,EAAE;MACdd,OAAO,CAACc,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACnDmB,KAAK,CAAC,yEAAyE,CAAC;IAClF;EACF,CAAC;EAID,MAAMQ,sBAAsB,GAAIhC,OAAO,IAAK;IAC1C,MAAMiC,GAAG,GAAG,IAAIhE,KAAK,CAAC,CAAC;IACvBgE,GAAG,CAACC,IAAI,CAAC,oBAAoB,EAAE,EAAE,EAAE,EAAE,CAAC;IACtCD,GAAG,CAACE,WAAW,CAAC,EAAE,CAAC;;IAEnB;IACA,MAAMC,kBAAkB,GAAG,CACzB;MAAEC,KAAK,EAAE,OAAO;MAAExC,IAAI,EAAEG,OAAO,CAACsC;IAAY,CAAC,EAC7C;MAAED,KAAK,EAAE,sBAAsB;MAAExC,IAAI,EAAEG,OAAO,CAACuC,gBAAgB,CAACC,QAAQ,CAAC;IAAE,CAAC,EAC5E;MAAEH,KAAK,EAAE,oBAAoB;MAAExC,IAAI,EAAEG,OAAO,CAACC;IAAe,CAAC,EAC7D;MAAEoC,KAAK,EAAE,WAAW;MAAExC,IAAI,EAAG,GAAEG,OAAO,CAACyC,MAAO,KAAIzC,OAAO,CAAC0C,IAAK,MAAK1C,OAAO,CAAC2C,SAAU;IAAE,CAAC,EACzF;MAAEN,KAAK,EAAE,UAAU;MAAExC,IAAI,EAAEG,OAAO,CAAC4C;IAAa,CAAC,EACjD;MAAEP,KAAK,EAAE,WAAW;MAAExC,IAAI,EAAEG,OAAO,CAAC6C;IAAY,CAAC,EACjD;MAAER,KAAK,EAAE,kBAAkB;MAAExC,IAAI,EAAEU,eAAe,CAACP,OAAO,CAAC4C,YAAY,EAAE5C,OAAO,CAAC6C,WAAW,CAAC,CAACL,QAAQ,CAAC;IAAE,CAAC,EAC1G;MAAEH,KAAK,EAAE,UAAU;MAAExC,IAAI,EAAEG,OAAO,CAAC8C,iBAAiB,CAACN,QAAQ,CAAC;IAAE,CAAC,EACjE;MAAEH,KAAK,EAAE,eAAe;MAAExC,IAAI,EAAG,IAAGG,OAAO,CAAC+C,YAAa;IAAE,CAAC,EAC5D;MAAEV,KAAK,EAAE,QAAQ;MAAExC,IAAI,EAAEG,OAAO,CAACgD;IAAc,CAAC,EAChD;MAAEX,KAAK,EAAE,mBAAmB;MAAExC,IAAI,EAAEG,OAAO,CAACiD;IAAc,CAAC,CAC5D;IAEDhB,GAAG,CAACiB,SAAS,CAAC;MACZC,IAAI,EAAE,CAAC,CAAC,SAAS,EAAE,aAAa,CAAC,CAAC;MAClCxB,IAAI,EAAES,kBAAkB,CAACrC,GAAG,CAAEqD,IAAI,IAAK,CAACA,IAAI,CAACf,KAAK,EAAEe,IAAI,CAACvD,IAAI,CAAC,CAAC;MAC/DwD,MAAM,EAAE;IACV,CAAC,CAAC;IAEFpB,GAAG,CAACqB,IAAI,CAAE,WAAUtD,OAAO,CAACiD,aAAc,MAAK,CAAC;EAClD,CAAC;EAGD,MAAMM,yBAAyB,GAAIvD,OAAO,IAAK;IAC7CjB,qBAAqB,CAACiB,OAAO,CAAC;IAC9Bb,mBAAmB,CAAC,IAAI,CAAC;EAC3B,CAAC;EAGD,MAAMqE,sBAAsB,GAAG,MAAOxD,OAAO,IAAK;IAChD,MAAMyD,kBAAkB,GAAGvD,uBAAuB,CAACF,OAAO,CAACC,cAAc,CAACuC,QAAQ,CAAC,CAAC,CAAC;IAErF,MAAMkB,cAAc,GAAG;MACrBC,OAAO,EAAEhF,IAAI,CAACiF,aAAa;MAC3BC,UAAU,EAAE7D,OAAO,CAACsC,WAAW;MAC/BwB,WAAW,EAAE9D,OAAO,CAACuC,gBAAgB,CAACC,QAAQ,CAAC,CAAC,IAAI,iBAAiB;MACrEuB,SAAS,EAAE/D,OAAO,CAACC,cAAc;MACjC+D,QAAQ,EAAG,GAAEhE,OAAO,CAACyC,MAAO,KAAIzC,OAAO,CAAC0C,IAAK,MAAK1C,OAAO,CAAC2C,SAAU,EAAC;MACrEsB,aAAa,EAAEjE,OAAO,CAAC4C,YAAY;MACnCsB,cAAc,EAAElE,OAAO,CAAC6C,WAAW;MACnCsB,YAAY,EAAE5D,eAAe,CAACP,OAAO,CAAC4C,YAAY,EAAE5C,OAAO,CAAC6C,WAAW,CAAC,CAACL,QAAQ,CAAC,CAAC;MACnF4B,YAAY,EAAEpE,OAAO,CAAC8C,iBAAiB,CAACN,QAAQ,CAAC,CAAC;MAClD6B,WAAW,EAAG,IAAGrE,OAAO,CAAC+C,YAAY,CAACuB,OAAO,CAAC,CAAC,CAAE,EAAC;MAClDC,kBAAkB,EAAEvE,OAAO,CAACgD,aAAa;MACzCwB,gBAAgB,EAAExE,OAAO,CAACiD,aAAa,CAACT,QAAQ,CAAC,CAAC;MAClDiC,QAAQ,EAAE9F,IAAI,CAAC+F,KAAK;MACpBtF;IACF,CAAC;IAED,IAAI;MACF,MAAMuF,MAAM,GAAG,MAAMzG,OAAO,CAAC0G,IAAI,CAAC,gBAAgB,EAAE,kBAAkB,EAAElB,cAAc,EAAE,mBAAmB,CAAC;MAC5GnE,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEmF,MAAM,CAACzC,IAAI,CAAC;IAEtD,CAAC,CAAC,OAAO7B,KAAK,EAAE;MACdd,OAAO,CAACc,KAAK,CAAC,yCAAyC,EAAEA,KAAK,CAAC6B,IAAI,CAAC;IACtE;IACA/C,mBAAmB,CAAC,KAAK,CAAC;IAC1BE,UAAU,CAAC,EAAE,CAAC;EAChB,CAAC;EAKD,oBACEjB,OAAA;IAAKyG,SAAS,EAAC,2BAA2B;IAAAC,QAAA,gBACxC1G,OAAA;MAAIyG,SAAS,EAAC,aAAa;MAAAC,QAAA,EAAC;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACrDzG,YAAY,CAAC0G,MAAM,GAAG,CAAC,GACtB1G,YAAY,CAACsB,GAAG,CAAEC,OAAO,iBACvB5B,OAAA,CAACR,IAAI;MAAyBiH,SAAS,EAAC,aAAa;MAAAC,QAAA,gBACnD1G,OAAA,CAACR,IAAI,CAACwH,MAAM;QAACC,EAAE,EAAC,IAAI;QAACR,SAAS,EAAC,kBAAkB;QAAAC,QAAA,GAAC,WACvC,EAAC9E,OAAO,CAACiD,aAAa,EAAC,KAAG,EAACjD,OAAO,CAACsF,iBAAiB;MAAA;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClD,CAAC,eACd9G,OAAA,CAACR,IAAI,CAAC2H,IAAI;QAAAT,QAAA,gBACR1G,OAAA,CAACR,IAAI,CAAC4H,KAAK;UAAAV,QAAA,EAAE9E,OAAO,CAACsC;QAAW;UAAAyC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAa,CAAC,eAC9C9G,OAAA,CAACR,IAAI,CAAC6H,QAAQ;UAACZ,SAAS,EAAC,iBAAiB;UAAAC,QAAA,GACvC9E,OAAO,CAACyC,MAAM,EAAC,IAAE,EAACzC,OAAO,CAAC0C,IAAI,EAAC,KAAG,EAAC1C,OAAO,CAAC2C,SAAS;QAAA;UAAAoC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxC,CAAC,eAChB9G,OAAA,CAACR,IAAI,CAAC8H,IAAI;UAAAZ,QAAA,GAAC,yBAAoB,EAAC9E,OAAO,CAACC,cAAc;QAAA;UAAA8E,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eACnE9G,OAAA,CAACR,IAAI,CAAC8H,IAAI;UAAAZ,QAAA,GAAC,8BAAsB,EAAC9E,OAAO,CAACuC,gBAAgB;QAAA;UAAAwC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eACvE9G,OAAA,CAACR,IAAI,CAAC8H,IAAI;UAAAZ,QAAA,GAAC,YAAU,EAAC9E,OAAO,CAAC4C,YAAY;QAAA;UAAAmC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eACvD9G,OAAA,CAACR,IAAI,CAAC8H,IAAI;UAAAZ,QAAA,GAAC,aAAW,EAAC9E,OAAO,CAAC6C,WAAW;QAAA;UAAAkC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eACvD9G,OAAA,CAACR,IAAI,CAAC8H,IAAI;UAAAZ,QAAA,GAAC,uBAAkB,EAACvE,eAAe,CAACP,OAAO,CAAC4C,YAAY,EAAE5C,OAAO,CAAC6C,WAAW,CAAC;QAAA;UAAAkC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eACrG9G,OAAA,CAACR,IAAI,CAAC8H,IAAI;UAAAZ,QAAA,GAAC,YAAU,EAAC9E,OAAO,CAAC8C,iBAAiB;QAAA;UAAAiC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eAC5D9G,OAAA,CAACR,IAAI,CAAC8H,IAAI;UAAAZ,QAAA,GAAC,kBAAgB,EAAC9E,OAAO,CAAC+C,YAAY;QAAA;UAAAgC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eAC7D9G,OAAA,CAACR,IAAI,CAAC8H,IAAI;UAAAZ,QAAA,GAAC,UAAQ,EAAC9E,OAAO,CAACgD,aAAa;QAAA;UAAA+B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,EACrDlF,OAAO,CAACgD,aAAa,KAAK,WAAW,iBACpC5E,OAAA,CAAAE,SAAA;UAAAwG,QAAA,gBACE1G,OAAA,CAACT,MAAM;YAACgI,OAAO,EAAC,SAAS;YAACC,OAAO,EAAEA,CAAA,KAAM1E,UAAU,CAAClB,OAAO,CAAE;YAAA8E,QAAA,EAAC;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAC7E9G,OAAA,CAACT,MAAM;YAACgI,OAAO,EAAC,QAAQ;YAACC,OAAO,EAAEA,CAAA,KAAMxE,eAAe,CAACpB,OAAO,CAACmB,SAAS,CAAE;YAAA2D,QAAA,EAAC;UAAQ;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA,eAC7F,CACH,eACD9G,OAAA,CAACT,MAAM;UAACgI,OAAO,EAAC,MAAM;UAACC,OAAO,EAAEA,CAAA,KAAM5D,sBAAsB,CAAChC,OAAO,CAAE;UAAA8E,QAAA,EAAC;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACzF9G,OAAA,CAACT,MAAM;UAACgI,OAAO,EAAC,SAAS;UAACC,OAAO,EAAEA,CAAA,KAAMpC,sBAAsB,CAACxD,OAAO,CAAE;UAAA8E,QAAA,EAAC;QAAiB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAE3F,CAAC;IAAA,GA1BHlF,OAAO,CAACmB,SAAS;MAAA4D,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OA2BtB,CAEP,CAAC,gBAEF9G,OAAA;MAAGyG,SAAS,EAAC,aAAa;MAAAC,QAAA,EAAC;IAA2B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAC1D,EACApG,kBAAkB,iBACjBV,OAAA,CAACJ,mBAAmB;MAClB6H,IAAI,EAAEjH,aAAc;MACpBkH,WAAW,EAAEA,CAAA,KAAMjH,gBAAgB,CAAC,KAAK,CAAE;MAC3CmB,OAAO,EAAElB,kBAAmB;MAC5B2C,iBAAiB,EAAEA;IAAkB;MAAAsD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CAEF,eAEK9G,OAAA,CAACP,KAAK;MAACgI,IAAI,EAAEE,gBAAiB;MAACC,MAAM,EAAEA,CAAA,KAAMC,mBAAmB,CAAC,KAAK,CAAE;MAAAnB,QAAA,gBAC5E1G,OAAA,CAACP,KAAK,CAACuH,MAAM;QAACc,WAAW;QAAApB,QAAA,eACvB1G,OAAA,CAACP,KAAK,CAAC2H,KAAK;UAAAV,QAAA,EAAC;QAAkB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAa;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjC,CAAC,eACf9G,OAAA,CAACP,KAAK,CAAC0H,IAAI;QAAAT,QAAA,eACT1G,OAAA,CAACN,IAAI,CAACqI,KAAK;UAAArB,QAAA,gBACT1G,OAAA,CAACN,IAAI,CAACsI,KAAK;YAAAtB,QAAA,EAAC;UAAU;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eACnC9G,OAAA,CAACN,IAAI,CAACuI,OAAO;YAAChB,EAAE,EAAC,UAAU;YAACiB,IAAI,EAAC,GAAG;YAACC,KAAK,EAAEnH,OAAQ;YAACoH,QAAQ,EAAGC,CAAC,IAAKpH,UAAU,CAACoH,CAAC,CAACC,MAAM,CAACH,KAAK;UAAE;YAAAxB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1F;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACb9G,OAAA,CAACP,KAAK,CAAC8I,MAAM;QAAA7B,QAAA,gBACX1G,OAAA,CAACT,MAAM;UAACgI,OAAO,EAAC,WAAW;UAACC,OAAO,EAAEA,CAAA,KAAMK,mBAAmB,CAAC,KAAK,CAAE;UAAAnB,QAAA,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACtF9G,OAAA,CAACT,MAAM;UAACgI,OAAO,EAAC,SAAS;UAACC,OAAO,EAAEpC,sBAAuB;UAAAsB,QAAA,EAAC;QAAmB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3E,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV,CAAC;AAAC1G,EAAA,CArPID,mBAAmB;EAAA,QAENR,OAAO;AAAA;AAAA6I,EAAA,GAFpBrI,mBAAmB;AAuPzB,eAAeA,mBAAmB;AAAC,IAAAqI,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}