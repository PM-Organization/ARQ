{"ast":null,"code":"var _jsxFileName = \"/home/pmorales/Downloads/Proyecto-B2B/Hotel/frontend/sistema_hoteles/src/components/HomePage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Card, Button, Form, Alert, Image, Carousel } from 'react-bootstrap';\nimport { useNavigate } from 'react-router-dom';\nimport defaultRoomImage from './roomImage.jpg';\nimport Comentarios from './Comentarios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst HomePage = () => {\n  _s();\n  const [hotels, setHotels] = useState([]);\n  const [paises, setPaises] = useState([]);\n  const [capacidades, setCapacidades] = useState([]);\n  const [paisSeleccionado, setPaisSeleccionado] = useState('');\n  const [fechaIngreso, setFechaIngreso] = useState('');\n  const [fechaSalida, setFechaSalida] = useState('');\n  const [numeroPersonas, setNumeroPersonas] = useState(1);\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  const [hotelImages, setHotelImages] = useState({});\n  const [roomTypes, setRoomTypes] = useState({});\n\n  // PAL SEGUNDO FILTRO:\n\n  const [priceRange, setPriceRange] = useState({\n    min: '',\n    max: ''\n  });\n  const [selectedRoomType, setSelectedRoomType] = useState('');\n  const [selectedRating, setSelectedRating] = useState('');\n  const [showFilters, setShowFilters] = useState(false);\n  const applyAdditionalFilters = () => {\n    let filteredHotels = [...hotels]; // Copia del estado actual\n\n    if (orderByPrice === 'asc') {\n      filteredHotels = filteredHotels.map(hotel => ({\n        ...hotel,\n        rooms: hotel.rooms.sort((a, b) => a.precioxnoche - b.precioxnoche)\n      }));\n    }\n    if (selectedRoomType) {\n      filteredHotels = filteredHotels.map(hotel => ({\n        ...hotel,\n        rooms: hotel.rooms.filter(room => room.tipo_habitacion.toString() === selectedRoomType)\n      }));\n    }\n    if (selectedRating) {\n      filteredHotels = filteredHotels.map(hotel => ({\n        ...hotel,\n        rooms: hotel.rooms.filter(room => room.valuacion >= selectedRating)\n      }));\n    }\n    setHotels(filteredHotels);\n  };\n\n  // FIN SEGUNDO FILTRO\n\n  const tiposHabitacion = {\n    1: 'Doble',\n    2: 'Junior Suite',\n    3: 'Suite',\n    4: 'Gran Suite'\n  };\n  useEffect(() => {\n    fetchRoomTypes();\n    fetchPaises();\n    fetchCapacidades();\n    fetchInitialHotelsAndRooms();\n  }, []);\n  const fetchCapacidades = async () => {\n    try {\n      const response = await fetch('http://localhost:8080/habitaciones/capacidades');\n      if (!response.ok) throw new Error('No se pudieron cargar las capacidades de las habitaciones');\n      const capacidadesUnicas = await response.json();\n      setCapacidades(capacidadesUnicas.sort((a, b) => a - b));\n    } catch (error) {\n      console.error('Error al cargar capacidades:', error);\n      setError('Error al cargar las capacidades de las habitaciones.');\n    }\n  };\n\n  //IMAGENES\n\n  const fetchHotelImages = async idHotel => {\n    try {\n      const response = await fetch(`http://localhost:8080/hoteles/${idHotel}/imagenes`);\n      if (!response.ok) throw new Error('Error al cargar imágenes del hotel');\n      const images = await response.json();\n      setHotelImages(prevImages => ({\n        ...prevImages,\n        [idHotel]: images\n      }));\n    } catch (error) {\n      console.error('Error fetching hotel images:', error);\n    }\n  };\n  useEffect(() => {\n    hotels.forEach(hotel => {\n      fetchHotelImages(hotel.id_hotel);\n    });\n  }, [hotels]);\n  const fetchRoomTypes = async () => {\n    try {\n      const response = await fetch('http://localhost:8080/tipos_habitacion');\n      if (!response.ok) throw new Error('Error al cargar los tipos de habitación');\n      const data = await response.json();\n      setRoomTypes(data.reduce((map, roomType) => {\n        map[roomType.id_tipo] = roomType.imagenUrl || defaultRoomImage;\n        return map;\n      }, {}));\n    } catch (error) {\n      setError('Error al cargar los tipos de habitación: ' + error.message);\n    }\n  };\n  const fetchPaises = async () => {\n    try {\n      const response = await fetch('http://localhost:8080/hoteles/pais');\n      if (!response.ok) throw new Error('Error al cargar los países');\n      const data = await response.json();\n      setPaises(data);\n    } catch (error) {\n      setError('Error al cargar los países: ' + error.message);\n    }\n  };\n  const fetchInitialHotelsAndRooms = async () => {\n    try {\n      const hotelsResponse = await fetch('http://localhost:8080/hoteles');\n      if (!hotelsResponse.ok) throw new Error('Error al cargar hoteles');\n      const hotelsData = await hotelsResponse.json();\n      const roomTypesResponse = await fetch('http://localhost:8080/tipos_habitacion');\n      if (!roomTypesResponse.ok) throw new Error('Error al cargar tipos de habitación');\n      const roomTypesData = await roomTypesResponse.json();\n      const roomTypesMap = roomTypesData.reduce((acc, roomType) => {\n        acc[roomType.id_tipo] = roomType.imagenUrl || defaultRoomImage;\n        return acc;\n      }, {});\n      const hotelsWithRooms = await Promise.all(hotelsData.map(async hotel => {\n        const roomsResponse = await fetch(`http://localhost:8080/habitaciones?hotelId=${hotel.id_hotel}`); // Cambiado de hotel.id a hotel.id_hotel\n        if (!roomsResponse.ok) {\n          console.error('Error fetching rooms for hotel', hotel.id_hotel); // Cambiado de hotel.id a hotel.id_hotel\n          return {\n            ...hotel,\n            rooms: []\n          }; // Devuelve el hotel sin modificarlo si hay un error\n        }\n        const roomsData = await roomsResponse.json();\n        const roomsWithImages = roomsData.map(room => ({\n          ...room,\n          imagenUrl: roomTypesMap[room.tipo_habitacion] || defaultRoomImage\n        }));\n        return {\n          ...hotel,\n          rooms: roomsWithImages\n        };\n      }));\n      setHotels(hotelsWithRooms);\n    } catch (error) {\n      console.error('Error loading initial hotels and rooms:', error);\n      setError('Error al cargar hoteles y habitaciones iniciales: ' + error.message);\n    }\n  };\n  const fetchHotelsAndRoomsFiltered = async () => {\n    let queryParams = `?pais=${paisSeleccionado}&fechaIngreso=${fechaIngreso}&fechaSalida=${fechaSalida}&numeroPersonas=${numeroPersonas}`;\n    try {\n      const response = await fetch(`http://localhost:8080/habitaciones/buscar${queryParams}`);\n      if (!response.ok) throw new Error('Error al cargar hoteles y habitaciones filtradas');\n      const filteredRooms = await response.json();\n\n      // Transformamos las habitaciones filtradas en una estructura de hoteles con habitaciones\n      const hotelsMap = {};\n      for (const room of filteredRooms) {\n        if (!hotelsMap[room.id_hotel]) {\n          // Si el hotel no está en el mapa, lo buscamos en los hoteles cargados inicialmente\n          const hotelData = hotels.find(hotel => hotel.id_hotel === room.id_hotel);\n          hotelsMap[room.id_hotel] = {\n            ...hotelData,\n            rooms: []\n          };\n        }\n        hotelsMap[room.id_hotel].rooms.push({\n          ...room,\n          imagenUrl: roomTypes[room.tipo_habitacion] || defaultRoomImage\n        });\n      }\n      setHotels(Object.values(hotelsMap));\n    } catch (error) {\n      setError('Error al cargar hoteles y habitaciones filtradas: ' + error.message);\n    }\n  };\n  const handleSearch = e => {\n    e.preventDefault();\n    fetchHotelsAndRoomsFiltered();\n    setShowFilters(true);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"my-5\",\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSearch,\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"pais\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Pa\\xEDs\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"select\",\n              value: paisSeleccionado,\n              onChange: e => setPaisSeleccionado(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Seleccione un pa\\xEDs\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 17\n              }, this), paises.map(pais => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: pais,\n                children: pais\n              }, pais, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"fechaIngreso\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Fecha de Ingreso\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"date\",\n              value: fechaIngreso,\n              onChange: e => setFechaIngreso(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"fechaSalida\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Fecha de Salida\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"date\",\n              value: fechaSalida,\n              onChange: e => setFechaSalida(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"capacidadPersonas\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Capacidad de Personas\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"select\",\n              value: numeroPersonas,\n              onChange: e => setNumeroPersonas(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Seleccione capacidad\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 17\n              }, this), capacidades.map((capacidad, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: capacidad,\n                children: [capacidad, \" personas\"]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            type: \"submit\",\n            children: \"Buscar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this), showFilters && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Ordenar Precio\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"select\",\n            value: orderByPrice,\n            onChange: e => setOrderByPrice(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Seleccione orden\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"asc\",\n              children: \"Menor a Mayor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"roomType\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Tipo de Habitaci\\xF3n\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"select\",\n              value: selectedRoomType,\n              onChange: e => setSelectedRoomType(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Todos los tipos\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 19\n              }, this), Object.entries(tiposHabitacion).map(([key, value]) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: key,\n                children: value\n              }, key, false, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Rating m\\xEDnimo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"number\",\n            value: selectedRating,\n            onChange: e => setSelectedRating(parseInt(e.target.value, 10))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: applyAdditionalFilters,\n            children: \"Aplicar Filtros Adicionales\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 11\n      }, this)\n    }, void 0, false), /*#__PURE__*/_jsxDEV(Row, {\n      children: hotels.length > 0 ? hotels.map((hotel, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: 10,\n          className: \"mt-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Hotel: \", hotel.nombre]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [hotel.ciudad, \", \", hotel.pais]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Direcci\\xF3n: \", hotel.direccion]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 9\n          }, this), hotelImages[hotel.id_hotel] && hotelImages[hotel.id_hotel].length > 0 && /*#__PURE__*/_jsxDEV(Carousel, {\n            interval: null,\n            children: hotelImages[hotel.id_hotel].map((image, imageIndex) =>\n            /*#__PURE__*/\n            // AQUI YA SE PUEDE usar el índice porque está dentro de un contexto que ya es único (el hotel específico)\n            _jsxDEV(Carousel.Item, {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"d-block w-100\",\n                src: image,\n                alt: `Imagen ${imageIndex + 1} del hotel ${hotel.nombre}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 313,\n                columnNumber: 17\n              }, this)\n            }, imageIndex, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 15\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 7\n        }, this), hotel.rooms && hotel.rooms.map((room, roomIndex) =>\n        /*#__PURE__*/\n        // ACA, SE combina id de habitación con un índice para las claves de las habitaciones\n        _jsxDEV(Col, {\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n              variant: \"top\",\n              src: room.imagenUrl || defaultRoomImage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                children: [\"Habitaci\\xF3n: \", tiposHabitacion[room.tipo_habitacion]]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 332,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: [\"N\\xFAmero de habitaci\\xF3n: \", room.numero_habitacion]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 333,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: [\"Capacidad m\\xE1xima: \", room.capacidad_personas, \" personas\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 334,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: [\"Precio por noche: $\", room.precioxnoche]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: [\"Valoraci\\xF3n: \", room.valuacion, \" estrellas\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 336,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"primary\",\n                onClick: () => navigate('/checkout', {\n                  state: {\n                    hotelDetails: {\n                      ...hotel\n                    },\n                    roomDetails: {\n                      ...room,\n                      idHabitacion: room.id_habitacion,\n                      roomType: tiposHabitacion[room.tipo_habitacion],\n                      roomPrice: room.precioxnoche,\n                      capacidadPersonas: room.capacidad_personas\n                    }\n                  }\n                }),\n                children: \"Reservar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 337,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Comentarios, {\n                idHabitacion: room.id_habitacion\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 351,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 11\n          }, this)\n        }, `${room.id_habitacion}-${roomIndex}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 9\n        }, this))]\n      }, `${hotel.id_hotel}-${index}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-4\",\n          children: \"No se encontraron hoteles. Por favor, intenta nuevamente con diferentes criterios de b\\xFAsqueda.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 218,\n    columnNumber: 5\n  }, this);\n};\n_s(HomePage, \"W4JYc24BC+Dc6hiTO2mqLSGDOVE=\", false, function () {\n  return [useNavigate];\n});\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","useEffect","Container","Row","Col","Card","Button","Form","Alert","Image","Carousel","useNavigate","defaultRoomImage","Comentarios","jsxDEV","_jsxDEV","Fragment","_Fragment","HomePage","_s","hotels","setHotels","paises","setPaises","capacidades","setCapacidades","paisSeleccionado","setPaisSeleccionado","fechaIngreso","setFechaIngreso","fechaSalida","setFechaSalida","numeroPersonas","setNumeroPersonas","error","setError","navigate","hotelImages","setHotelImages","roomTypes","setRoomTypes","priceRange","setPriceRange","min","max","selectedRoomType","setSelectedRoomType","selectedRating","setSelectedRating","showFilters","setShowFilters","applyAdditionalFilters","filteredHotels","orderByPrice","map","hotel","rooms","sort","a","b","precioxnoche","filter","room","tipo_habitacion","toString","valuacion","tiposHabitacion","fetchRoomTypes","fetchPaises","fetchCapacidades","fetchInitialHotelsAndRooms","response","fetch","ok","Error","capacidadesUnicas","json","console","fetchHotelImages","idHotel","images","prevImages","forEach","id_hotel","data","reduce","roomType","id_tipo","imagenUrl","message","hotelsResponse","hotelsData","roomTypesResponse","roomTypesData","roomTypesMap","acc","hotelsWithRooms","Promise","all","roomsResponse","roomsData","roomsWithImages","fetchHotelsAndRoomsFiltered","queryParams","filteredRooms","hotelsMap","hotelData","find","push","Object","values","handleSearch","e","preventDefault","className","children","onSubmit","Group","controlId","Label","fileName","_jsxFileName","lineNumber","columnNumber","Control","as","value","onChange","target","pais","type","capacidad","index","variant","setOrderByPrice","entries","key","parseInt","onClick","length","md","nombre","ciudad","direccion","interval","image","imageIndex","Item","src","alt","roomIndex","Img","Body","Title","Text","numero_habitacion","capacidad_personas","state","hotelDetails","roomDetails","idHabitacion","id_habitacion","roomPrice","capacidadPersonas","_c","$RefreshReg$"],"sources":["/home/pmorales/Downloads/Proyecto-B2B/Hotel/frontend/sistema_hoteles/src/components/HomePage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Card, Button, Form, Alert, Image, Carousel } from 'react-bootstrap';\nimport { useNavigate } from 'react-router-dom';\nimport defaultRoomImage from './roomImage.jpg';\nimport Comentarios from './Comentarios';\n\nconst HomePage = () => {\n  const [hotels, setHotels] = useState([]);\n  const [paises, setPaises] = useState([]);\n  const [capacidades, setCapacidades] = useState([]);\n  const [paisSeleccionado, setPaisSeleccionado] = useState('');\n  const [fechaIngreso, setFechaIngreso] = useState('');\n  const [fechaSalida, setFechaSalida] = useState('');\n  const [numeroPersonas, setNumeroPersonas] = useState(1);\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  const [hotelImages, setHotelImages] = useState({});\n  const [roomTypes, setRoomTypes] = useState({});\n\n\n// PAL SEGUNDO FILTRO:\n\nconst [priceRange, setPriceRange] = useState({ min: '', max: '' });\nconst [selectedRoomType, setSelectedRoomType] = useState('');\nconst [selectedRating, setSelectedRating] = useState('');\nconst [showFilters, setShowFilters] = useState(false);\n\nconst applyAdditionalFilters = () => {\n  let filteredHotels = [...hotels]; // Copia del estado actual\n\n  if (orderByPrice === 'asc') {\n    filteredHotels = filteredHotels.map(hotel => ({\n      ...hotel,\n      rooms: hotel.rooms.sort((a, b) => a.precioxnoche - b.precioxnoche)\n    }));\n  }\n\n  if (selectedRoomType) {\n    filteredHotels = filteredHotels.map(hotel => ({\n      ...hotel,\n      rooms: hotel.rooms.filter(room => room.tipo_habitacion.toString() === selectedRoomType)\n    }));\n  }\n\n  if (selectedRating) {\n    filteredHotels = filteredHotels.map(hotel => ({\n      ...hotel,\n      rooms: hotel.rooms.filter(room => room.valuacion >= selectedRating)\n    }));\n  }\n\n  setHotels(filteredHotels);\n};\n\n\n// FIN SEGUNDO FILTRO\n\n  const tiposHabitacion = {\n    1: 'Doble',\n    2: 'Junior Suite',\n    3: 'Suite',\n    4: 'Gran Suite'\n  };\n\n\n  useEffect(() => {\n    fetchRoomTypes();\n    fetchPaises();\n    fetchCapacidades();\n    fetchInitialHotelsAndRooms();\n  }, []);\n\n\n\n\n  const fetchCapacidades = async () => {\n    try {\n      const response = await fetch('http://localhost:8080/habitaciones/capacidades');\n      if (!response.ok) throw new Error('No se pudieron cargar las capacidades de las habitaciones');\n      const capacidadesUnicas = await response.json();\n      setCapacidades(capacidadesUnicas.sort((a, b) => a - b));\n    } catch (error) {\n      console.error('Error al cargar capacidades:', error);\n      setError('Error al cargar las capacidades de las habitaciones.');\n    }\n  };\n\n\n\n\n  //IMAGENES\n\n  const fetchHotelImages = async (idHotel) => {\n    try {\n      const response = await fetch(`http://localhost:8080/hoteles/${idHotel}/imagenes`);\n      if (!response.ok) throw new Error('Error al cargar imágenes del hotel');\n      const images = await response.json();\n      setHotelImages(prevImages => ({ ...prevImages, [idHotel]: images }));\n    } catch (error) {\n      console.error('Error fetching hotel images:', error);\n    }\n  };\n\n  useEffect(() => {\n    hotels.forEach((hotel) => {\n      fetchHotelImages(hotel.id_hotel);\n    });\n  }, [hotels]);\n\n  \n\n  const fetchRoomTypes = async () => {\n    try {\n      const response = await fetch('http://localhost:8080/tipos_habitacion');\n      if (!response.ok) throw new Error('Error al cargar los tipos de habitación');\n      const data = await response.json();\n      setRoomTypes(data.reduce((map, roomType) => {\n        map[roomType.id_tipo] = roomType.imagenUrl || defaultRoomImage; \n        return map;\n      }, {}));\n    } catch (error) {\n      setError('Error al cargar los tipos de habitación: ' + error.message);\n    }\n  };\n  \n\n\n\n  const fetchPaises = async () => {\n    try {\n      const response = await fetch('http://localhost:8080/hoteles/pais');\n      if (!response.ok) throw new Error('Error al cargar los países');\n      const data = await response.json();\n      setPaises(data);\n    } catch (error) {\n      setError('Error al cargar los países: ' + error.message);\n    }\n  };\n\n  const fetchInitialHotelsAndRooms = async () => {\n    try {\n      const hotelsResponse = await fetch('http://localhost:8080/hoteles');\n      if (!hotelsResponse.ok) throw new Error('Error al cargar hoteles');\n      const hotelsData = await hotelsResponse.json();\n  \n      const roomTypesResponse = await fetch('http://localhost:8080/tipos_habitacion');\n      if (!roomTypesResponse.ok) throw new Error('Error al cargar tipos de habitación');\n      const roomTypesData = await roomTypesResponse.json();\n  \n      const roomTypesMap = roomTypesData.reduce((acc, roomType) => {\n        acc[roomType.id_tipo] = roomType.imagenUrl || defaultRoomImage;\n        return acc;\n      }, {});\n  \n      const hotelsWithRooms = await Promise.all(hotelsData.map(async (hotel) => {\n        const roomsResponse = await fetch(`http://localhost:8080/habitaciones?hotelId=${hotel.id_hotel}`); // Cambiado de hotel.id a hotel.id_hotel\n        if (!roomsResponse.ok) {\n          console.error('Error fetching rooms for hotel', hotel.id_hotel); // Cambiado de hotel.id a hotel.id_hotel\n          return { ...hotel, rooms: [] }; // Devuelve el hotel sin modificarlo si hay un error\n        }\n        const roomsData = await roomsResponse.json();\n        const roomsWithImages = roomsData.map(room => ({\n          ...room,\n          imagenUrl: roomTypesMap[room.tipo_habitacion] || defaultRoomImage\n        }));\n        return { ...hotel, rooms: roomsWithImages };\n      }));\n  \n      setHotels(hotelsWithRooms);\n    } catch (error) {\n      console.error('Error loading initial hotels and rooms:', error);\n      setError('Error al cargar hoteles y habitaciones iniciales: ' + error.message);\n    }\n  };\n  \n  \n  \n\n  const fetchHotelsAndRoomsFiltered = async () => {\n    let queryParams = `?pais=${paisSeleccionado}&fechaIngreso=${fechaIngreso}&fechaSalida=${fechaSalida}&numeroPersonas=${numeroPersonas}`;\n    try {\n      const response = await fetch(`http://localhost:8080/habitaciones/buscar${queryParams}`);\n      if (!response.ok) throw new Error('Error al cargar hoteles y habitaciones filtradas');\n      const filteredRooms = await response.json();\n  \n      // Transformamos las habitaciones filtradas en una estructura de hoteles con habitaciones\n      const hotelsMap = {};\n      for (const room of filteredRooms) {\n        if (!hotelsMap[room.id_hotel]) {\n          // Si el hotel no está en el mapa, lo buscamos en los hoteles cargados inicialmente\n          const hotelData = hotels.find(hotel => hotel.id_hotel === room.id_hotel);\n          hotelsMap[room.id_hotel] = {\n            ...hotelData,\n            rooms: []\n          };\n        }\n        hotelsMap[room.id_hotel].rooms.push({\n          ...room,\n          imagenUrl: roomTypes[room.tipo_habitacion] || defaultRoomImage\n        });\n      }\n  \n      setHotels(Object.values(hotelsMap));\n    } catch (error) {\n      setError('Error al cargar hoteles y habitaciones filtradas: ' + error.message);\n    }\n  };\n  \n\n  const handleSearch = (e) => {\n    e.preventDefault();\n    fetchHotelsAndRoomsFiltered();\n    setShowFilters(true);\n\n  };\n\n  return (\n    <Container className=\"my-5\">\n      {/* Filtro de búsqueda */}\n      <Form onSubmit={handleSearch}>\n        <Row className=\"mb-4\">\n          <Col>\n            <Form.Group controlId=\"pais\">\n              <Form.Label>País</Form.Label>\n              <Form.Control as=\"select\" value={paisSeleccionado} onChange={e => setPaisSeleccionado(e.target.value)}>\n                <option value=\"\">Seleccione un país</option>\n                {paises.map(pais => (\n                  <option key={pais} value={pais}>{pais}</option>\n                ))}\n              </Form.Control>\n            </Form.Group>\n          </Col>\n          <Col>\n            <Form.Group controlId=\"fechaIngreso\">\n              <Form.Label>Fecha de Ingreso</Form.Label>\n              <Form.Control type=\"date\" value={fechaIngreso} onChange={e => setFechaIngreso(e.target.value)} />\n            </Form.Group>\n          </Col>\n          <Col>\n            <Form.Group controlId=\"fechaSalida\">\n              <Form.Label>Fecha de Salida</Form.Label>\n              <Form.Control type=\"date\" value={fechaSalida} onChange={e => setFechaSalida(e.target.value)} />\n            </Form.Group>\n          </Col>\n         <Col>\n            <Form.Group controlId=\"capacidadPersonas\">\n              <Form.Label>Capacidad de Personas</Form.Label>\n              <Form.Control as=\"select\" value={numeroPersonas} onChange={e => setNumeroPersonas(e.target.value)}>\n                <option value=\"\">Seleccione capacidad</option>\n                {capacidades.map((capacidad, index) => (\n                  <option key={index} value={capacidad}>{capacidad} personas</option>\n                ))}\n              </Form.Control>\n            </Form.Group>\n          </Col>\n          <Col>\n            <Button variant=\"primary\" type=\"submit\">Buscar</Button>\n          </Col>\n        </Row>\n      </Form>\n\n\n\n      {showFilters && (\n        <>\n          <Row className=\"mb-4\">\n            <Col>\n              <Form.Label>Ordenar Precio</Form.Label>\n              <Form.Control as=\"select\" value={orderByPrice} onChange={e => setOrderByPrice(e.target.value)}>\n                <option value=\"\">Seleccione orden</option>\n                <option value=\"asc\">Menor a Mayor</option>\n              </Form.Control>\n            </Col>\n            <Col>\n              <Form.Group controlId=\"roomType\">\n                <Form.Label>Tipo de Habitación</Form.Label>\n                <Form.Control as=\"select\" value={selectedRoomType} onChange={e => setSelectedRoomType(e.target.value)}>\n                  <option value=\"\">Todos los tipos</option>\n                  {Object.entries(tiposHabitacion).map(([key, value]) => (\n                    <option key={key} value={key}>{value}</option>\n                  ))}\n                </Form.Control>\n              </Form.Group>\n            </Col>\n            <Col>\n              <Form.Label>Rating mínimo</Form.Label>\n              <Form.Control type=\"number\" value={selectedRating} onChange={e => setSelectedRating(parseInt(e.target.value, 10))} />\n            </Col>\n            <Col>\n              <Button variant=\"primary\" onClick={applyAdditionalFilters}>Aplicar Filtros Adicionales</Button>\n            </Col>\n          </Row>\n        </>\n      )}\n      <Row>\n        {hotels.length > 0 ? (\n          hotels.map((hotel, index) => (\n            <React.Fragment key={`${hotel.id_hotel}-${index}`}>\n\n\n\n\n\n      <Col md={10} className=\"mt-4\">\n        <h3>Hotel: {hotel.nombre}</h3>\n        <p>{hotel.ciudad}, {hotel.pais}</p>\n        <p>Dirección: {hotel.direccion}</p>\n        {hotelImages[hotel.id_hotel] && hotelImages[hotel.id_hotel].length > 0 && (\n          <Carousel interval={null}>\n            {hotelImages[hotel.id_hotel].map((image, imageIndex) => (\n              // AQUI YA SE PUEDE usar el índice porque está dentro de un contexto que ya es único (el hotel específico)\n              <Carousel.Item key={imageIndex}>\n                <img\n                  className=\"d-block w-100\"\n                  src={image}\n                  alt={`Imagen ${imageIndex + 1} del hotel ${hotel.nombre}`}\n                />\n              </Carousel.Item>\n            ))}\n          </Carousel>\n        )}\n      </Col>\n\n\n\n      {hotel.rooms && hotel.rooms.map((room, roomIndex) => (\n        // ACA, SE combina id de habitación con un índice para las claves de las habitaciones\n        <Col key={`${room.id_habitacion}-${roomIndex}`} md={6}>\n          <Card className=\"mb-3\">\n            <Card.Img variant=\"top\" src={room.imagenUrl || defaultRoomImage} />\n            <Card.Body>\n              <Card.Title>Habitación: {tiposHabitacion[room.tipo_habitacion]}</Card.Title>\n              <Card.Text>Número de habitación: {room.numero_habitacion}</Card.Text>\n              <Card.Text>Capacidad máxima: {room.capacidad_personas} personas</Card.Text>\n              <Card.Text>Precio por noche: ${room.precioxnoche}</Card.Text>\n              <Card.Text>Valoración: {room.valuacion} estrellas</Card.Text>\n              <Button variant=\"primary\" onClick={() => navigate('/checkout', {\n                state: {\n                  hotelDetails: { ...hotel },\n                  roomDetails: {\n                    ...room,\n                    idHabitacion: room.id_habitacion,\n                    roomType: tiposHabitacion[room.tipo_habitacion],\n                    roomPrice: room.precioxnoche,\n                    capacidadPersonas: room.capacidad_personas\n                  }\n                }\n              })}>\n                Reservar\n              </Button>\n              <Comentarios idHabitacion={room.id_habitacion} />\n            </Card.Body>\n          </Card>\n        </Col>\n      ))}\n    </React.Fragment>\n  ))\n) : (\n  <Col>\n    <p className=\"mt-4\">No se encontraron hoteles. Por favor, intenta nuevamente con diferentes criterios de búsqueda.</p>\n  </Col>\n)}\n\n      </Row>\n    </Container>\n  );\n};\n\nexport default HomePage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}