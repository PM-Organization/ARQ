{"ast":null,"code":"var _jsxFileName = \"/home/pmorales/Downloads/Proyecto-B2B/Hotel/frontend/sistema_hoteles/src/components/HotelDetailsPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Card, Button, Form, Alert, Carousel } from 'react-bootstrap';\nimport { useNavigate } from 'react-router-dom';\nimport defaultRoomImage from './roomImage.jpg'; // Asegúrate de que esta ruta es correcta\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HotelDetailsPage = () => {\n  _s();\n  const [hotels, setHotels] = useState([]);\n  const [paises, setPaises] = useState([]);\n  const [paisSeleccionado, setPaisSeleccionado] = useState('');\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  const [hotelImages, setHotelImages] = useState({});\n  const [filterCapacity, setFilterCapacity] = useState('');\n  const tiposHabitacion = {\n    1: 'Doble',\n    2: 'Junior Suite',\n    3: 'Suite',\n    4: 'Gran Suite'\n  };\n  useEffect(() => {\n    fetchPaises();\n    fetchHotelsAndRooms(paisSeleccionado);\n  }, [paisSeleccionado]);\n  const filterRoomsByCapacity = capacity => {\n    if (!capacity) {\n      setHotels(originalHotels); // Restauramos los hoteles si no se especifica capacidad\n      return;\n    }\n    const filteredHotels = originalHotels.map(hotel => {\n      const filteredRooms = hotel.rooms.filter(room => room.capacidad_personas === parseInt(capacity, 10));\n      return {\n        ...hotel,\n        rooms: filteredRooms\n      };\n    }).filter(hotel => hotel.rooms.length > 0);\n    setHotels(filteredHotels);\n  };\n  const handleFilterRooms = e => {\n    e.preventDefault();\n    filterRoomsByCapacity(filterCapacity);\n  };\n  const handleSearch = e => {\n    e.preventDefault();\n    fetchHotelsAndRooms();\n  };\n\n  //IMAGENES\n\n  const fetchHotelImages = async idHotel => {\n    try {\n      const response = await fetch(`http://localhost:8080/hoteles/${idHotel}/imagenes`);\n      if (!response.ok) throw new Error('Error al cargar imágenes del hotel');\n      const images = await response.json();\n      setHotelImages(prevImages => ({\n        ...prevImages,\n        [idHotel]: images\n      }));\n    } catch (error) {\n      console.error('Error fetching hotel images:', error);\n    }\n  };\n  useEffect(() => {\n    hotels.forEach(hotel => {\n      fetchHotelImages(hotel.id_hotel);\n    });\n  }, [hotels]);\n  const fetchRoomTypes = async () => {\n    try {\n      const response = await fetch('http://localhost:8080/tipos_habitacion');\n      if (!response.ok) throw new Error('Error al cargar los tipos de habitación');\n      const data = await response.json();\n      setRoomTypes(data.reduce((map, roomType) => {\n        map[roomType.id_tipo] = roomType.imagenUrl || defaultRoomImage;\n        return map;\n      }, {}));\n    } catch (error) {\n      setError('Error al cargar los tipos de habitación: ' + error.message);\n    }\n  };\n  const fetchPaises = async () => {\n    try {\n      const response = await fetch('http://localhost:8080/hoteles/pais');\n      if (!response.ok) throw new Error('Error al cargar los países');\n      const data = await response.json();\n      setPaises(data);\n    } catch (error) {\n      setError('Error al cargar los países: ' + error.message);\n    }\n  };\n  const fetchHotelsAndRooms = async (pais = '') => {\n    let url = pais ? `http://localhost:8080/hoteles/por-pais/${pais}` : `http://localhost:8080/hoteles`;\n    try {\n      const hotelsResponse = await fetch(url);\n      const hotelsData = await hotelsResponse.json();\n      const roomTypesResponse = await fetch('http://localhost:8080/tipos_habitacion');\n      const roomTypesData = await roomTypesResponse.json();\n      const roomTypesMap = roomTypesData.reduce((acc, roomType) => {\n        acc[roomType.id_tipo] = roomType.imagenUrl || defaultRoomImage;\n        return acc;\n      }, {});\n      const hotelsWithRooms = await Promise.all(hotelsData.map(async hotel => {\n        const roomsResponse = await fetch(`http://localhost:8080/habitaciones?hotelId=${hotel.id_hotel}`);\n        const roomsData = await roomsResponse.json();\n        const roomsWithImages = roomsData.map(room => ({\n          ...room,\n          imagenUrl: roomTypesMap[room.tipo_habitacion]\n        }));\n        return {\n          ...hotel,\n          rooms: roomsWithImages\n        };\n      }));\n      setHotels(hotelsData);\n      setOriginalHotels(hotelsData); // Guardamos una copia de los hoteles para el filtrado\n    } catch (error) {\n      setError('Error al cargar hoteles: ' + error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"my-5\",\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        md: 12,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Buscar Hoteles Disponibles\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 7\n        }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"danger\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleSearch,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"pais\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Pa\\xEDs\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"select\",\n              value: paisSeleccionado,\n              onChange: e => setPaisSeleccionado(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Seleccione un pa\\xEDs\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 13\n              }, this), paises.map((pais, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: pais,\n                children: pais\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 15\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"capacidadPersonas\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Capacidad de Personas en Habitaci\\xF3n\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"number\",\n              placeholder: \"Ingrese la capacidad de personas\",\n              value: filterCapacity,\n              onChange: e => setFilterCapacity(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            type: \"submit\",\n            children: \"Buscar Hoteles\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            type: \"button\",\n            onClick: handleFilterRooms,\n            className: \"ml-2\",\n            children: \"Filtrar Habitaciones\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: hotels.length > 0 ? hotels.map(hotel => /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: 10,\n          className: \"mt-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Hotel: \", hotel.nombre]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [hotel.ciudad, \", \", hotel.pais]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Direcci\\xF3n: \", hotel.direccion]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this), hotelImages[hotel.id_hotel] && hotelImages[hotel.id_hotel].length > 0 && /*#__PURE__*/_jsxDEV(Carousel, {\n            interval: null,\n            children: hotelImages[hotel.id_hotel].map((image, index) => /*#__PURE__*/_jsxDEV(Carousel.Item, {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"d-block w-100\",\n                src: image,\n                alt: `Imagen del hotel ${hotel.nombre}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 21\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this), hotel.rooms.map(room => /*#__PURE__*/_jsxDEV(Col, {\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n              variant: \"top\",\n              src: room.imagenUrl || defaultRoomImage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                children: [\"Habitaci\\xF3n: \", tiposHabitacion[room.tipo_habitacion]]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: [\"N\\xFAmero de habitaci\\xF3n: \", room.numero_habitacion]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: [\"Capacidad m\\xE1xima: \", room.capacidad_personas, \" personas\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: [\"Precio por noche: $\", room.precioxnoche]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: [\"Valoraci\\xF3n: \", room.valuacion, \" estrellas\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"primary\",\n                onClick: () => navigate('/checkout', {\n                  state: {\n                    hotelDetails: {\n                      ...hotel\n                    },\n                    roomDetails: {\n                      ...room,\n                      idHabitacion: room.id_habitacion,\n                      roomType: tiposHabitacion[room.tipo_habitacion],\n                      roomPrice: room.precioxnoche,\n                      capacidadPersonas: room.capacidad_personas\n                    }\n                  }\n                }),\n                children: \"Reservar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 15\n          }, this)\n        }, room.id_habitacion, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }, this))]\n      }, hotel.id_hotel, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this)) : /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-4\",\n          children: \"No se encontraron hoteles. Por favor, intenta nuevamente con diferentes criterios de b\\xFAsqueda.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 3\n  }, this);\n};\n_s(HotelDetailsPage, \"wPohe6r5AtNVzoRqV1AQD5Bwz4w=\", false, function () {\n  return [useNavigate];\n});\n_c = HotelDetailsPage;\nexport default HotelDetailsPage;\nvar _c;\n$RefreshReg$(_c, \"HotelDetailsPage\");","map":{"version":3,"names":["React","useState","useEffect","Container","Row","Col","Card","Button","Form","Alert","Carousel","useNavigate","defaultRoomImage","jsxDEV","_jsxDEV","HotelDetailsPage","_s","hotels","setHotels","paises","setPaises","paisSeleccionado","setPaisSeleccionado","error","setError","navigate","hotelImages","setHotelImages","filterCapacity","setFilterCapacity","tiposHabitacion","fetchPaises","fetchHotelsAndRooms","filterRoomsByCapacity","capacity","originalHotels","filteredHotels","map","hotel","filteredRooms","rooms","filter","room","capacidad_personas","parseInt","length","handleFilterRooms","e","preventDefault","handleSearch","fetchHotelImages","idHotel","response","fetch","ok","Error","images","json","prevImages","console","forEach","id_hotel","fetchRoomTypes","data","setRoomTypes","reduce","roomType","id_tipo","imagenUrl","message","pais","url","hotelsResponse","hotelsData","roomTypesResponse","roomTypesData","roomTypesMap","acc","hotelsWithRooms","Promise","all","roomsResponse","roomsData","roomsWithImages","tipo_habitacion","setOriginalHotels","className","children","md","fileName","_jsxFileName","lineNumber","columnNumber","variant","onSubmit","Group","controlId","Label","Control","as","value","onChange","target","index","type","placeholder","onClick","Fragment","nombre","ciudad","direccion","interval","image","Item","src","alt","Img","Body","Title","Text","numero_habitacion","precioxnoche","valuacion","state","hotelDetails","roomDetails","idHabitacion","id_habitacion","roomPrice","capacidadPersonas","_c","$RefreshReg$"],"sources":["/home/pmorales/Downloads/Proyecto-B2B/Hotel/frontend/sistema_hoteles/src/components/HotelDetailsPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Card, Button, Form, Alert, Carousel } from 'react-bootstrap';\nimport { useNavigate } from 'react-router-dom';\nimport defaultRoomImage from './roomImage.jpg'; // Asegúrate de que esta ruta es correcta\n\nconst HotelDetailsPage = () => {\n  const [hotels, setHotels] = useState([]);\n  const [paises, setPaises] = useState([]);\n  const [paisSeleccionado, setPaisSeleccionado] = useState('');\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  const [hotelImages, setHotelImages] = useState({});\n  const [filterCapacity, setFilterCapacity] = useState('');\n\n\n\n  const tiposHabitacion = {\n    1: 'Doble',\n    2: 'Junior Suite',\n    3: 'Suite',\n    4: 'Gran Suite'\n  };\n\n  useEffect(() => {\n    fetchPaises();\n    fetchHotelsAndRooms(paisSeleccionado);\n  }, [paisSeleccionado]);\n\n\n  const filterRoomsByCapacity = (capacity) => {\n    if (!capacity) {\n      setHotels(originalHotels); // Restauramos los hoteles si no se especifica capacidad\n      return;\n    }\n\n    const filteredHotels = originalHotels.map(hotel => {\n      const filteredRooms = hotel.rooms.filter(room => room.capacidad_personas === parseInt(capacity, 10));\n      return { ...hotel, rooms: filteredRooms };\n    }).filter(hotel => hotel.rooms.length > 0);\n\n    setHotels(filteredHotels);\n  };\n\n  const handleFilterRooms = (e) => {\n    e.preventDefault();\n    filterRoomsByCapacity(filterCapacity);\n  };\n\n  const handleSearch = (e) => {\n    e.preventDefault();\n    fetchHotelsAndRooms();\n  };\n\n\n\n  //IMAGENES\n\n  const fetchHotelImages = async (idHotel) => {\n    try {\n      const response = await fetch(`http://localhost:8080/hoteles/${idHotel}/imagenes`);\n      if (!response.ok) throw new Error('Error al cargar imágenes del hotel');\n      const images = await response.json();\n      setHotelImages(prevImages => ({ ...prevImages, [idHotel]: images }));\n    } catch (error) {\n      console.error('Error fetching hotel images:', error);\n    }\n  };\n\n  useEffect(() => {\n    hotels.forEach((hotel) => {\n      fetchHotelImages(hotel.id_hotel);\n    });\n  }, [hotels]);\n\n  \n\n  const fetchRoomTypes = async () => {\n    try {\n      const response = await fetch('http://localhost:8080/tipos_habitacion');\n      if (!response.ok) throw new Error('Error al cargar los tipos de habitación');\n      const data = await response.json();\n      setRoomTypes(data.reduce((map, roomType) => {\n        map[roomType.id_tipo] = roomType.imagenUrl || defaultRoomImage;\n        return map;\n      }, {}));\n    } catch (error) {\n      setError('Error al cargar los tipos de habitación: ' + error.message);\n    }\n  };\n  \n\n\n\n  const fetchPaises = async () => {\n    try {\n      const response = await fetch('http://localhost:8080/hoteles/pais');\n      if (!response.ok) throw new Error('Error al cargar los países');\n      const data = await response.json();\n      setPaises(data);\n    } catch (error) {\n      setError('Error al cargar los países: ' + error.message);\n    }\n  };\n\n  const fetchHotelsAndRooms = async (pais = '') => {\n    let url = pais ? `http://localhost:8080/hoteles/por-pais/${pais}` : `http://localhost:8080/hoteles`;\n    try {\n      const hotelsResponse = await fetch(url);\n      const hotelsData = await hotelsResponse.json();\n  \n      const roomTypesResponse = await fetch('http://localhost:8080/tipos_habitacion');\n      const roomTypesData = await roomTypesResponse.json();\n      const roomTypesMap = roomTypesData.reduce((acc, roomType) => {\n        acc[roomType.id_tipo] = roomType.imagenUrl || defaultRoomImage;\n        return acc;\n      }, {});\n  \n      const hotelsWithRooms = await Promise.all(hotelsData.map(async (hotel) => {\n        const roomsResponse = await fetch(`http://localhost:8080/habitaciones?hotelId=${hotel.id_hotel}`);\n        const roomsData = await roomsResponse.json();\n        const roomsWithImages = roomsData.map(room => ({\n          ...room,\n          imagenUrl: roomTypesMap[room.tipo_habitacion]\n        }));\n        return { ...hotel, rooms: roomsWithImages };\n      }));\n  \n      setHotels(hotelsData);\n      setOriginalHotels(hotelsData); // Guardamos una copia de los hoteles para el filtrado\n    } catch (error) {\n      setError('Error al cargar hoteles: ' + error.message);\n    }\n  };\n  \n  \n  \n  return (\n\n\n  \n  <Container className=\"my-5\">\n  <Row>\n    <Col md={12}>\n      <h2>Buscar Hoteles Disponibles</h2>\n      {error && <Alert variant=\"danger\">{error}</Alert>}\n      <Form onSubmit={handleSearch}>\n        <Form.Group controlId=\"pais\">\n          <Form.Label>País</Form.Label>\n          <Form.Control as=\"select\" value={paisSeleccionado} onChange={(e) => setPaisSeleccionado(e.target.value)}>\n            <option value=\"\">Seleccione un país</option>\n            {paises.map((pais, index) => (\n              <option key={index} value={pais}>{pais}</option>\n            ))}\n          </Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId=\"capacidadPersonas\">\n          <Form.Label>Capacidad de Personas en Habitación</Form.Label>\n          <Form.Control \n            type=\"number\" \n            placeholder=\"Ingrese la capacidad de personas\" \n            value={filterCapacity} \n            onChange={(e) => setFilterCapacity(e.target.value)}\n          />\n        </Form.Group>\n\n        <Button variant=\"primary\" type=\"submit\">Buscar Hoteles</Button>\n        <Button variant=\"secondary\" type=\"button\" onClick={handleFilterRooms} className=\"ml-2\">\n          Filtrar Habitaciones\n        </Button>\n      </Form>\n    </Col>\n  </Row>\n  <Row>\n    {hotels.length > 0 ? (\n      hotels.map((hotel) => (\n        <React.Fragment key={hotel.id_hotel}>\n          <Col md={10} className=\"mt-4\">\n            <h3>Hotel: {hotel.nombre}</h3>\n            <p>{hotel.ciudad}, {hotel.pais}</p>\n            <p>Dirección: {hotel.direccion}</p>\n            {hotelImages[hotel.id_hotel] && hotelImages[hotel.id_hotel].length > 0 && (\n              <Carousel interval={null}>\n                {hotelImages[hotel.id_hotel].map((image, index) => (\n                  <Carousel.Item key={index}>\n                    <img\n                      className=\"d-block w-100\"\n                      src={image}\n                      alt={`Imagen del hotel ${hotel.nombre}`}\n                    />\n                  </Carousel.Item>\n                ))}\n              </Carousel>\n            )}\n          </Col>\n          {hotel.rooms.map((room) => (\n            <Col key={room.id_habitacion} md={6}>\n              <Card className=\"mb-3\">\n                <Card.Img variant=\"top\" src={room.imagenUrl || defaultRoomImage} />\n                <Card.Body>\n                  <Card.Title>Habitación: {tiposHabitacion[room.tipo_habitacion]}</Card.Title>\n                  <Card.Text>Número de habitación: {room.numero_habitacion}</Card.Text>\n                  <Card.Text>Capacidad máxima: {room.capacidad_personas} personas</Card.Text>\n                  <Card.Text>Precio por noche: ${room.precioxnoche}</Card.Text>\n                  <Card.Text>Valoración: {room.valuacion} estrellas</Card.Text>\n                  <Button variant=\"primary\" onClick={() => navigate('/checkout', {\n                    state: {\n                      hotelDetails: { ...hotel },\n                      roomDetails: {\n                        ...room,\n                        idHabitacion: room.id_habitacion,\n                        roomType: tiposHabitacion[room.tipo_habitacion],\n                        roomPrice: room.precioxnoche,\n                        capacidadPersonas: room.capacidad_personas\n                      }\n                    }\n                  })}>\n                    Reservar\n                  </Button>\n                </Card.Body>\n              </Card>\n            </Col>\n          ))}\n        </React.Fragment>\n      ))\n    ) : (\n      <Col>\n        <p className=\"mt-4\">No se encontraron hoteles. Por favor, intenta nuevamente con diferentes criterios de búsqueda.</p>\n      </Col>\n    )}\n  </Row>\n</Container>\n);\n};\n\nexport default HotelDetailsPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}