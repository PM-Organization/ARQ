{"ast":null,"code":"var _jsxFileName = \"/home/pmorales/Downloads/Proyecto-B2B/Hotel/frontend/sistema_hoteles/src/components/HomePage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Card, Button, Form, Alert, Image, Carousel } from 'react-bootstrap';\nimport { useNavigate } from 'react-router-dom';\nimport defaultRoomImage from './roomImage.jpg';\nimport Comentarios from './Comentarios';\nimport { useUser } from './UserContext';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst HomePage = () => {\n  _s();\n  const [hotels, setHotels] = useState([]);\n  const [paises, setPaises] = useState([]);\n  const [capacidades, setCapacidades] = useState([]);\n  const [paisSeleccionado, setPaisSeleccionado] = useState('');\n  const [fechaIngreso, setFechaIngreso] = useState('');\n  const [fechaSalida, setFechaSalida] = useState('');\n  const [numeroPersonas, setNumeroPersonas] = useState(1);\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  const [hotelImages, setHotelImages] = useState({});\n  const [roomTypes, setRoomTypes] = useState({});\n  const {\n    user\n  } = useUser();\n\n  // PAL SEGUNDO FILTRO:\n\n  const [selectedRoomType, setSelectedRoomType] = useState('');\n  const [selectedRating, setSelectedRating] = useState('0');\n  const [showFilters, setShowFilters] = useState(false);\n  const [orderByPrice, setOrderByPrice] = useState('');\n  const applyAdditionalFilters = () => {\n    let filteredHotels = [...hotels]; // Copia del estado actual\n\n    if (orderByPrice === 'asc') {\n      filteredHotels.forEach(hotel => {\n        hotel.rooms.sort((a, b) => a.precioxnoche - b.precioxnoche);\n      });\n    } else if (orderByPrice === 'desc') {\n      filteredHotels.forEach(hotel => {\n        hotel.rooms.sort((a, b) => b.precioxnoche - a.precioxnoche);\n      });\n    }\n    if (selectedRoomType) {\n      filteredHotels = filteredHotels.map(hotel => ({\n        ...hotel,\n        rooms: hotel.rooms.filter(room => room.tipo_habitacion.toString() === selectedRoomType)\n      }));\n    }\n    if (selectedRating > 0) {\n      filteredHotels.forEach(hotel => {\n        hotel.rooms = hotel.rooms.filter(room => room.valuacion >= selectedRating);\n      });\n    }\n    setHotels(filteredHotels);\n  };\n\n  // FIN SEGUNDO FILTRO\n\n  const tiposHabitacion = {\n    1: 'Doble',\n    2: 'Junior Suite',\n    3: 'Suite',\n    4: 'Gran Suite'\n  };\n  useEffect(() => {\n    fetchRoomTypes();\n    fetchPaises();\n    fetchCapacidades();\n    fetchInitialHotelsAndRooms();\n  }, []);\n  const fetchCapacidades = async () => {\n    try {\n      const response = await fetch(process.env.REACT_APP_BACKEND_URL + '/habitaciones/capacidades');\n      if (!response.ok) throw new Error('No se pudieron cargar las capacidades de las habitaciones');\n      const capacidadesUnicas = await response.json();\n      setCapacidades(capacidadesUnicas.sort((a, b) => a - b));\n    } catch (error) {\n      console.error('Error al cargar capacidades:', error);\n      setError('Error al cargar las capacidades de las habitaciones.');\n    }\n  };\n\n  //IMAGENES\n\n  const fetchHotelImages = async idHotel => {\n    try {\n      const response = await fetch(process.env.REACT_APP_BACKEND_URL + `/hoteles/${idHotel}/imagenes`);\n      if (!response.ok) throw new Error('Error al cargar imágenes del hotel');\n      const images = await response.json();\n      setHotelImages(prevImages => ({\n        ...prevImages,\n        [idHotel]: images\n      }));\n    } catch (error) {\n      console.error('Error fetching hotel images:', error);\n    }\n  };\n  useEffect(() => {\n    hotels.forEach(hotel => {\n      fetchHotelImages(hotel.id_hotel);\n    });\n  }, [hotels]);\n  const fetchRoomTypes = async () => {\n    try {\n      const response = await fetch(process.env.REACT_APP_BACKEND_URL + '/tipos_habitacion');\n      if (!response.ok) throw new Error('Error al cargar los tipos de habitación');\n      const data = await response.json();\n      setRoomTypes(data.reduce((map, roomType) => {\n        map[roomType.id_tipo] = roomType.imagenUrl || defaultRoomImage;\n        return map;\n      }, {}));\n    } catch (error) {\n      setError('Error al cargar los tipos de habitación: ' + error.message);\n    }\n  };\n  const fetchPaises = async () => {\n    try {\n      const response = await fetch(process.env.REACT_APP_BACKEND_URL + '/hoteles/pais');\n      if (!response.ok) throw new Error('Error al cargar los países');\n      const data = await response.json();\n      setPaises(data);\n    } catch (error) {\n      setError('Error al cargar los países: ' + error.message);\n    }\n  };\n  const fetchInitialHotelsAndRooms = async () => {\n    try {\n      const hotelsResponse = await fetch(process.env.REACT_APP_BACKEND_URL + '/hoteles');\n      if (!hotelsResponse.ok) throw new Error('Error al cargar hoteles');\n      const hotelsData = await hotelsResponse.json();\n      const roomTypesResponse = await fetch(process.env.REACT_APP_BACKEND_URL + '/tipos_habitacion');\n      if (!roomTypesResponse.ok) throw new Error('Error al cargar tipos de habitación');\n      const roomTypesData = await roomTypesResponse.json();\n      const roomTypesMap = roomTypesData.reduce((acc, roomType) => {\n        acc[roomType.id_tipo] = roomType.imagenUrl || defaultRoomImage;\n        return acc;\n      }, {});\n      const hotelsWithRooms = await Promise.all(hotelsData.map(async hotel => {\n        const roomsResponse = await fetch(process.env.REACT_APP_BACKEND_URL + `/habitaciones?hotelId=${hotel.id_hotel}`);\n        if (!roomsResponse.ok) {\n          console.error('Error fetching rooms for hotel', hotel.id_hotel);\n          return {\n            ...hotel,\n            rooms: []\n          }; // Devuelve el hotel sin modificarlo si hay un error\n        }\n        const roomsData = await roomsResponse.json();\n        const roomsWithImages = roomsData.map(room => ({\n          ...room,\n          imagenUrl: roomTypesMap[room.tipo_habitacion] || defaultRoomImage\n        }));\n        return {\n          ...hotel,\n          rooms: roomsWithImages\n        };\n      }));\n      setHotels(hotelsWithRooms);\n    } catch (error) {\n      console.error('Error loading initial hotels and rooms:', error);\n      setError('Error al cargar hoteles y habitaciones iniciales: ' + error.message);\n    }\n  };\n  const fetchHotelsAndRoomsFiltered = async () => {\n    let queryParams = `?pais=${paisSeleccionado}&fechaIngreso=${fechaIngreso}&fechaSalida=${fechaSalida}&numeroPersonas=${numeroPersonas}`;\n    if (user && user.id) {\n      queryParams += `&usuarioId=${user.id}`; // Agrega el ID del usuario a los parámetros de la consulta\n    }\n    try {\n      const response = await fetch(process.env.REACT_APP_BACKEND_URL + `/habitaciones/buscar${queryParams}`);\n      if (!response.ok) throw new Error('Error al cargar hoteles y habitaciones filtradas');\n      const filteredRooms = await response.json();\n\n      // trasn las habitaciones filtradas en una estructura de hoteles con habitaciones\n      const hotelsMap = {};\n      for (const room of filteredRooms) {\n        if (!hotelsMap[room.id_hotel]) {\n          // Si el hotel no está en el mapa, regresa y basicmente lo busca en los hoteles cargados inicialmente\n          const hotelData = hotels.find(hotel => hotel.id_hotel === room.id_hotel);\n          hotelsMap[room.id_hotel] = {\n            ...hotelData,\n            rooms: []\n          };\n        }\n        hotelsMap[room.id_hotel].rooms.push({\n          ...room,\n          imagenUrl: roomTypes[room.tipo_habitacion] || defaultRoomImage\n        });\n      }\n      setHotels(Object.values(hotelsMap));\n    } catch (error) {\n      setError('Error al cargar hoteles y habitaciones filtradas: ' + error.message);\n    }\n  };\n  const handleSearch = e => {\n    e.preventDefault();\n    fetchHotelsAndRoomsFiltered();\n    setShowFilters(true);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"my-5\",\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSearch,\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"pais\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Pa\\xEDs\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"select\",\n              value: paisSeleccionado,\n              onChange: e => setPaisSeleccionado(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Seleccione un pa\\xEDs\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 17\n              }, this), paises.map(pais => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: pais,\n                children: pais\n              }, pais, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"fechaIngreso\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Fecha de Ingreso\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"date\",\n              value: fechaIngreso,\n              onChange: e => setFechaIngreso(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"fechaSalida\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Fecha de Salida\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"date\",\n              value: fechaSalida,\n              onChange: e => setFechaSalida(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"capacidadPersonas\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Capacidad de Personas\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"select\",\n              value: numeroPersonas,\n              onChange: e => setNumeroPersonas(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Seleccione capacidad\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 17\n              }, this), capacidades.map((capacidad, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: capacidad,\n                children: [capacidad, \" personas\"]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            type: \"submit\",\n            children: \"Buscar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this), showFilters && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Ordenar Precio\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"select\",\n            value: orderByPrice,\n            onChange: e => setOrderByPrice(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Seleccione orden\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"asc\",\n              children: \"Menor a Mayor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"desc\",\n              children: \"Mayor a Menor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"roomType\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Tipo de Habitaci\\xF3n\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"select\",\n              value: selectedRoomType,\n              onChange: e => setSelectedRoomType(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Todos los tipos\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 19\n              }, this), Object.entries(tiposHabitacion).map(([key, value]) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: key,\n                children: value\n              }, key, false, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Rating m\\xEDnimo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"select\",\n            value: selectedRating,\n            onChange: e => setSelectedRating(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"0\",\n              children: \"Todos los ratings\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 15\n            }, this), [1, 2, 3, 4, 5].map(rating => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: rating,\n              children: rating\n            }, rating, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: applyAdditionalFilters,\n            children: \"Aplicar Filtros Adicionales\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 11\n      }, this)\n    }, void 0, false), /*#__PURE__*/_jsxDEV(Row, {\n      children: hotels.length > 0 ? hotels.map((hotel, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: 10,\n          className: \"mt-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Hotel: \", hotel.nombre]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [hotel.ciudad, \", \", hotel.pais]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Direcci\\xF3n: \", hotel.direccion]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 9\n          }, this), hotelImages[hotel.id_hotel] && hotelImages[hotel.id_hotel].length > 0 && /*#__PURE__*/_jsxDEV(Carousel, {\n            interval: null,\n            children: hotelImages[hotel.id_hotel].map((image, imageIndex) =>\n            /*#__PURE__*/\n            // AQUI YA SE PUEDE usar el índice porque está dentro de un contexto que ya es único (el hotel específico)\n            _jsxDEV(Carousel.Item, {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"d-block w-100\",\n                src: image,\n                alt: `Imagen ${imageIndex + 1} del hotel ${hotel.nombre}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 328,\n                columnNumber: 17\n              }, this)\n            }, imageIndex, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 15\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 7\n        }, this), hotel.rooms && hotel.rooms.map((room, roomIndex) =>\n        /*#__PURE__*/\n        // ACA, SE combina id de habitación con un índice para las claves de las habitaciones\n        _jsxDEV(Col, {\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n              variant: \"top\",\n              src: room.imagenUrl || defaultRoomImage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                children: [\"Habitaci\\xF3n: \", tiposHabitacion[room.tipo_habitacion]]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 347,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: [\"N\\xFAmero de habitaci\\xF3n: \", room.numero_habitacion]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 348,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: [\"Capacidad m\\xE1xima: \", room.capacidad_personas, \" personas\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 349,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: [\"Precio por noche: $\", room.precioxnoche]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 350,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: [\"Valoraci\\xF3n: \", room.valuacion, \" estrellas\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 351,\n                columnNumber: 15\n              }, this), room.estado === 'activo' && /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"primary\",\n                onClick: () => {\n                  console.log(\"Navigating with hotelDetails:\", hotel);\n                  navigate('/checkout', {\n                    state: {\n                      hotelDetails: {\n                        ...hotel\n                      },\n                      roomDetails: {\n                        ...room,\n                        idHabitacion: room.id_habitacion,\n                        roomType: tiposHabitacion[room.tipo_habitacion],\n                        roomPrice: room.precioxnoche,\n                        capacidadPersonas: room.capacidad_personas\n                      }\n                    }\n                  });\n                },\n                children: \"Reservar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 353,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(Comentarios, {\n                idHabitacion: room.id_habitacion\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 371,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 346,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 11\n          }, this)\n        }, `${room.id_habitacion}-${roomIndex}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 9\n        }, this))]\n      }, `${hotel.id_hotel}-${index}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-4\",\n          children: \"No se encontraron hoteles. Por favor, intenta nuevamente con diferentes criterios de b\\xFAsqueda.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 227,\n    columnNumber: 5\n  }, this);\n};\n_s(HomePage, \"149mZszYJ+iynq9kPGu8a5TOTns=\", false, function () {\n  return [useNavigate, useUser];\n});\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","useEffect","Container","Row","Col","Card","Button","Form","Alert","Image","Carousel","useNavigate","defaultRoomImage","Comentarios","useUser","jsxDEV","_jsxDEV","Fragment","_Fragment","HomePage","_s","hotels","setHotels","paises","setPaises","capacidades","setCapacidades","paisSeleccionado","setPaisSeleccionado","fechaIngreso","setFechaIngreso","fechaSalida","setFechaSalida","numeroPersonas","setNumeroPersonas","error","setError","navigate","hotelImages","setHotelImages","roomTypes","setRoomTypes","user","selectedRoomType","setSelectedRoomType","selectedRating","setSelectedRating","showFilters","setShowFilters","orderByPrice","setOrderByPrice","applyAdditionalFilters","filteredHotels","forEach","hotel","rooms","sort","a","b","precioxnoche","map","filter","room","tipo_habitacion","toString","valuacion","tiposHabitacion","fetchRoomTypes","fetchPaises","fetchCapacidades","fetchInitialHotelsAndRooms","response","fetch","process","env","REACT_APP_BACKEND_URL","ok","Error","capacidadesUnicas","json","console","fetchHotelImages","idHotel","images","prevImages","id_hotel","data","reduce","roomType","id_tipo","imagenUrl","message","hotelsResponse","hotelsData","roomTypesResponse","roomTypesData","roomTypesMap","acc","hotelsWithRooms","Promise","all","roomsResponse","roomsData","roomsWithImages","fetchHotelsAndRoomsFiltered","queryParams","id","filteredRooms","hotelsMap","hotelData","find","push","Object","values","handleSearch","e","preventDefault","className","children","onSubmit","Group","controlId","Label","fileName","_jsxFileName","lineNumber","columnNumber","Control","as","value","onChange","target","pais","type","capacidad","index","variant","entries","key","rating","onClick","length","md","nombre","ciudad","direccion","interval","image","imageIndex","Item","src","alt","roomIndex","Img","Body","Title","Text","numero_habitacion","capacidad_personas","estado","log","state","hotelDetails","roomDetails","idHabitacion","id_habitacion","roomPrice","capacidadPersonas","_c","$RefreshReg$"],"sources":["/home/pmorales/Downloads/Proyecto-B2B/Hotel/frontend/sistema_hoteles/src/components/HomePage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Card, Button, Form, Alert, Image, Carousel } from 'react-bootstrap';\nimport { useNavigate } from 'react-router-dom';\nimport defaultRoomImage from './roomImage.jpg';\nimport Comentarios from './Comentarios';\nimport { useUser } from './UserContext';\n\nconst HomePage = () => {\n  const [hotels, setHotels] = useState([]);\n  const [paises, setPaises] = useState([]);\n  const [capacidades, setCapacidades] = useState([]);\n  const [paisSeleccionado, setPaisSeleccionado] = useState('');\n  const [fechaIngreso, setFechaIngreso] = useState('');\n  const [fechaSalida, setFechaSalida] = useState('');\n  const [numeroPersonas, setNumeroPersonas] = useState(1);\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  const [hotelImages, setHotelImages] = useState({});\n  const [roomTypes, setRoomTypes] = useState({});\n  const { user } = useUser();  \n\n\n// PAL SEGUNDO FILTRO:\n\nconst [selectedRoomType, setSelectedRoomType] = useState('');\nconst [selectedRating, setSelectedRating] = useState('0'); \nconst [showFilters, setShowFilters] = useState(false);\nconst [orderByPrice, setOrderByPrice] = useState('');\n\n\nconst applyAdditionalFilters = () => {\n  let filteredHotels = [...hotels]; // Copia del estado actual\n\n  if (orderByPrice === 'asc') {\n    filteredHotels.forEach(hotel => {\n      hotel.rooms.sort((a, b) => a.precioxnoche - b.precioxnoche);\n    });\n  } else if (orderByPrice === 'desc') {\n    filteredHotels.forEach(hotel => {\n      hotel.rooms.sort((a, b) => b.precioxnoche - a.precioxnoche);\n    });\n  }\n\n  if (selectedRoomType) {\n    filteredHotels = filteredHotels.map(hotel => ({\n      ...hotel,\n      rooms: hotel.rooms.filter(room => room.tipo_habitacion.toString() === selectedRoomType)\n    }));\n  }\n\n  if (selectedRating > 0) {\n    filteredHotels.forEach(hotel => {\n      hotel.rooms = hotel.rooms.filter(room => room.valuacion >= selectedRating);\n    });\n  }\n\n  setHotels(filteredHotels);\n};\n\n\n// FIN SEGUNDO FILTRO\n\n  const tiposHabitacion = {\n    1: 'Doble',\n    2: 'Junior Suite',\n    3: 'Suite',\n    4: 'Gran Suite'\n  };\n\n\n  useEffect(() => {\n    fetchRoomTypes();\n    fetchPaises();\n    fetchCapacidades();\n    fetchInitialHotelsAndRooms();\n  }, []);\n\n\n\n\n  const fetchCapacidades = async () => {\n    try {\n      const response = await fetch(process.env.REACT_APP_BACKEND_URL + '/habitaciones/capacidades');\n      if (!response.ok) throw new Error('No se pudieron cargar las capacidades de las habitaciones');\n      const capacidadesUnicas = await response.json();\n      setCapacidades(capacidadesUnicas.sort((a, b) => a - b));\n    } catch (error) {\n      console.error('Error al cargar capacidades:', error);\n      setError('Error al cargar las capacidades de las habitaciones.');\n    }\n  };\n\n\n\n\n  //IMAGENES\n\n  const fetchHotelImages = async (idHotel) => {\n    try {\n      const response = await fetch(process.env.REACT_APP_BACKEND_URL + `/hoteles/${idHotel}/imagenes`);\n      if (!response.ok) throw new Error('Error al cargar imágenes del hotel');\n      const images = await response.json();\n      setHotelImages(prevImages => ({ ...prevImages, [idHotel]: images }));\n    } catch (error) {\n      console.error('Error fetching hotel images:', error);\n    }\n  };\n\n  useEffect(() => {\n    hotels.forEach((hotel) => {\n      fetchHotelImages(hotel.id_hotel);\n    });\n  }, [hotels]);\n\n  \n\n  const fetchRoomTypes = async () => {\n    try {\n      const response = await fetch(process.env.REACT_APP_BACKEND_URL + '/tipos_habitacion');\n      if (!response.ok) throw new Error('Error al cargar los tipos de habitación');\n      const data = await response.json();\n      setRoomTypes(data.reduce((map, roomType) => {\n        map[roomType.id_tipo] = roomType.imagenUrl || defaultRoomImage; \n        return map;\n      }, {}));\n    } catch (error) {\n      setError('Error al cargar los tipos de habitación: ' + error.message);\n    }\n  };\n  \n\n\n\n  const fetchPaises = async () => {\n    try {\n      const response = await fetch(process.env.REACT_APP_BACKEND_URL + '/hoteles/pais');\n      if (!response.ok) throw new Error('Error al cargar los países');\n      const data = await response.json();\n      setPaises(data);\n    } catch (error) {\n      setError('Error al cargar los países: ' + error.message);\n    }\n  };\n\n  const fetchInitialHotelsAndRooms = async () => {\n    try {\n      const hotelsResponse = await fetch(process.env.REACT_APP_BACKEND_URL + '/hoteles');\n      if (!hotelsResponse.ok) throw new Error('Error al cargar hoteles');\n      const hotelsData = await hotelsResponse.json();\n  \n      const roomTypesResponse = await fetch(process.env.REACT_APP_BACKEND_URL + '/tipos_habitacion');\n      if (!roomTypesResponse.ok) throw new Error('Error al cargar tipos de habitación');\n      const roomTypesData = await roomTypesResponse.json();\n  \n      const roomTypesMap = roomTypesData.reduce((acc, roomType) => {\n        acc[roomType.id_tipo] = roomType.imagenUrl || defaultRoomImage;\n        return acc;\n      }, {});\n  \n      const hotelsWithRooms = await Promise.all(hotelsData.map(async (hotel) => {\n        const roomsResponse = await fetch(process.env.REACT_APP_BACKEND_URL + `/habitaciones?hotelId=${hotel.id_hotel}`); \n        if (!roomsResponse.ok) {\n          console.error('Error fetching rooms for hotel', hotel.id_hotel); \n          return { ...hotel, rooms: [] }; // Devuelve el hotel sin modificarlo si hay un error\n        }\n        const roomsData = await roomsResponse.json();\n        const roomsWithImages = roomsData.map(room => ({\n          ...room,\n          imagenUrl: roomTypesMap[room.tipo_habitacion] || defaultRoomImage\n        }));\n        return { ...hotel, rooms: roomsWithImages };\n      }));\n  \n      setHotels(hotelsWithRooms);\n    } catch (error) {\n      console.error('Error loading initial hotels and rooms:', error);\n      setError('Error al cargar hoteles y habitaciones iniciales: ' + error.message);\n    }\n  };\n  \n  \n  \n\n  const fetchHotelsAndRoomsFiltered = async () => {\n    let queryParams = `?pais=${paisSeleccionado}&fechaIngreso=${fechaIngreso}&fechaSalida=${fechaSalida}&numeroPersonas=${numeroPersonas}`;\n    if (user && user.id) {\n        queryParams += `&usuarioId=${user.id}`;  // Agrega el ID del usuario a los parámetros de la consulta\n    }\n\n    try {\n      const response = await fetch(process.env.REACT_APP_BACKEND_URL + `/habitaciones/buscar${queryParams}`);\n      if (!response.ok) throw new Error('Error al cargar hoteles y habitaciones filtradas');\n      const filteredRooms = await response.json();\n  \n      // trasn las habitaciones filtradas en una estructura de hoteles con habitaciones\n      const hotelsMap = {};\n      for (const room of filteredRooms) {\n        if (!hotelsMap[room.id_hotel]) {\n          // Si el hotel no está en el mapa, regresa y basicmente lo busca en los hoteles cargados inicialmente\n          const hotelData = hotels.find(hotel => hotel.id_hotel === room.id_hotel);\n          hotelsMap[room.id_hotel] = {\n            ...hotelData,\n            rooms: []\n          };\n        }\n        hotelsMap[room.id_hotel].rooms.push({\n          ...room,\n          imagenUrl: roomTypes[room.tipo_habitacion] || defaultRoomImage\n        });\n      }\n  \n      setHotels(Object.values(hotelsMap));\n    } catch (error) {\n      setError('Error al cargar hoteles y habitaciones filtradas: ' + error.message);\n    }\n  };\n  \n\n  const handleSearch = (e) => {\n    e.preventDefault();\n    fetchHotelsAndRoomsFiltered();\n    setShowFilters(true);\n\n  };\n\n  return (\n    <Container className=\"my-5\">\n      {/* Filtro de búsqueda */}\n      <Form onSubmit={handleSearch}>\n        <Row className=\"mb-4\">\n          <Col>\n            <Form.Group controlId=\"pais\">\n              <Form.Label>País</Form.Label>\n              <Form.Control as=\"select\" value={paisSeleccionado} onChange={e => setPaisSeleccionado(e.target.value)}>\n                <option value=\"\">Seleccione un país</option>\n                {paises.map(pais => (\n                  <option key={pais} value={pais}>{pais}</option>\n                ))}\n              </Form.Control>\n            </Form.Group>\n          </Col>\n          <Col>\n            <Form.Group controlId=\"fechaIngreso\">\n              <Form.Label>Fecha de Ingreso</Form.Label>\n              <Form.Control type=\"date\" value={fechaIngreso} onChange={e => setFechaIngreso(e.target.value)} />\n            </Form.Group>\n          </Col>\n          <Col>\n            <Form.Group controlId=\"fechaSalida\">\n              <Form.Label>Fecha de Salida</Form.Label>\n              <Form.Control type=\"date\" value={fechaSalida} onChange={e => setFechaSalida(e.target.value)} />\n            </Form.Group>\n          </Col>\n         <Col>\n            <Form.Group controlId=\"capacidadPersonas\">\n              <Form.Label>Capacidad de Personas</Form.Label>\n              <Form.Control as=\"select\" value={numeroPersonas} onChange={e => setNumeroPersonas(e.target.value)}>\n                <option value=\"\">Seleccione capacidad</option>\n                {capacidades.map((capacidad, index) => (\n                  <option key={index} value={capacidad}>{capacidad} personas</option>\n                ))}\n              </Form.Control>\n            </Form.Group>\n          </Col>\n          <Col>\n            <Button variant=\"primary\" type=\"submit\">Buscar</Button>\n          </Col>\n        </Row>\n      </Form>\n\n\n\n      {showFilters && (\n        <>\n          <Row className=\"mb-4\">\n            <Col>\n            <Form.Label>Ordenar Precio</Form.Label>\n            <Form.Control as=\"select\" value={orderByPrice} onChange={e => setOrderByPrice(e.target.value)}>\n              <option value=\"\">Seleccione orden</option>\n              <option value=\"asc\">Menor a Mayor</option>\n              <option value=\"desc\">Mayor a Menor</option>\n            </Form.Control>\n            </Col>\n            <Col>\n              <Form.Group controlId=\"roomType\">\n                <Form.Label>Tipo de Habitación</Form.Label>\n                <Form.Control as=\"select\" value={selectedRoomType} onChange={e => setSelectedRoomType(e.target.value)}>\n                  <option value=\"\">Todos los tipos</option>\n                  {Object.entries(tiposHabitacion).map(([key, value]) => (\n                    <option key={key} value={key}>{value}</option>\n                  ))}\n                </Form.Control>\n              </Form.Group>\n              </Col>\n          <Col>\n            <Form.Label>Rating mínimo</Form.Label>\n            <Form.Control as=\"select\" value={selectedRating} onChange={e => setSelectedRating(e.target.value)}>\n              <option value=\"0\">Todos los ratings</option>\n              {[1, 2, 3, 4, 5].map(rating => (\n                <option key={rating} value={rating}>{rating}</option>\n              ))}\n            </Form.Control>\n          </Col>\n          <Col>\n              <Button variant=\"primary\" onClick={applyAdditionalFilters}>Aplicar Filtros Adicionales</Button>\n            </Col>\n          </Row>\n        </>\n      )}\n      <Row>\n        {hotels.length > 0 ? (\n          hotels.map((hotel, index) => (\n            <React.Fragment key={`${hotel.id_hotel}-${index}`}>\n\n\n\n\n\n      <Col md={10} className=\"mt-4\">\n        <h3>Hotel: {hotel.nombre}</h3>\n        <p>{hotel.ciudad}, {hotel.pais}</p>\n        <p>Dirección: {hotel.direccion}</p>\n        {hotelImages[hotel.id_hotel] && hotelImages[hotel.id_hotel].length > 0 && (\n          <Carousel interval={null}>\n            {hotelImages[hotel.id_hotel].map((image, imageIndex) => (\n              // AQUI YA SE PUEDE usar el índice porque está dentro de un contexto que ya es único (el hotel específico)\n              <Carousel.Item key={imageIndex}>\n                <img\n                  className=\"d-block w-100\"\n                  src={image}\n                  alt={`Imagen ${imageIndex + 1} del hotel ${hotel.nombre}`}\n                />\n              </Carousel.Item>\n            ))}\n          </Carousel>\n        )}\n      </Col>\n\n\n\n      {hotel.rooms && hotel.rooms.map((room, roomIndex) => (\n        // ACA, SE combina id de habitación con un índice para las claves de las habitaciones\n        <Col key={`${room.id_habitacion}-${roomIndex}`} md={6}>\n          <Card className=\"mb-3\">\n            <Card.Img variant=\"top\" src={room.imagenUrl || defaultRoomImage} />\n            <Card.Body>\n              <Card.Title>Habitación: {tiposHabitacion[room.tipo_habitacion]}</Card.Title>\n              <Card.Text>Número de habitación: {room.numero_habitacion}</Card.Text>\n              <Card.Text>Capacidad máxima: {room.capacidad_personas} personas</Card.Text>\n              <Card.Text>Precio por noche: ${room.precioxnoche}</Card.Text>\n              <Card.Text>Valoración: {room.valuacion} estrellas</Card.Text>\n              {room.estado === 'activo' && (\n          <Button variant=\"primary\" onClick={() => {\n            console.log(\"Navigating with hotelDetails:\", hotel);\n            navigate('/checkout', {\n              state: {\n                hotelDetails: { ...hotel },\n                roomDetails: {\n                  ...room,\n                  idHabitacion: room.id_habitacion,\n                  roomType: tiposHabitacion[room.tipo_habitacion],\n                  roomPrice: room.precioxnoche,\n                  capacidadPersonas: room.capacidad_personas\n                }\n              }\n            });\n          }}>\n            Reservar\n          </Button>\n        )}\n              <Comentarios idHabitacion={room.id_habitacion} />\n            </Card.Body>\n          </Card>\n        </Col>\n      ))}\n    </React.Fragment>\n  ))\n) : (\n  <Col>\n    <p className=\"mt-4\">No se encontraron hoteles. Por favor, intenta nuevamente con diferentes criterios de búsqueda.</p>\n  </Col>\n)}\n\n      </Row>\n    </Container>\n  );\n};\n\nexport default HomePage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}