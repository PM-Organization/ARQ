{"ast":null,"code":"var _jsxFileName = \"/home/pmorales/Downloads/Proyecto-B2B/Hotel/frontend/sistema_hoteles/src/components/HomePage.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Card, Button, Form, Alert, Image, Carousel } from 'react-bootstrap';\nimport { useNavigate } from 'react-router-dom';\nimport defaultRoomImage from './roomImage.jpg';\nimport Comentarios from './Comentarios';\nimport { useUser } from './UserContext';\nconst HomePage = () => {\n  const [hotels, setHotels] = useState([]);\n  const [paises, setPaises] = useState([]);\n  const [capacidades, setCapacidades] = useState([]);\n  const [paisSeleccionado, setPaisSeleccionado] = useState('');\n  const [fechaIngreso, setFechaIngreso] = useState('');\n  const [fechaSalida, setFechaSalida] = useState('');\n  const [numeroPersonas, setNumeroPersonas] = useState(1);\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  const [hotelImages, setHotelImages] = useState({});\n  const [roomTypes, setRoomTypes] = useState({});\n  const {\n    user\n  } = useUser();\n\n  // PAL SEGUNDO FILTRO:\n\n  const [selectedRoomType, setSelectedRoomType] = useState('');\n  const [selectedRating, setSelectedRating] = useState('0');\n  const [showFilters, setShowFilters] = useState(false);\n  const [orderByPrice, setOrderByPrice] = useState('');\n  const applyAdditionalFilters = () => {\n    let filteredHotels = [...hotels]; // Copia del estado actual\n\n    if (orderByPrice === 'asc') {\n      filteredHotels.forEach(hotel => {\n        hotel.rooms.sort((a, b) => a.precioxnoche - b.precioxnoche);\n      });\n    } else if (orderByPrice === 'desc') {\n      filteredHotels.forEach(hotel => {\n        hotel.rooms.sort((a, b) => b.precioxnoche - a.precioxnoche);\n      });\n    }\n    if (selectedRoomType) {\n      filteredHotels = filteredHotels.map(hotel => ({\n        ...hotel,\n        rooms: hotel.rooms.filter(room => room.tipo_habitacion.toString() === selectedRoomType)\n      }));\n    }\n    if (selectedRating > 0) {\n      filteredHotels.forEach(hotel => {\n        hotel.rooms = hotel.rooms.filter(room => room.valuacion >= selectedRating);\n      });\n    }\n    setHotels(filteredHotels);\n  };\n\n  // FIN SEGUNDO FILTRO\n\n  const tiposHabitacion = {\n    1: 'Doble',\n    2: 'Junior Suite',\n    3: 'Suite',\n    4: 'Gran Suite'\n  };\n  useEffect(() => {\n    fetchRoomTypes();\n    fetchPaises();\n    fetchCapacidades();\n    fetchInitialHotelsAndRooms();\n  }, []);\n  const fetchCapacidades = async () => {\n    try {\n      const response = await fetch('http://localhost:8080/habitaciones/capacidades');\n      if (!response.ok) throw new Error('No se pudieron cargar las capacidades de las habitaciones');\n      const capacidadesUnicas = await response.json();\n      setCapacidades(capacidadesUnicas.sort((a, b) => a - b));\n    } catch (error) {\n      console.error('Error al cargar capacidades:', error);\n      setError('Error al cargar las capacidades de las habitaciones.');\n    }\n  };\n\n  //IMAGENES\n\n  const fetchHotelImages = async idHotel => {\n    try {\n      const response = await fetch(`http://localhost:8080/hoteles/${idHotel}/imagenes`);\n      if (!response.ok) throw new Error('Error al cargar imágenes del hotel');\n      const images = await response.json();\n      setHotelImages(prevImages => ({\n        ...prevImages,\n        [idHotel]: images\n      }));\n    } catch (error) {\n      console.error('Error fetching hotel images:', error);\n    }\n  };\n  useEffect(() => {\n    hotels.forEach(hotel => {\n      fetchHotelImages(hotel.id_hotel);\n    });\n  }, [hotels]);\n  const fetchRoomTypes = async () => {\n    try {\n      const response = await fetch('http://localhost:8080/tipos_habitacion');\n      if (!response.ok) throw new Error('Error al cargar los tipos de habitación');\n      const data = await response.json();\n      setRoomTypes(data.reduce((map, roomType) => {\n        map[roomType.id_tipo] = roomType.imagenUrl || defaultRoomImage;\n        return map;\n      }, {}));\n    } catch (error) {\n      setError('Error al cargar los tipos de habitación: ' + error.message);\n    }\n  };\n  const fetchPaises = async () => {\n    try {\n      const response = await fetch('http://localhost:8080/hoteles/pais');\n      if (!response.ok) throw new Error('Error al cargar los países');\n      const data = await response.json();\n      setPaises(data);\n    } catch (error) {\n      setError('Error al cargar los países: ' + error.message);\n    }\n  };\n  const fetchInitialHotelsAndRooms = async () => {\n    try {\n      const hotelsResponse = await fetch('http://localhost:8080/hoteles');\n      if (!hotelsResponse.ok) throw new Error('Error al cargar hoteles');\n      const hotelsData = await hotelsResponse.json();\n      const roomTypesResponse = await fetch('http://localhost:8080/tipos_habitacion');\n      if (!roomTypesResponse.ok) throw new Error('Error al cargar tipos de habitación');\n      const roomTypesData = await roomTypesResponse.json();\n      const roomTypesMap = roomTypesData.reduce((acc, roomType) => {\n        acc[roomType.id_tipo] = roomType.imagenUrl || defaultRoomImage;\n        return acc;\n      }, {});\n      const hotelsWithRooms = await Promise.all(hotelsData.map(async hotel => {\n        const roomsResponse = await fetch(`http://localhost:8080/habitaciones?hotelId=${hotel.id_hotel}`);\n        if (!roomsResponse.ok) {\n          console.error('Error fetching rooms for hotel', hotel.id_hotel);\n          return {\n            ...hotel,\n            rooms: []\n          }; // Devuelve el hotel sin modificarlo si hay un error\n        }\n        const roomsData = await roomsResponse.json();\n        const roomsWithImages = roomsData.map(room => ({\n          ...room,\n          imagenUrl: roomTypesMap[room.tipo_habitacion] || defaultRoomImage\n        }));\n        return {\n          ...hotel,\n          rooms: roomsWithImages\n        };\n      }));\n      setHotels(hotelsWithRooms);\n    } catch (error) {\n      console.error('Error loading initial hotels and rooms:', error);\n      setError('Error al cargar hoteles y habitaciones iniciales: ' + error.message);\n    }\n  };\n  const fetchHotelsAndRoomsFiltered = async () => {\n    let queryParams = `?pais=${paisSeleccionado}&fechaIngreso=${fechaIngreso}&fechaSalida=${fechaSalida}&numeroPersonas=${numeroPersonas}`;\n    if (user && user.id) {\n      queryParams += `&usuarioId=${user.id}`; // Agrega el ID del usuario a los parámetros de la consulta\n    }\n    try {\n      const response = await fetch(`http://localhost:8080/habitaciones/buscar${queryParams}`);\n      if (!response.ok) throw new Error('Error al cargar hoteles y habitaciones filtradas');\n      const filteredRooms = await response.json();\n\n      // trasn las habitaciones filtradas en una estructura de hoteles con habitaciones\n      const hotelsMap = {};\n      for (const room of filteredRooms) {\n        if (!hotelsMap[room.id_hotel]) {\n          // Si el hotel no está en el mapa, regresa y basicmente lo busca en los hoteles cargados inicialmente\n          const hotelData = hotels.find(hotel => hotel.id_hotel === room.id_hotel);\n          hotelsMap[room.id_hotel] = {\n            ...hotelData,\n            rooms: []\n          };\n        }\n        hotelsMap[room.id_hotel].rooms.push({\n          ...room,\n          imagenUrl: roomTypes[room.tipo_habitacion] || defaultRoomImage\n        });\n      }\n      setHotels(Object.values(hotelsMap));\n    } catch (error) {\n      setError('Error al cargar hoteles y habitaciones filtradas: ' + error.message);\n    }\n  };\n  const handleSearch = e => {\n    e.preventDefault();\n    fetchHotelsAndRoomsFiltered();\n    setShowFilters(true);\n  };\n  return /*#__PURE__*/React.createElement(Container, {\n    className: \"my-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSearch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"pais\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 15\n    }\n  }, \"Pa\\xEDs\"), /*#__PURE__*/React.createElement(Form.Control, {\n    as: \"select\",\n    value: paisSeleccionado,\n    onChange: e => setPaisSeleccionado(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 17\n    }\n  }, \"Seleccione un pa\\xEDs\"), paises.map(pais => /*#__PURE__*/React.createElement(\"option\", {\n    key: pais,\n    value: pais,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 19\n    }\n  }, pais))))), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"fechaIngreso\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 15\n    }\n  }, \"Fecha de Ingreso\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"date\",\n    value: fechaIngreso,\n    onChange: e => setFechaIngreso(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"fechaSalida\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 15\n    }\n  }, \"Fecha de Salida\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"date\",\n    value: fechaSalida,\n    onChange: e => setFechaSalida(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"capacidadPersonas\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 15\n    }\n  }, \"Capacidad de Personas\"), /*#__PURE__*/React.createElement(Form.Control, {\n    as: \"select\",\n    value: numeroPersonas,\n    onChange: e => setNumeroPersonas(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 17\n    }\n  }, \"Seleccione capacidad\"), capacidades.map((capacidad, index) => /*#__PURE__*/React.createElement(\"option\", {\n    key: index,\n    value: capacidad,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 19\n    }\n  }, capacidad, \" personas\"))))), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 13\n    }\n  }, \"Buscar\")))), showFilters && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 13\n    }\n  }, \"Ordenar Precio\"), /*#__PURE__*/React.createElement(Form.Control, {\n    as: \"select\",\n    value: orderByPrice,\n    onChange: e => setOrderByPrice(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 15\n    }\n  }, \"Seleccione orden\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"asc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 15\n    }\n  }, \"Menor a Mayor\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"desc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 15\n    }\n  }, \"Mayor a Menor\"))), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"roomType\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 17\n    }\n  }, \"Tipo de Habitaci\\xF3n\"), /*#__PURE__*/React.createElement(Form.Control, {\n    as: \"select\",\n    value: selectedRoomType,\n    onChange: e => setSelectedRoomType(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 19\n    }\n  }, \"Todos los tipos\"), Object.entries(tiposHabitacion).map(([key, value]) => /*#__PURE__*/React.createElement(\"option\", {\n    key: key,\n    value: key,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 21\n    }\n  }, value))))), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 13\n    }\n  }, \"Rating m\\xEDnimo\"), /*#__PURE__*/React.createElement(Form.Control, {\n    as: \"select\",\n    value: selectedRating,\n    onChange: e => setSelectedRating(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 15\n    }\n  }, \"Todos los ratings\"), [1, 2, 3, 4, 5].map(rating => /*#__PURE__*/React.createElement(\"option\", {\n    key: rating,\n    value: rating,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 17\n    }\n  }, rating)))), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    onClick: applyAdditionalFilters,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 15\n    }\n  }, \"Aplicar Filtros Adicionales\")))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 7\n    }\n  }, hotels.length > 0 ? hotels.map((hotel, index) => /*#__PURE__*/React.createElement(React.Fragment, {\n    key: `${hotel.id_hotel}-${index}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 10,\n    className: \"mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 9\n    }\n  }, \"Hotel: \", hotel.nombre), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 9\n    }\n  }, hotel.ciudad, \", \", hotel.pais), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 9\n    }\n  }, \"Direcci\\xF3n: \", hotel.direccion), hotelImages[hotel.id_hotel] && hotelImages[hotel.id_hotel].length > 0 && /*#__PURE__*/React.createElement(Carousel, {\n    interval: null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 11\n    }\n  }, hotelImages[hotel.id_hotel].map((image, imageIndex) =>\n  /*#__PURE__*/\n  // AQUI YA SE PUEDE usar el índice porque está dentro de un contexto que ya es único (el hotel específico)\n  React.createElement(Carousel.Item, {\n    key: imageIndex,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"d-block w-100\",\n    src: image,\n    alt: `Imagen ${imageIndex + 1} del hotel ${hotel.nombre}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 17\n    }\n  }))))), hotel.rooms && hotel.rooms.map((room, roomIndex) =>\n  /*#__PURE__*/\n  // ACA, SE combina id de habitación con un índice para las claves de las habitaciones\n  React.createElement(Col, {\n    key: `${room.id_habitacion}-${roomIndex}`,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Card.Img, {\n    variant: \"top\",\n    src: room.imagenUrl || defaultRoomImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 15\n    }\n  }, \"Habitaci\\xF3n: \", tiposHabitacion[room.tipo_habitacion]), /*#__PURE__*/React.createElement(Card.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 15\n    }\n  }, \"N\\xFAmero de habitaci\\xF3n: \", room.numero_habitacion), /*#__PURE__*/React.createElement(Card.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 15\n    }\n  }, \"Capacidad m\\xE1xima: \", room.capacidad_personas, \" personas\"), /*#__PURE__*/React.createElement(Card.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 15\n    }\n  }, \"Precio por noche: $\", room.precioxnoche), /*#__PURE__*/React.createElement(Card.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 15\n    }\n  }, \"Valoraci\\xF3n: \", room.valuacion, \" estrellas\"), room.estado === 'activo' && /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    onClick: () => {\n      console.log(\"Navigating with hotelDetails:\", hotel);\n      navigate('/checkout', {\n        state: {\n          hotelDetails: {\n            ...hotel\n          },\n          roomDetails: {\n            ...room,\n            idHabitacion: room.id_habitacion,\n            roomType: tiposHabitacion[room.tipo_habitacion],\n            roomPrice: room.precioxnoche,\n            capacidadPersonas: room.capacidad_personas\n          }\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 11\n    }\n  }, \"Reservar\"), /*#__PURE__*/React.createElement(Comentarios, {\n    idHabitacion: room.id_habitacion,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 15\n    }\n  }))))))) : /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 5\n    }\n  }, \"No se encontraron hoteles. Por favor, intenta nuevamente con diferentes criterios de b\\xFAsqueda.\"))));\n};\nexport default HomePage;","map":{"version":3,"names":["React","useState","useEffect","Container","Row","Col","Card","Button","Form","Alert","Image","Carousel","useNavigate","defaultRoomImage","Comentarios","useUser","HomePage","hotels","setHotels","paises","setPaises","capacidades","setCapacidades","paisSeleccionado","setPaisSeleccionado","fechaIngreso","setFechaIngreso","fechaSalida","setFechaSalida","numeroPersonas","setNumeroPersonas","error","setError","navigate","hotelImages","setHotelImages","roomTypes","setRoomTypes","user","selectedRoomType","setSelectedRoomType","selectedRating","setSelectedRating","showFilters","setShowFilters","orderByPrice","setOrderByPrice","applyAdditionalFilters","filteredHotels","forEach","hotel","rooms","sort","a","b","precioxnoche","map","filter","room","tipo_habitacion","toString","valuacion","tiposHabitacion","fetchRoomTypes","fetchPaises","fetchCapacidades","fetchInitialHotelsAndRooms","response","fetch","ok","Error","capacidadesUnicas","json","console","fetchHotelImages","idHotel","images","prevImages","id_hotel","data","reduce","roomType","id_tipo","imagenUrl","message","hotelsResponse","hotelsData","roomTypesResponse","roomTypesData","roomTypesMap","acc","hotelsWithRooms","Promise","all","roomsResponse","roomsData","roomsWithImages","fetchHotelsAndRoomsFiltered","queryParams","id","filteredRooms","hotelsMap","hotelData","find","push","Object","values","handleSearch","e","preventDefault","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","Group","controlId","Label","Control","as","value","onChange","target","pais","key","type","capacidad","index","variant","Fragment","entries","rating","onClick","length","md","nombre","ciudad","direccion","interval","image","imageIndex","Item","src","alt","roomIndex","id_habitacion","Img","Body","Title","Text","numero_habitacion","capacidad_personas","estado","log","state","hotelDetails","roomDetails","idHabitacion","roomPrice","capacidadPersonas"],"sources":["/home/pmorales/Downloads/Proyecto-B2B/Hotel/frontend/sistema_hoteles/src/components/HomePage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Card, Button, Form, Alert, Image, Carousel } from 'react-bootstrap';\nimport { useNavigate } from 'react-router-dom';\nimport defaultRoomImage from './roomImage.jpg';\nimport Comentarios from './Comentarios';\nimport { useUser } from './UserContext';\n\nconst HomePage = () => {\n  const [hotels, setHotels] = useState([]);\n  const [paises, setPaises] = useState([]);\n  const [capacidades, setCapacidades] = useState([]);\n  const [paisSeleccionado, setPaisSeleccionado] = useState('');\n  const [fechaIngreso, setFechaIngreso] = useState('');\n  const [fechaSalida, setFechaSalida] = useState('');\n  const [numeroPersonas, setNumeroPersonas] = useState(1);\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  const [hotelImages, setHotelImages] = useState({});\n  const [roomTypes, setRoomTypes] = useState({});\n  const { user } = useUser();  \n\n\n// PAL SEGUNDO FILTRO:\n\nconst [selectedRoomType, setSelectedRoomType] = useState('');\nconst [selectedRating, setSelectedRating] = useState('0'); \nconst [showFilters, setShowFilters] = useState(false);\nconst [orderByPrice, setOrderByPrice] = useState('');\n\n\nconst applyAdditionalFilters = () => {\n  let filteredHotels = [...hotels]; // Copia del estado actual\n\n  if (orderByPrice === 'asc') {\n    filteredHotels.forEach(hotel => {\n      hotel.rooms.sort((a, b) => a.precioxnoche - b.precioxnoche);\n    });\n  } else if (orderByPrice === 'desc') {\n    filteredHotels.forEach(hotel => {\n      hotel.rooms.sort((a, b) => b.precioxnoche - a.precioxnoche);\n    });\n  }\n\n  if (selectedRoomType) {\n    filteredHotels = filteredHotels.map(hotel => ({\n      ...hotel,\n      rooms: hotel.rooms.filter(room => room.tipo_habitacion.toString() === selectedRoomType)\n    }));\n  }\n\n  if (selectedRating > 0) {\n    filteredHotels.forEach(hotel => {\n      hotel.rooms = hotel.rooms.filter(room => room.valuacion >= selectedRating);\n    });\n  }\n\n  setHotels(filteredHotels);\n};\n\n\n// FIN SEGUNDO FILTRO\n\n  const tiposHabitacion = {\n    1: 'Doble',\n    2: 'Junior Suite',\n    3: 'Suite',\n    4: 'Gran Suite'\n  };\n\n\n  useEffect(() => {\n    fetchRoomTypes();\n    fetchPaises();\n    fetchCapacidades();\n    fetchInitialHotelsAndRooms();\n  }, []);\n\n\n\n\n  const fetchCapacidades = async () => {\n    try {\n      const response = await fetch('http://localhost:8080/habitaciones/capacidades');\n      if (!response.ok) throw new Error('No se pudieron cargar las capacidades de las habitaciones');\n      const capacidadesUnicas = await response.json();\n      setCapacidades(capacidadesUnicas.sort((a, b) => a - b));\n    } catch (error) {\n      console.error('Error al cargar capacidades:', error);\n      setError('Error al cargar las capacidades de las habitaciones.');\n    }\n  };\n\n\n\n\n  //IMAGENES\n\n  const fetchHotelImages = async (idHotel) => {\n    try {\n      const response = await fetch(`http://localhost:8080/hoteles/${idHotel}/imagenes`);\n      if (!response.ok) throw new Error('Error al cargar imágenes del hotel');\n      const images = await response.json();\n      setHotelImages(prevImages => ({ ...prevImages, [idHotel]: images }));\n    } catch (error) {\n      console.error('Error fetching hotel images:', error);\n    }\n  };\n\n  useEffect(() => {\n    hotels.forEach((hotel) => {\n      fetchHotelImages(hotel.id_hotel);\n    });\n  }, [hotels]);\n\n  \n\n  const fetchRoomTypes = async () => {\n    try {\n      const response = await fetch('http://localhost:8080/tipos_habitacion');\n      if (!response.ok) throw new Error('Error al cargar los tipos de habitación');\n      const data = await response.json();\n      setRoomTypes(data.reduce((map, roomType) => {\n        map[roomType.id_tipo] = roomType.imagenUrl || defaultRoomImage; \n        return map;\n      }, {}));\n    } catch (error) {\n      setError('Error al cargar los tipos de habitación: ' + error.message);\n    }\n  };\n  \n\n\n\n  const fetchPaises = async () => {\n    try {\n      const response = await fetch('http://localhost:8080/hoteles/pais');\n      if (!response.ok) throw new Error('Error al cargar los países');\n      const data = await response.json();\n      setPaises(data);\n    } catch (error) {\n      setError('Error al cargar los países: ' + error.message);\n    }\n  };\n\n  const fetchInitialHotelsAndRooms = async () => {\n    try {\n      const hotelsResponse = await fetch('http://localhost:8080/hoteles');\n      if (!hotelsResponse.ok) throw new Error('Error al cargar hoteles');\n      const hotelsData = await hotelsResponse.json();\n  \n      const roomTypesResponse = await fetch('http://localhost:8080/tipos_habitacion');\n      if (!roomTypesResponse.ok) throw new Error('Error al cargar tipos de habitación');\n      const roomTypesData = await roomTypesResponse.json();\n  \n      const roomTypesMap = roomTypesData.reduce((acc, roomType) => {\n        acc[roomType.id_tipo] = roomType.imagenUrl || defaultRoomImage;\n        return acc;\n      }, {});\n  \n      const hotelsWithRooms = await Promise.all(hotelsData.map(async (hotel) => {\n        const roomsResponse = await fetch(`http://localhost:8080/habitaciones?hotelId=${hotel.id_hotel}`); \n        if (!roomsResponse.ok) {\n          console.error('Error fetching rooms for hotel', hotel.id_hotel); \n          return { ...hotel, rooms: [] }; // Devuelve el hotel sin modificarlo si hay un error\n        }\n        const roomsData = await roomsResponse.json();\n        const roomsWithImages = roomsData.map(room => ({\n          ...room,\n          imagenUrl: roomTypesMap[room.tipo_habitacion] || defaultRoomImage\n        }));\n        return { ...hotel, rooms: roomsWithImages };\n      }));\n  \n      setHotels(hotelsWithRooms);\n    } catch (error) {\n      console.error('Error loading initial hotels and rooms:', error);\n      setError('Error al cargar hoteles y habitaciones iniciales: ' + error.message);\n    }\n  };\n  \n  \n  \n\n  const fetchHotelsAndRoomsFiltered = async () => {\n    let queryParams = `?pais=${paisSeleccionado}&fechaIngreso=${fechaIngreso}&fechaSalida=${fechaSalida}&numeroPersonas=${numeroPersonas}`;\n    if (user && user.id) {\n        queryParams += `&usuarioId=${user.id}`;  // Agrega el ID del usuario a los parámetros de la consulta\n    }\n\n    try {\n        const response = await fetch(`http://localhost:8080/habitaciones/buscar${queryParams}`);\n        if (!response.ok) throw new Error('Error al cargar hoteles y habitaciones filtradas');\n        const filteredRooms = await response.json();\n  \n  \n      // trasn las habitaciones filtradas en una estructura de hoteles con habitaciones\n      const hotelsMap = {};\n      for (const room of filteredRooms) {\n        if (!hotelsMap[room.id_hotel]) {\n          // Si el hotel no está en el mapa, regresa y basicmente lo busca en los hoteles cargados inicialmente\n          const hotelData = hotels.find(hotel => hotel.id_hotel === room.id_hotel);\n          hotelsMap[room.id_hotel] = {\n            ...hotelData,\n            rooms: []\n          };\n        }\n        hotelsMap[room.id_hotel].rooms.push({\n          ...room,\n          imagenUrl: roomTypes[room.tipo_habitacion] || defaultRoomImage\n        });\n      }\n  \n      setHotels(Object.values(hotelsMap));\n    } catch (error) {\n      setError('Error al cargar hoteles y habitaciones filtradas: ' + error.message);\n    }\n  };\n  \n\n  const handleSearch = (e) => {\n    e.preventDefault();\n    fetchHotelsAndRoomsFiltered();\n    setShowFilters(true);\n\n  };\n\n  return (\n    <Container className=\"my-5\">\n      {/* Filtro de búsqueda */}\n      <Form onSubmit={handleSearch}>\n        <Row className=\"mb-4\">\n          <Col>\n            <Form.Group controlId=\"pais\">\n              <Form.Label>País</Form.Label>\n              <Form.Control as=\"select\" value={paisSeleccionado} onChange={e => setPaisSeleccionado(e.target.value)}>\n                <option value=\"\">Seleccione un país</option>\n                {paises.map(pais => (\n                  <option key={pais} value={pais}>{pais}</option>\n                ))}\n              </Form.Control>\n            </Form.Group>\n          </Col>\n          <Col>\n            <Form.Group controlId=\"fechaIngreso\">\n              <Form.Label>Fecha de Ingreso</Form.Label>\n              <Form.Control type=\"date\" value={fechaIngreso} onChange={e => setFechaIngreso(e.target.value)} />\n            </Form.Group>\n          </Col>\n          <Col>\n            <Form.Group controlId=\"fechaSalida\">\n              <Form.Label>Fecha de Salida</Form.Label>\n              <Form.Control type=\"date\" value={fechaSalida} onChange={e => setFechaSalida(e.target.value)} />\n            </Form.Group>\n          </Col>\n         <Col>\n            <Form.Group controlId=\"capacidadPersonas\">\n              <Form.Label>Capacidad de Personas</Form.Label>\n              <Form.Control as=\"select\" value={numeroPersonas} onChange={e => setNumeroPersonas(e.target.value)}>\n                <option value=\"\">Seleccione capacidad</option>\n                {capacidades.map((capacidad, index) => (\n                  <option key={index} value={capacidad}>{capacidad} personas</option>\n                ))}\n              </Form.Control>\n            </Form.Group>\n          </Col>\n          <Col>\n            <Button variant=\"primary\" type=\"submit\">Buscar</Button>\n          </Col>\n        </Row>\n      </Form>\n\n\n\n      {showFilters && (\n        <>\n          <Row className=\"mb-4\">\n            <Col>\n            <Form.Label>Ordenar Precio</Form.Label>\n            <Form.Control as=\"select\" value={orderByPrice} onChange={e => setOrderByPrice(e.target.value)}>\n              <option value=\"\">Seleccione orden</option>\n              <option value=\"asc\">Menor a Mayor</option>\n              <option value=\"desc\">Mayor a Menor</option>\n            </Form.Control>\n            </Col>\n            <Col>\n              <Form.Group controlId=\"roomType\">\n                <Form.Label>Tipo de Habitación</Form.Label>\n                <Form.Control as=\"select\" value={selectedRoomType} onChange={e => setSelectedRoomType(e.target.value)}>\n                  <option value=\"\">Todos los tipos</option>\n                  {Object.entries(tiposHabitacion).map(([key, value]) => (\n                    <option key={key} value={key}>{value}</option>\n                  ))}\n                </Form.Control>\n              </Form.Group>\n              </Col>\n          <Col>\n            <Form.Label>Rating mínimo</Form.Label>\n            <Form.Control as=\"select\" value={selectedRating} onChange={e => setSelectedRating(e.target.value)}>\n              <option value=\"0\">Todos los ratings</option>\n              {[1, 2, 3, 4, 5].map(rating => (\n                <option key={rating} value={rating}>{rating}</option>\n              ))}\n            </Form.Control>\n          </Col>\n          <Col>\n              <Button variant=\"primary\" onClick={applyAdditionalFilters}>Aplicar Filtros Adicionales</Button>\n            </Col>\n          </Row>\n        </>\n      )}\n      <Row>\n        {hotels.length > 0 ? (\n          hotels.map((hotel, index) => (\n            <React.Fragment key={`${hotel.id_hotel}-${index}`}>\n\n\n\n\n\n      <Col md={10} className=\"mt-4\">\n        <h3>Hotel: {hotel.nombre}</h3>\n        <p>{hotel.ciudad}, {hotel.pais}</p>\n        <p>Dirección: {hotel.direccion}</p>\n        {hotelImages[hotel.id_hotel] && hotelImages[hotel.id_hotel].length > 0 && (\n          <Carousel interval={null}>\n            {hotelImages[hotel.id_hotel].map((image, imageIndex) => (\n              // AQUI YA SE PUEDE usar el índice porque está dentro de un contexto que ya es único (el hotel específico)\n              <Carousel.Item key={imageIndex}>\n                <img\n                  className=\"d-block w-100\"\n                  src={image}\n                  alt={`Imagen ${imageIndex + 1} del hotel ${hotel.nombre}`}\n                />\n              </Carousel.Item>\n            ))}\n          </Carousel>\n        )}\n      </Col>\n\n\n\n      {hotel.rooms && hotel.rooms.map((room, roomIndex) => (\n        // ACA, SE combina id de habitación con un índice para las claves de las habitaciones\n        <Col key={`${room.id_habitacion}-${roomIndex}`} md={6}>\n          <Card className=\"mb-3\">\n            <Card.Img variant=\"top\" src={room.imagenUrl || defaultRoomImage} />\n            <Card.Body>\n              <Card.Title>Habitación: {tiposHabitacion[room.tipo_habitacion]}</Card.Title>\n              <Card.Text>Número de habitación: {room.numero_habitacion}</Card.Text>\n              <Card.Text>Capacidad máxima: {room.capacidad_personas} personas</Card.Text>\n              <Card.Text>Precio por noche: ${room.precioxnoche}</Card.Text>\n              <Card.Text>Valoración: {room.valuacion} estrellas</Card.Text>\n              {room.estado === 'activo' && (\n          <Button variant=\"primary\" onClick={() => {\n            console.log(\"Navigating with hotelDetails:\", hotel);\n            navigate('/checkout', {\n              state: {\n                hotelDetails: { ...hotel },\n                roomDetails: {\n                  ...room,\n                  idHabitacion: room.id_habitacion,\n                  roomType: tiposHabitacion[room.tipo_habitacion],\n                  roomPrice: room.precioxnoche,\n                  capacidadPersonas: room.capacidad_personas\n                }\n              }\n            });\n          }}>\n            Reservar\n          </Button>\n        )}\n              <Comentarios idHabitacion={room.id_habitacion} />\n            </Card.Body>\n          </Card>\n        </Col>\n      ))}\n    </React.Fragment>\n  ))\n) : (\n  <Col>\n    <p className=\"mt-4\">No se encontraron hoteles. Por favor, intenta nuevamente con diferentes criterios de búsqueda.</p>\n  </Col>\n)}\n\n      </Row>\n    </Container>\n  );\n};\n\nexport default HomePage;"],"mappings":"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"},"metadata":{},"sourceType":"module"}