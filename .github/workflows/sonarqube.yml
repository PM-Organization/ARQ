name: SonarQube Pull Request Analysis

# Ejecuta el workflow en cada pull request a las ramas dev, uat, y main.
on:
  pull_request:
    branches:
      - dev
      - uat
      - main

jobs:
  sonar:
    runs-on: ubuntu-latest

    steps:
      # Paso 1: Checkout del código
      - name: Checkout code
        uses: actions/checkout@v2

      # Paso 2: Configurar JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      # Paso 3: Cachear dependencias de Maven
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven

      # Paso 4: Ejecutar análisis de SonarQube
      - name: SonarQube Analysis
        working-directory: Hotel/backend/sistema-hoteles-be # Directorio donde se encuentra el pom.xml
        run: |
          mvn clean verify sonar:sonar \
            -Dsonar.projectKey=ARQ-PROJECT \
            -Dsonar.projectName="ARQ PROJECT" \
            -Dsonar.projectVersion=1.0 \
            -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }} \
            -Dsonar.login=${{ secrets.SONAR_LOGIN }} \
            -Dsonar.projectToken=${{ secrets.SONAR_PROJECT_KEY }}